"use strict";(self.webpackChunkrich_textarea=self.webpackChunkrich_textarea||[]).push([[435],{"./node_modules/@tanstack/react-form/dist/esm/useForm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>useForm});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");class Store{constructor(initialState,options){this.listeners=new Set,this._batching=!1,this._flushing=0,this.subscribe=listener=>{var _a,_b;this.listeners.add(listener);let unsub=null==(_b=null==(_a=this.options)?void 0:_a.onSubscribe)?void 0:_b.call(_a,listener,this);return()=>{this.listeners.delete(listener),null==unsub||unsub()}},this.setState=updater=>{var _a,_b,_c;let previous=this.state;this.state=(null==(_a=this.options)?void 0:_a.updateFn)?this.options.updateFn(previous)(updater):updater(previous),null==(_c=null==(_b=this.options)?void 0:_b.onUpdate)||_c.call(_b),this._flush()},this._flush=()=>{if(this._batching)return;let flushId=++this._flushing;this.listeners.forEach(listener=>{this._flushing===flushId&&listener()})},this.batch=cb=>{if(this._batching)return cb();this._batching=!0,cb(),this._batching=!1,this._flush()},this.state=initialState,this.options=options}}function functionalUpdate(updater,input){return"function"==typeof updater?updater(input):updater}function getBy(obj,path){return makePathArray(path).reduce((current,pathPart)=>{if(void 0!==current)return current[pathPart]},obj)}function setBy(obj,_path,updater){let path=makePathArray(_path);function doSet(parent){if(!path.length)return functionalUpdate(updater,parent);let key=path.shift();if("string"==typeof key)return"object"==typeof parent?{...parent,[key]:doSet(parent[key])}:{[key]:doSet()};if(Array.isArray(parent)&&void 0!==key){let prefix=parent.slice(0,key);return[...prefix.length?prefix:Array(key),doSet(parent[key]),...parent.slice(key+1)]}return[...Array(key),doSet()]}return doSet(obj)}function deleteBy(obj,_path){let path=makePathArray(_path);function doDelete(parent){if(!parent)return;if(1===path.length){let finalPath=path[0],{[finalPath]:remove,...rest}=parent;return rest}let key=path.shift();if("string"==typeof key&&"object"==typeof parent)return{...parent,[key]:doDelete(parent[key])};if("number"==typeof key&&Array.isArray(parent)){if(key>=parent.length)return parent;let prefix=parent.slice(0,key);return[...prefix.length?prefix:Array(key),doDelete(parent[key]),...parent.slice(key+1)]}throw Error("It seems we have created an infinite loop in deleteBy. ")}return doDelete(obj)}let reFindNumbers0=/^(\d*)$/gm,reFindNumbers1=/\.(\d*)\./gm,reFindNumbers2=/^(\d*)\./gm,reFindNumbers3=/\.(\d*$)/gm,reFindMultiplePeriods=/\.{2,}/gm,intPrefix="__int__",intReplace=`${intPrefix}$1`;function makePathArray(str){if("string"!=typeof str)throw Error("Path must be a string.");return str.replace("[",".").replace("]","").replace(reFindNumbers0,intReplace).replace(reFindNumbers1,`.${intReplace}.`).replace(reFindNumbers2,`${intReplace}.`).replace(reFindNumbers3,`.${intReplace}`).replace(reFindMultiplePeriods,".").split(".").map(d=>0===d.indexOf(intPrefix)?parseInt(d.substring(intPrefix.length),10):d)}function isNonEmptyArray(obj){return!(Array.isArray(obj)&&0===obj.length)}function getAsyncValidatorArray(cause,options){let{asyncDebounceMs}=options,{onChangeAsync,onBlurAsync,onSubmitAsync,onBlurAsyncDebounceMs,onChangeAsyncDebounceMs,onSubmitAsyncDebounceMs}=options.validators||{},defaultDebounceMs=asyncDebounceMs??0,changeValidator={cause:"change",validate:onChangeAsync,debounceMs:onChangeAsyncDebounceMs??defaultDebounceMs},blurValidator={cause:"blur",validate:onBlurAsync,debounceMs:onBlurAsyncDebounceMs??defaultDebounceMs};switch(cause){case"submit":return[changeValidator,blurValidator,{cause:"submit",validate:onSubmitAsync,debounceMs:onSubmitAsyncDebounceMs??defaultDebounceMs}];case"server":return[];case"blur":return[blurValidator];default:return[changeValidator]}}function getSyncValidatorArray(cause,options){let{onChange,onBlur,onSubmit}=options.validators||{},changeValidator={cause:"change",validate:onChange},blurValidator={cause:"blur",validate:onBlur},serverValidator={cause:"server",validate:()=>void 0};switch(cause){case"submit":return[changeValidator,blurValidator,{cause:"submit",validate:onSubmit},serverValidator];case"server":return[serverValidator];case"blur":return[blurValidator,serverValidator];default:return[changeValidator,serverValidator]}}function getDefaultFormState(defaultState){return{values:defaultState.values??{},errors:defaultState.errors??[],errorMap:defaultState.errorMap??{},fieldMeta:defaultState.fieldMeta??{},canSubmit:defaultState.canSubmit??!0,isFieldsValid:defaultState.isFieldsValid??!1,isFieldsValidating:defaultState.isFieldsValidating??!1,isFormValid:defaultState.isFormValid??!1,isFormValidating:defaultState.isFormValidating??!1,isSubmitted:defaultState.isSubmitted??!1,isSubmitting:defaultState.isSubmitting??!1,isTouched:defaultState.isTouched??!1,isValid:defaultState.isValid??!1,isValidating:defaultState.isValidating??!1,submissionAttempts:defaultState.submissionAttempts??0,validationMetaMap:defaultState.validationMetaMap??{onChange:void 0,onBlur:void 0,onSubmit:void 0,onMount:void 0,onServer:void 0}}}class FormApi{constructor(opts){var _a;this.options={},this.fieldInfo={},this.prevTransformArray=[],this.mount=()=>{let{onMount}=this.options.validators||{};if(!onMount)return;let error=this.runValidator({validate:onMount,value:{value:this.state.values,formApi:this},type:"validate"});error&&this.store.setState(prev=>({...prev,errorMap:{...prev.errorMap,onMount:error}}))},this.update=options=>{if(!options)return;let oldOptions=this.options;this.options=options,this.store.batch(()=>{let shouldUpdateValues=options.defaultValues&&options.defaultValues!==oldOptions.defaultValues&&!this.state.isTouched,shouldUpdateState=options.defaultState!==oldOptions.defaultState&&!this.state.isTouched;this.store.setState(()=>getDefaultFormState(Object.assign({},this.state,shouldUpdateState?options.defaultState:{},shouldUpdateValues?{values:options.defaultValues}:{})))})},this.reset=()=>this.store.setState(()=>{var _a2;return getDefaultFormState({...this.options.defaultState,values:this.options.defaultValues??(null==(_a2=this.options.defaultState)?void 0:_a2.values)})}),this.validateAllFields=async cause=>{let fieldValidationPromises=[];return this.store.batch(()=>{Object.values(this.fieldInfo).forEach(field=>{Object.values(field.instances).forEach(instance=>{fieldValidationPromises.push(Promise.resolve().then(()=>instance.validate(cause))),instance.state.meta.isTouched||instance.setMeta(prev=>({...prev,isTouched:!0}))})})}),(await Promise.all(fieldValidationPromises)).flat()},this.validateSync=cause=>{let validates=getSyncValidatorArray(cause,this.options),hasErrored=!1;this.store.batch(()=>{for(let validateObj of validates){if(!validateObj.validate)continue;let error=normalizeError(this.runValidator({validate:validateObj.validate,value:{value:this.state.values,formApi:this},type:"validate"})),errorMapKey=getErrorMapKey(validateObj.cause);this.state.errorMap[errorMapKey]!==error&&this.store.setState(prev=>({...prev,errorMap:{...prev.errorMap,[errorMapKey]:error}})),error&&(hasErrored=!0)}});let submitErrKey=getErrorMapKey("submit");return this.state.errorMap[submitErrKey]&&"submit"!==cause&&!hasErrored&&this.store.setState(prev=>({...prev,errorMap:{...prev.errorMap,[submitErrKey]:void 0}})),{hasErrored}},this.validateAsync=async cause=>{let validates=getAsyncValidatorArray(cause,this.options);this.state.isFormValidating||this.store.setState(prev=>({...prev,isFormValidating:!0}));let promises=[];for(let validateObj of validates){if(!validateObj.validate)continue;let key=getErrorMapKey(validateObj.cause),fieldValidatorMeta=this.state.validationMetaMap[key];null==fieldValidatorMeta||fieldValidatorMeta.lastAbortController.abort();let controller=new AbortController;this.state.validationMetaMap[key]={lastAbortController:controller},promises.push(new Promise(async resolve=>{let rawError;try{rawError=await new Promise((rawResolve,rawReject)=>{setTimeout(async()=>{if(controller.signal.aborted)return rawResolve(void 0);try{rawResolve(await this.runValidator({validate:validateObj.validate,value:{value:this.state.values,formApi:this,signal:controller.signal},type:"validateAsync"}))}catch(e){rawReject(e)}},validateObj.debounceMs)})}catch(e){rawError=e}let error=normalizeError(rawError);this.store.setState(prev=>({...prev,errorMap:{...prev.errorMap,[getErrorMapKey(cause)]:error}})),resolve(error)}))}let results=[];return promises.length&&(results=await Promise.all(promises)),this.store.setState(prev=>({...prev,isFormValidating:!1})),results.filter(Boolean)},this.validate=cause=>{let{hasErrored}=this.validateSync(cause);return hasErrored&&!this.options.asyncAlways?this.state.errors:this.validateAsync(cause)},this.handleSubmit=async()=>{var _a2,_b,_c,_d,_e,_f;if(this.store.setState(old=>({...old,isSubmitted:!1,submissionAttempts:old.submissionAttempts+1})),!this.state.canSubmit)return;this.store.setState(d=>({...d,isSubmitting:!0}));let done=()=>{this.store.setState(prev=>({...prev,isSubmitting:!1}))};if(await this.validateAllFields("submit"),!this.state.isFieldsValid){done(),null==(_b=(_a2=this.options).onSubmitInvalid)||_b.call(_a2,{value:this.state.values,formApi:this});return}if(await this.validate("submit"),!this.state.isValid){done(),null==(_d=(_c=this.options).onSubmitInvalid)||_d.call(_c,{value:this.state.values,formApi:this});return}try{await (null==(_f=(_e=this.options).onSubmit)?void 0:_f.call(_e,{value:this.state.values,formApi:this})),this.store.batch(()=>{this.store.setState(prev=>({...prev,isSubmitted:!0})),done()})}catch(err){throw done(),err}},this.getFieldValue=field=>getBy(this.state.values,field),this.getFieldMeta=field=>this.state.fieldMeta[field],this.getFieldInfo=field=>{var _a2;return(_a2=this.fieldInfo)[field]||(_a2[field]={instances:{},validationMetaMap:{onChange:void 0,onBlur:void 0,onSubmit:void 0,onMount:void 0,onServer:void 0}})},this.setFieldMeta=(field,updater)=>{this.store.setState(prev=>({...prev,fieldMeta:{...prev.fieldMeta,[field]:functionalUpdate(updater,prev.fieldMeta[field])}}))},this.setFieldValue=(field,updater,opts2)=>{let touch=null==opts2?void 0:opts2.touch;this.store.batch(()=>{touch&&this.setFieldMeta(field,prev=>({...prev,isTouched:!0})),this.store.setState(prev=>({...prev,values:setBy(prev.values,field,updater)}))})},this.deleteField=field=>{this.store.setState(prev=>{let newState={...prev};return newState.values=deleteBy(newState.values,field),delete newState.fieldMeta[field],newState})},this.pushFieldValue=(field,value,opts2)=>this.setFieldValue(field,prev=>[...Array.isArray(prev)?prev:[],value],opts2),this.insertFieldValue=(field,index,value,opts2)=>{this.setFieldValue(field,prev=>prev.map((d,i)=>i===index?value:d),opts2)},this.removeFieldValue=(field,index,opts2)=>{this.setFieldValue(field,prev=>prev.filter((_d,i)=>i!==index),opts2)},this.swapFieldValues=(field,index1,index2)=>{this.setFieldValue(field,prev=>{let prev1=prev[index1],prev2=prev[index2];return setBy(setBy(prev,`${index1}`,prev2),`${index2}`,prev1)})},this.store=new Store(getDefaultFormState({...null==opts?void 0:opts.defaultState,values:(null==opts?void 0:opts.defaultValues)??(null==(_a=null==opts?void 0:opts.defaultState)?void 0:_a.values),isFormValid:!0}),{onUpdate:()=>{var _a2,_b;let{state}=this.store,fieldMetaValues=Object.values(state.fieldMeta),isFieldsValidating=fieldMetaValues.some(field=>null==field?void 0:field.isValidating),isFieldsValid=!fieldMetaValues.some(field=>(null==field?void 0:field.errorMap)&&isNonEmptyArray(Object.values(field.errorMap).filter(Boolean))),isTouched=fieldMetaValues.some(field=>null==field?void 0:field.isTouched),isValidating=isFieldsValidating||state.isFormValidating;state.errors=Object.values(state.errorMap).filter(val=>void 0!==val);let isFormValid=0===state.errors.length,isValid=isFieldsValid&&isFormValid,canSubmit=0===state.submissionAttempts&&!isTouched||!isValidating&&!state.isSubmitting&&isValid;state={...state,isFieldsValidating,isFieldsValid,isFormValid,isValid,canSubmit,isTouched},this.state=state,this.store.state=this.state;let transformArray=(null==(_a2=this.options.transform)?void 0:_a2.deps)??[];(transformArray.length!==this.prevTransformArray.length||transformArray.some((val,i)=>val!==this.prevTransformArray[i]))&&(null==(_b=this.options.transform)||_b.fn(this),this.store.state=this.state,this.prevTransformArray=transformArray)}}),this.state=this.store.state,this.update(opts||{})}runValidator(props){let adapter=this.options.validatorAdapter;return adapter&&"function"!=typeof props.validate?adapter()[props.type](props.value,props.validate):props.validate(props.value)}}function normalizeError(rawError){if(rawError)return"string"!=typeof rawError?"Invalid Form Values":rawError}function getErrorMapKey(cause){switch(cause){case"submit":return"onSubmit";case"blur":return"onBlur";case"mount":return"onMount";case"server":return"onServer";default:return"onChange"}}var with_selector=__webpack_require__("./node_modules/use-sync-external-store/shim/with-selector.js");function useStore(store,selector=d=>d){return(0,with_selector.useSyncExternalStoreWithSelector)(store.subscribe,()=>store.state,()=>store.state,selector,shallow)}function shallow(objA,objB){if(Object.is(objA,objB))return!0;if("object"!=typeof objA||null===objA||"object"!=typeof objB||null===objB)return!1;let keysA=Object.keys(objA);if(keysA.length!==Object.keys(objB).length)return!1;for(let i=0;i<keysA.length;i++)if(!Object.prototype.hasOwnProperty.call(objB,keysA[i])||!Object.is(objA[keysA[i]],objB[keysA[i]]))return!1;return!0}var rehackt=__webpack_require__("./node_modules/rehackt/index.js");let uid=0;class FieldApi{constructor(opts){this.options={},this.mount=()=>{let info=this.getInfo();info.instances[this.uid]=this;let unsubscribe=this.form.store.subscribe(()=>{this.store.batch(()=>{let nextValue=this.getValue(),nextMeta=this.getMeta();nextValue!==this.state.value&&this.store.setState(prev=>({...prev,value:nextValue})),nextMeta!==this.state.meta&&this.store.setState(prev=>({...prev,meta:nextMeta}))})});this.update(this.options);let{onMount}=this.options.validators||{};if(onMount){let error=this.runValidator({validate:onMount,value:{value:this.state.value,fieldApi:this},type:"validate"});error&&this.setMeta(prev=>({...prev,errorMap:{...null==prev?void 0:prev.errorMap,onMount:error}}))}return()=>{let preserveValue=this.options.preserveValue;unsubscribe(),preserveValue||(delete info.instances[this.uid],this.form.deleteField(this.name)),Object.keys(info.instances).length||preserveValue||delete this.form.fieldInfo[this.name]}},this.update=opts2=>{var _a;if(void 0===this.state.value){let formDefault=null==(_a=opts2.form.options.defaultValues)?void 0:_a[opts2.name];void 0!==opts2.defaultValue?this.setValue(opts2.defaultValue):void 0!==formDefault&&this.setValue(formDefault)}void 0===this._getMeta()&&this.setMeta(this.state.meta),this.options=opts2},this.getValue=()=>this.form.getFieldValue(this.name),this.setValue=(updater,options)=>{this.form.setFieldValue(this.name,updater,options),this.validate("change",this.state.value)},this._getMeta=()=>this.form.getFieldMeta(this.name),this.getMeta=()=>this._getMeta()??{isValidating:!1,isTouched:!1,touchedErrors:[],errors:[],errorMap:{},...this.options.defaultMeta},this.setMeta=updater=>this.form.setFieldMeta(this.name,updater),this.getInfo=()=>this.form.getFieldInfo(this.name),this.pushValue=value=>this.form.pushFieldValue(this.name,value),this.insertValue=(index,value)=>this.form.insertFieldValue(this.name,index,value),this.removeValue=index=>this.form.removeFieldValue(this.name,index),this.swapValues=(aIndex,bIndex)=>this.form.swapFieldValues(this.name,aIndex,bIndex),this.getSubField=name=>new FieldApi({name:`${this.name}.${name}`,form:this.form}),this.validateSync=(value=this.state.value,cause)=>{let validates=getSyncValidatorArray(cause,this.options),hasErrored=!1;this.form.store.batch(()=>{for(let validateObj of validates){if(!validateObj.validate)continue;let error=FieldApi_normalizeError(this.runValidator({validate:validateObj.validate,value:{value,fieldApi:this},type:"validate"})),errorMapKey=FieldApi_getErrorMapKey(validateObj.cause);this.state.meta.errorMap[errorMapKey]!==error&&this.setMeta(prev=>({...prev,errorMap:{...prev.errorMap,[FieldApi_getErrorMapKey(validateObj.cause)]:error}})),error&&(hasErrored=!0)}});let submitErrKey=FieldApi_getErrorMapKey("submit");return this.state.meta.errorMap[submitErrKey]&&"submit"!==cause&&!hasErrored&&this.setMeta(prev=>({...prev,errorMap:{...prev.errorMap,[submitErrKey]:void 0}})),{hasErrored}},this.validateAsync=async(value=this.state.value,cause)=>{let validates=getAsyncValidatorArray(cause,this.options);this.state.meta.isValidating||this.setMeta(prev=>({...prev,isValidating:!0}));let promises=[];for(let validateObj of validates){if(!validateObj.validate)continue;let key=FieldApi_getErrorMapKey(validateObj.cause),fieldValidatorMeta=this.getInfo().validationMetaMap[key];null==fieldValidatorMeta||fieldValidatorMeta.lastAbortController.abort();let controller=new AbortController;this.getInfo().validationMetaMap[key]={lastAbortController:controller},promises.push(new Promise(async resolve=>{let rawError;try{rawError=await new Promise((rawResolve,rawReject)=>{setTimeout(async()=>{if(controller.signal.aborted)return rawResolve(void 0);try{rawResolve(await this.runValidator({validate:validateObj.validate,value:{value,fieldApi:this,signal:controller.signal},type:"validateAsync"}))}catch(e){rawReject(e)}},validateObj.debounceMs)})}catch(e){rawError=e}let error=FieldApi_normalizeError(rawError);this.setMeta(prev=>({...prev,errorMap:{...null==prev?void 0:prev.errorMap,[FieldApi_getErrorMapKey(cause)]:error}})),resolve(error)}))}let results=[];return promises.length&&(results=await Promise.all(promises)),this.setMeta(prev=>({...prev,isValidating:!1})),results.filter(Boolean)},this.validate=(cause,value)=>{if(!this.state.meta.isTouched)return[];try{this.form.validate(cause)}catch(_){}let{hasErrored}=this.validateSync(value,cause);return hasErrored&&!this.options.asyncAlways?this.state.meta.errors:this.validateAsync(value,cause)},this.handleChange=updater=>{this.setValue(updater,{touch:!0})},this.handleBlur=()=>{this.state.meta.isTouched||(this.setMeta(prev=>({...prev,isTouched:!0})),this.validate("change")),this.validate("blur")},this.form=opts.form,this.uid=uid++,this.name=opts.name,void 0!==opts.defaultValue&&this.form.setFieldValue(this.name,opts.defaultValue),this.store=new Store({value:this.getValue(),meta:this._getMeta()??{isValidating:!1,isTouched:!1,touchedErrors:[],errors:[],errorMap:{},...opts.defaultMeta}},{onUpdate:()=>{let state=this.store.state;state.meta.errors=Object.values(state.meta.errorMap).filter(val=>void 0!==val),state.meta.touchedErrors=state.meta.isTouched?state.meta.errors:[],this.prevState=state,this.state=state}}),this.state=this.store.state,this.prevState=this.state,this.options=opts}runValidator(props){for(let adapter of[this.form.options.validatorAdapter,this.options.validatorAdapter])if(adapter&&"function"!=typeof props.validate)return adapter()[props.type](props.value,props.validate);return props.validate(props.value)}}function FieldApi_normalizeError(rawError){if(rawError)return"string"!=typeof rawError?"Invalid Form Values":rawError}function FieldApi_getErrorMapKey(cause){switch(cause){case"submit":return"onSubmit";case"blur":return"onBlur";case"mount":return"onMount";case"server":return"onServer";default:return"onChange"}}let formContext=(0,rehackt.createContext)(null);function useFormContext(){let formApi=(0,rehackt.useContext)(formContext);if(!formApi)throw Error("You are trying to use the form API outside of a form!");return formApi}let useIsomorphicLayoutEffect="undefined"!=typeof window?rehackt.useLayoutEffect:rehackt.useEffect,useIsomorphicEffectOnce=effect=>{let destroyFunc=(0,rehackt.useRef)(),effectCalled=(0,rehackt.useRef)(!1),renderAfterCalled=(0,rehackt.useRef)(!1),[val,setVal]=(0,rehackt.useState)(0);effectCalled.current&&(renderAfterCalled.current=!0),useIsomorphicLayoutEffect(()=>(effectCalled.current||(destroyFunc.current=effect(),effectCalled.current=!0),setVal(v=>v+1),()=>{renderAfterCalled.current&&destroyFunc.current&&destroyFunc.current()}),[])};function useField(opts){let{formApi,parentFieldName}=useFormContext(),[fieldApi]=(0,rehackt.useState)(()=>{let name=("number"==typeof opts.index?[parentFieldName,opts.index,opts.name]:[parentFieldName,opts.name]).filter(d=>void 0!==d).join("."),api=new FieldApi({...opts,form:formApi,name});return api.Field=Field,api});useIsomorphicLayoutEffect(()=>{fieldApi.update({...opts,form:formApi})}),useStore(fieldApi.store,"array"===opts.mode?state=>[state.meta,Object.keys(state.value).length]:void 0);let unmountFn=(0,rehackt.useRef)(null);return useIsomorphicEffectOnce(()=>()=>{var _a;null==(_a=unmountFn.current)||_a.call(unmountFn)}),unmountFn.current||(unmountFn.current=fieldApi.mount()),fieldApi}function Field({children,...fieldOptions}){let fieldApi=useField(fieldOptions);return(0,jsx_runtime.jsx)(formContext.Provider,{value:{formApi:fieldApi.form,parentFieldName:fieldApi.name},children:functionalUpdate(children,fieldApi)})}function useForm(opts){let[formApi]=(0,rehackt.useState)(()=>{let api=new FormApi(opts);return api.Provider=function Provider(props){return useIsomorphicLayoutEffect(api.mount,[]),(0,jsx_runtime.jsx)(formContext.Provider,{...props,value:{formApi:api}})},api.Field=Field,api.useField=useField,api.useStore=selector=>useStore(api.store,selector),api.Subscribe=props=>functionalUpdate(props.children,useStore(api.store,props.selector)),api});return formApi.useStore(state=>state.isSubmitting),useIsomorphicLayoutEffect(()=>{formApi.update(opts)}),formApi}},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./node_modules/rehackt/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/index.js")},"./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var e=__webpack_require__("./node_modules/react/index.js");function h(a,b){return a===b&&(0!==a||1/a==1/b)||a!=a&&b!=b}var k="function"==typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];return n(function(){c.value=d,c.getSnapshot=b,r(c)&&g({inst:c})},[a,d,b]),m(function(){return r(c)&&g({inst:c}),a(function(){r(c)&&g({inst:c})})},[a]),p(d),d}function r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u},"./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var h=__webpack_require__("./node_modules/react/index.js"),n=__webpack_require__("./node_modules/use-sync-external-store/shim/index.js");function p(a,b){return a===b&&(0!==a||1/a==1/b)||a!=a&&b!=b}var q="function"==typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;exports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;var d=r(a,(c=v(function(){function a(a){if(!c){if(c=!0,d=a,a=l(a),void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}if(b=k,q(d,a))return b;var e=l(a);return void 0!==g&&g(b,e)?b:(d=a,k=e)}var d,k,c=!1,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]))[0],c[1]);return u(function(){f.hasValue=!0,f.value=d},[d]),w(d),d}},"./node_modules/use-sync-external-store/shim/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js")},"./node_modules/use-sync-external-store/shim/with-selector.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js")}}]);
//# sourceMappingURL=435.51f83910.iframe.bundle.js.map