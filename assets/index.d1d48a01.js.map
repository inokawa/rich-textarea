{"version":3,"file":"index.d1d48a01.js","sources":["../../node_modules/esutils/lib/ast.js","../../node_modules/esutils/lib/code.js","../../node_modules/esutils/lib/keyword.js","../../node_modules/esutils/lib/utils.js","../../node_modules/doctrine/lib/utility.js","../../node_modules/doctrine/lib/typed.js","../../node_modules/doctrine/lib/doctrine.js","../../node_modules/@storybook/docs-tools/dist/index.mjs"],"sourcesContent":["/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    function isExpression(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'ArrayExpression':\n            case 'AssignmentExpression':\n            case 'BinaryExpression':\n            case 'CallExpression':\n            case 'ConditionalExpression':\n            case 'FunctionExpression':\n            case 'Identifier':\n            case 'Literal':\n            case 'LogicalExpression':\n            case 'MemberExpression':\n            case 'NewExpression':\n            case 'ObjectExpression':\n            case 'SequenceExpression':\n            case 'ThisExpression':\n            case 'UnaryExpression':\n            case 'UpdateExpression':\n                return true;\n        }\n        return false;\n    }\n\n    function isIterationStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'DoWhileStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'WhileStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'BlockStatement':\n            case 'BreakStatement':\n            case 'ContinueStatement':\n            case 'DebuggerStatement':\n            case 'DoWhileStatement':\n            case 'EmptyStatement':\n            case 'ExpressionStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'IfStatement':\n            case 'LabeledStatement':\n            case 'ReturnStatement':\n            case 'SwitchStatement':\n            case 'ThrowStatement':\n            case 'TryStatement':\n            case 'VariableDeclaration':\n            case 'WhileStatement':\n            case 'WithStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isSourceElement(node) {\n      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';\n    }\n\n    function trailingStatement(node) {\n        switch (node.type) {\n        case 'IfStatement':\n            if (node.alternate != null) {\n                return node.alternate;\n            }\n            return node.consequent;\n\n        case 'LabeledStatement':\n        case 'ForStatement':\n        case 'ForInStatement':\n        case 'WhileStatement':\n        case 'WithStatement':\n            return node.body;\n        }\n        return null;\n    }\n\n    function isProblematicIfStatement(node) {\n        var current;\n\n        if (node.type !== 'IfStatement') {\n            return false;\n        }\n        if (node.alternate == null) {\n            return false;\n        }\n        current = node.consequent;\n        do {\n            if (current.type === 'IfStatement') {\n                if (current.alternate == null)  {\n                    return true;\n                }\n            }\n            current = trailingStatement(current);\n        } while (current);\n\n        return false;\n    }\n\n    module.exports = {\n        isExpression: isExpression,\n        isStatement: isStatement,\n        isIterationStatement: isIterationStatement,\n        isSourceElement: isSourceElement,\n        isProblematicIfStatement: isProblematicIfStatement,\n\n        trailingStatement: trailingStatement\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;\n\n    // See `tools/generate-identifier-regex.js`.\n    ES5Regex = {\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\n    };\n\n    ES6Regex = {\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n    };\n\n    function isDecimalDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39;  // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39 ||  // 0..9\n            0x61 <= ch && ch <= 0x66 ||     // a..f\n            0x41 <= ch && ch <= 0x46;       // A..F\n    }\n\n    function isOctalDigit(ch) {\n        return ch >= 0x30 && ch <= 0x37;  // 0..7\n    }\n\n    // 7.2 White Space\n\n    NON_ASCII_WHITESPACES = [\n        0x1680,\n        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,\n        0x202F, 0x205F,\n        0x3000,\n        0xFEFF\n    ];\n\n    function isWhiteSpace(ch) {\n        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||\n            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function fromCodePoint(cp) {\n        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }\n        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);\n        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);\n        return cu1 + cu2;\n    }\n\n    IDENTIFIER_START = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_START[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    IDENTIFIER_PART = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_PART[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch >= 0x30 && ch <= 0x39 ||  // 0..9\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    function isIdentifierStartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierStartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    module.exports = {\n        isDecimalDigit: isDecimalDigit,\n        isHexDigit: isHexDigit,\n        isOctalDigit: isOctalDigit,\n        isWhiteSpace: isWhiteSpace,\n        isLineTerminator: isLineTerminator,\n        isIdentifierStartES5: isIdentifierStartES5,\n        isIdentifierPartES5: isIdentifierPartES5,\n        isIdentifierStartES6: isIdentifierStartES6,\n        isIdentifierPartES6: isIdentifierPartES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var code = require('./code');\n\n    function isStrictModeReservedWordES6(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isKeywordES5(id, strict) {\n        // yield should not be treated as keyword under non-strict mode.\n        if (!strict && id === 'yield') {\n            return false;\n        }\n        return isKeywordES6(id, strict);\n    }\n\n    function isKeywordES6(id, strict) {\n        if (strict && isStrictModeReservedWordES6(id)) {\n            return true;\n        }\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    function isReservedWordES5(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);\n    }\n\n    function isReservedWordES6(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    function isIdentifierNameES5(id) {\n        var i, iz, ch;\n\n        if (id.length === 0) { return false; }\n\n        ch = id.charCodeAt(0);\n        if (!code.isIdentifierStartES5(ch)) {\n            return false;\n        }\n\n        for (i = 1, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (!code.isIdentifierPartES5(ch)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function decodeUtf16(lead, trail) {\n        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n    }\n\n    function isIdentifierNameES6(id) {\n        var i, iz, ch, lowCh, check;\n\n        if (id.length === 0) { return false; }\n\n        check = code.isIdentifierStartES6;\n        for (i = 0, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (0xD800 <= ch && ch <= 0xDBFF) {\n                ++i;\n                if (i >= iz) { return false; }\n                lowCh = id.charCodeAt(i);\n                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {\n                    return false;\n                }\n                ch = decodeUtf16(ch, lowCh);\n            }\n            if (!check(ch)) {\n                return false;\n            }\n            check = code.isIdentifierPartES6;\n        }\n        return true;\n    }\n\n    function isIdentifierES5(id, strict) {\n        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);\n    }\n\n    function isIdentifierES6(id, strict) {\n        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);\n    }\n\n    module.exports = {\n        isKeywordES5: isKeywordES5,\n        isKeywordES6: isKeywordES6,\n        isReservedWordES5: isReservedWordES5,\n        isReservedWordES6: isReservedWordES6,\n        isRestrictedWord: isRestrictedWord,\n        isIdentifierNameES5: isIdentifierNameES5,\n        isIdentifierNameES6: isIdentifierNameES6,\n        isIdentifierES5: isIdentifierES5,\n        isIdentifierES6: isIdentifierES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\n(function () {\n    'use strict';\n\n    exports.ast = require('./ast');\n    exports.code = require('./code');\n    exports.keyword = require('./keyword');\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n * @fileoverview Utilities for Doctrine\n * @author Yusuke Suzuki <utatane.tea@gmail.com>\n */\n\n\n(function () {\n    'use strict';\n\n    var VERSION;\n\n    VERSION = require('../package.json').version;\n    exports.VERSION = VERSION;\n\n    function DoctrineError(message) {\n        this.name = 'DoctrineError';\n        this.message = message;\n    }\n    DoctrineError.prototype = (function () {\n        var Middle = function () { };\n        Middle.prototype = Error.prototype;\n        return new Middle();\n    }());\n    DoctrineError.prototype.constructor = DoctrineError;\n    exports.DoctrineError = DoctrineError;\n\n    function throwError(message) {\n        throw new DoctrineError(message);\n    }\n    exports.throwError = throwError;\n\n    exports.assert = require('assert');\n}());\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n * @fileoverview Type expression parser.\n * @author Yusuke Suzuki <utatane.tea@gmail.com>\n * @author Dan Tao <daniel.tao@gmail.com>\n * @author Andrew Eisenberg <andrew@eisenberg.as>\n */\n\n// \"typed\", the Type Expression Parser for doctrine.\n\n(function () {\n    'use strict';\n\n    var Syntax,\n        Token,\n        source,\n        length,\n        index,\n        previous,\n        token,\n        value,\n        esutils,\n        utility,\n        rangeOffset,\n        addRange;\n\n    esutils = require('esutils');\n    utility = require('./utility');\n\n    Syntax = {\n        NullableLiteral: 'NullableLiteral',\n        AllLiteral: 'AllLiteral',\n        NullLiteral: 'NullLiteral',\n        UndefinedLiteral: 'UndefinedLiteral',\n        VoidLiteral: 'VoidLiteral',\n        UnionType: 'UnionType',\n        ArrayType: 'ArrayType',\n        RecordType: 'RecordType',\n        FieldType: 'FieldType',\n        FunctionType: 'FunctionType',\n        ParameterType: 'ParameterType',\n        RestType: 'RestType',\n        NonNullableType: 'NonNullableType',\n        OptionalType: 'OptionalType',\n        NullableType: 'NullableType',\n        NameExpression: 'NameExpression',\n        TypeApplication: 'TypeApplication',\n        StringLiteralType: 'StringLiteralType',\n        NumericLiteralType: 'NumericLiteralType',\n        BooleanLiteralType: 'BooleanLiteralType'\n    };\n\n    Token = {\n        ILLEGAL: 0,    // ILLEGAL\n        DOT_LT: 1,     // .<\n        REST: 2,       // ...\n        LT: 3,         // <\n        GT: 4,         // >\n        LPAREN: 5,     // (\n        RPAREN: 6,     // )\n        LBRACE: 7,     // {\n        RBRACE: 8,     // }\n        LBRACK: 9,    // [\n        RBRACK: 10,    // ]\n        COMMA: 11,     // ,\n        COLON: 12,     // :\n        STAR: 13,      // *\n        PIPE: 14,      // |\n        QUESTION: 15,  // ?\n        BANG: 16,      // !\n        EQUAL: 17,     // =\n        NAME: 18,      // name token\n        STRING: 19,    // string\n        NUMBER: 20,    // number\n        EOF: 21\n    };\n\n    function isTypeName(ch) {\n        return '><(){}[],:*|?!='.indexOf(String.fromCharCode(ch)) === -1 && !esutils.code.isWhiteSpace(ch) && !esutils.code.isLineTerminator(ch);\n    }\n\n    function Context(previous, index, token, value) {\n        this._previous = previous;\n        this._index = index;\n        this._token = token;\n        this._value = value;\n    }\n\n    Context.prototype.restore = function () {\n        previous = this._previous;\n        index = this._index;\n        token = this._token;\n        value = this._value;\n    };\n\n    Context.save = function () {\n        return new Context(previous, index, token, value);\n    };\n\n    function maybeAddRange(node, range) {\n        if (addRange) {\n            node.range = [range[0] + rangeOffset, range[1] + rangeOffset];\n        }\n        return node;\n    }\n\n    function advance() {\n        var ch = source.charAt(index);\n        index += 1;\n        return ch;\n    }\n\n    function scanHexEscape(prefix) {\n        var i, len, ch, code = 0;\n\n        len = (prefix === 'u') ? 4 : 2;\n        for (i = 0; i < len; ++i) {\n            if (index < length && esutils.code.isHexDigit(source.charCodeAt(index))) {\n                ch = advance();\n                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n            } else {\n                return '';\n            }\n        }\n        return String.fromCharCode(code);\n    }\n\n    function scanString() {\n        var str = '', quote, ch, code, unescaped, restore; //TODO review removal octal = false\n        quote = source.charAt(index);\n        ++index;\n\n        while (index < length) {\n            ch = advance();\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = advance();\n                if (!esutils.code.isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'n':\n                        str += '\\n';\n                        break;\n                    case 'r':\n                        str += '\\r';\n                        break;\n                    case 't':\n                        str += '\\t';\n                        break;\n                    case 'u':\n                    case 'x':\n                        restore = index;\n                        unescaped = scanHexEscape(ch);\n                        if (unescaped) {\n                            str += unescaped;\n                        } else {\n                            index = restore;\n                            str += ch;\n                        }\n                        break;\n                    case 'b':\n                        str += '\\b';\n                        break;\n                    case 'f':\n                        str += '\\f';\n                        break;\n                    case 'v':\n                        str += '\\v';\n                        break;\n\n                    default:\n                        if (esutils.code.isOctalDigit(ch.charCodeAt(0))) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            // Deprecating unused code. TODO review removal\n                            //if (code !== 0) {\n                            //    octal = true;\n                            //}\n\n                            if (index < length && esutils.code.isOctalDigit(source.charCodeAt(index))) {\n                                //TODO Review Removal octal = true;\n                                code = code * 8 + '01234567'.indexOf(advance());\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        esutils.code.isOctalDigit(source.charCodeAt(index))) {\n                                    code = code * 8 + '01234567'.indexOf(advance());\n                                }\n                            }\n                            str += String.fromCharCode(code);\n                        } else {\n                            str += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    if (ch ===  '\\r' && source.charCodeAt(index) === 0x0A  /* '\\n' */) {\n                        ++index;\n                    }\n                }\n            } else if (esutils.code.isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            utility.throwError('unexpected quote');\n        }\n\n        value = str;\n        return Token.STRING;\n    }\n\n    function scanNumber() {\n        var number, ch;\n\n        number = '';\n        ch = source.charCodeAt(index);\n\n        if (ch !== 0x2E  /* '.' */) {\n            number = advance();\n            ch = source.charCodeAt(index);\n\n            if (number === '0') {\n                if (ch === 0x78  /* 'x' */ || ch === 0x58  /* 'X' */) {\n                    number += advance();\n                    while (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (!esutils.code.isHexDigit(ch)) {\n                            break;\n                        }\n                        number += advance();\n                    }\n\n                    if (number.length <= 2) {\n                        // only 0x\n                        utility.throwError('unexpected token');\n                    }\n\n                    if (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (esutils.code.isIdentifierStartES5(ch)) {\n                            utility.throwError('unexpected token');\n                        }\n                    }\n                    value = parseInt(number, 16);\n                    return Token.NUMBER;\n                }\n\n                if (esutils.code.isOctalDigit(ch)) {\n                    number += advance();\n                    while (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (!esutils.code.isOctalDigit(ch)) {\n                            break;\n                        }\n                        number += advance();\n                    }\n\n                    if (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (esutils.code.isIdentifierStartES5(ch) || esutils.code.isDecimalDigit(ch)) {\n                            utility.throwError('unexpected token');\n                        }\n                    }\n                    value = parseInt(number, 8);\n                    return Token.NUMBER;\n                }\n\n                if (esutils.code.isDecimalDigit(ch)) {\n                    utility.throwError('unexpected token');\n                }\n            }\n\n            while (index < length) {\n                ch = source.charCodeAt(index);\n                if (!esutils.code.isDecimalDigit(ch)) {\n                    break;\n                }\n                number += advance();\n            }\n        }\n\n        if (ch === 0x2E  /* '.' */) {\n            number += advance();\n            while (index < length) {\n                ch = source.charCodeAt(index);\n                if (!esutils.code.isDecimalDigit(ch)) {\n                    break;\n                }\n                number += advance();\n            }\n        }\n\n        if (ch === 0x65  /* 'e' */ || ch === 0x45  /* 'E' */) {\n            number += advance();\n\n            ch = source.charCodeAt(index);\n            if (ch === 0x2B  /* '+' */ || ch === 0x2D  /* '-' */) {\n                number += advance();\n            }\n\n            ch = source.charCodeAt(index);\n            if (esutils.code.isDecimalDigit(ch)) {\n                number += advance();\n                while (index < length) {\n                    ch = source.charCodeAt(index);\n                    if (!esutils.code.isDecimalDigit(ch)) {\n                        break;\n                    }\n                    number += advance();\n                }\n            } else {\n                utility.throwError('unexpected token');\n            }\n        }\n\n        if (index < length) {\n            ch = source.charCodeAt(index);\n            if (esutils.code.isIdentifierStartES5(ch)) {\n                utility.throwError('unexpected token');\n            }\n        }\n\n        value = parseFloat(number);\n        return Token.NUMBER;\n    }\n\n\n    function scanTypeName() {\n        var ch, ch2;\n\n        value = advance();\n        while (index < length && isTypeName(source.charCodeAt(index))) {\n            ch = source.charCodeAt(index);\n            if (ch === 0x2E  /* '.' */) {\n                if ((index + 1) >= length) {\n                    return Token.ILLEGAL;\n                }\n                ch2 = source.charCodeAt(index + 1);\n                if (ch2 === 0x3C  /* '<' */) {\n                    break;\n                }\n            }\n            value += advance();\n        }\n        return Token.NAME;\n    }\n\n    function next() {\n        var ch;\n\n        previous = index;\n\n        while (index < length && esutils.code.isWhiteSpace(source.charCodeAt(index))) {\n            advance();\n        }\n        if (index >= length) {\n            token = Token.EOF;\n            return token;\n        }\n\n        ch = source.charCodeAt(index);\n        switch (ch) {\n        case 0x27:  /* ''' */\n        case 0x22:  /* '\"' */\n            token = scanString();\n            return token;\n\n        case 0x3A:  /* ':' */\n            advance();\n            token = Token.COLON;\n            return token;\n\n        case 0x2C:  /* ',' */\n            advance();\n            token = Token.COMMA;\n            return token;\n\n        case 0x28:  /* '(' */\n            advance();\n            token = Token.LPAREN;\n            return token;\n\n        case 0x29:  /* ')' */\n            advance();\n            token = Token.RPAREN;\n            return token;\n\n        case 0x5B:  /* '[' */\n            advance();\n            token = Token.LBRACK;\n            return token;\n\n        case 0x5D:  /* ']' */\n            advance();\n            token = Token.RBRACK;\n            return token;\n\n        case 0x7B:  /* '{' */\n            advance();\n            token = Token.LBRACE;\n            return token;\n\n        case 0x7D:  /* '}' */\n            advance();\n            token = Token.RBRACE;\n            return token;\n\n        case 0x2E:  /* '.' */\n            if (index + 1 < length) {\n                ch = source.charCodeAt(index + 1);\n                if (ch === 0x3C  /* '<' */) {\n                    advance();  // '.'\n                    advance();  // '<'\n                    token = Token.DOT_LT;\n                    return token;\n                }\n\n                if (ch === 0x2E  /* '.' */ && index + 2 < length && source.charCodeAt(index + 2) === 0x2E  /* '.' */) {\n                    advance();  // '.'\n                    advance();  // '.'\n                    advance();  // '.'\n                    token = Token.REST;\n                    return token;\n                }\n\n                if (esutils.code.isDecimalDigit(ch)) {\n                    token = scanNumber();\n                    return token;\n                }\n            }\n            token = Token.ILLEGAL;\n            return token;\n\n        case 0x3C:  /* '<' */\n            advance();\n            token = Token.LT;\n            return token;\n\n        case 0x3E:  /* '>' */\n            advance();\n            token = Token.GT;\n            return token;\n\n        case 0x2A:  /* '*' */\n            advance();\n            token = Token.STAR;\n            return token;\n\n        case 0x7C:  /* '|' */\n            advance();\n            token = Token.PIPE;\n            return token;\n\n        case 0x3F:  /* '?' */\n            advance();\n            token = Token.QUESTION;\n            return token;\n\n        case 0x21:  /* '!' */\n            advance();\n            token = Token.BANG;\n            return token;\n\n        case 0x3D:  /* '=' */\n            advance();\n            token = Token.EQUAL;\n            return token;\n\n        case 0x2D: /* '-' */\n            token = scanNumber();\n            return token;\n\n        default:\n            if (esutils.code.isDecimalDigit(ch)) {\n                token = scanNumber();\n                return token;\n            }\n\n            // type string permits following case,\n            //\n            // namespace.module.MyClass\n            //\n            // this reduced 1 token TK_NAME\n            utility.assert(isTypeName(ch));\n            token = scanTypeName();\n            return token;\n        }\n    }\n\n    function consume(target, text) {\n        utility.assert(token === target, text || 'consumed token not matched');\n        next();\n    }\n\n    function expect(target, message) {\n        if (token !== target) {\n            utility.throwError(message || 'unexpected token');\n        }\n        next();\n    }\n\n    // UnionType := '(' TypeUnionList ')'\n    //\n    // TypeUnionList :=\n    //     <<empty>>\n    //   | NonemptyTypeUnionList\n    //\n    // NonemptyTypeUnionList :=\n    //     TypeExpression\n    //   | TypeExpression '|' NonemptyTypeUnionList\n    function parseUnionType() {\n        var elements, startIndex = index - 1;\n        consume(Token.LPAREN, 'UnionType should start with (');\n        elements = [];\n        if (token !== Token.RPAREN) {\n            while (true) {\n                elements.push(parseTypeExpression());\n                if (token === Token.RPAREN) {\n                    break;\n                }\n                expect(Token.PIPE);\n            }\n        }\n        consume(Token.RPAREN, 'UnionType should end with )');\n        return maybeAddRange({\n            type: Syntax.UnionType,\n            elements: elements\n        }, [startIndex, previous]);\n    }\n\n    // ArrayType := '[' ElementTypeList ']'\n    //\n    // ElementTypeList :=\n    //     <<empty>>\n    //  | TypeExpression\n    //  | '...' TypeExpression\n    //  | TypeExpression ',' ElementTypeList\n    function parseArrayType() {\n        var elements, startIndex = index - 1, restStartIndex;\n        consume(Token.LBRACK, 'ArrayType should start with [');\n        elements = [];\n        while (token !== Token.RBRACK) {\n            if (token === Token.REST) {\n                restStartIndex = index - 3;\n                consume(Token.REST);\n                elements.push(maybeAddRange({\n                    type: Syntax.RestType,\n                    expression: parseTypeExpression()\n                }, [restStartIndex, previous]));\n                break;\n            } else {\n                elements.push(parseTypeExpression());\n            }\n            if (token !== Token.RBRACK) {\n                expect(Token.COMMA);\n            }\n        }\n        expect(Token.RBRACK);\n        return maybeAddRange({\n            type: Syntax.ArrayType,\n            elements: elements\n        }, [startIndex, previous]);\n    }\n\n    function parseFieldName() {\n        var v = value;\n        if (token === Token.NAME || token === Token.STRING) {\n            next();\n            return v;\n        }\n\n        if (token === Token.NUMBER) {\n            consume(Token.NUMBER);\n            return String(v);\n        }\n\n        utility.throwError('unexpected token');\n    }\n\n    // FieldType :=\n    //     FieldName\n    //   | FieldName ':' TypeExpression\n    //\n    // FieldName :=\n    //     NameExpression\n    //   | StringLiteral\n    //   | NumberLiteral\n    //   | ReservedIdentifier\n    function parseFieldType() {\n        var key, rangeStart = previous;\n\n        key = parseFieldName();\n        if (token === Token.COLON) {\n            consume(Token.COLON);\n            return maybeAddRange({\n                type: Syntax.FieldType,\n                key: key,\n                value: parseTypeExpression()\n            }, [rangeStart, previous]);\n        }\n        return maybeAddRange({\n            type: Syntax.FieldType,\n            key: key,\n            value: null\n        }, [rangeStart, previous]);\n    }\n\n    // RecordType := '{' FieldTypeList '}'\n    //\n    // FieldTypeList :=\n    //     <<empty>>\n    //   | FieldType\n    //   | FieldType ',' FieldTypeList\n    function parseRecordType() {\n        var fields, rangeStart = index - 1, rangeEnd;\n\n        consume(Token.LBRACE, 'RecordType should start with {');\n        fields = [];\n        if (token === Token.COMMA) {\n            consume(Token.COMMA);\n        } else {\n            while (token !== Token.RBRACE) {\n                fields.push(parseFieldType());\n                if (token !== Token.RBRACE) {\n                    expect(Token.COMMA);\n                }\n            }\n        }\n        rangeEnd = index;\n        expect(Token.RBRACE);\n        return maybeAddRange({\n            type: Syntax.RecordType,\n            fields: fields\n        }, [rangeStart, rangeEnd]);\n    }\n\n    // NameExpression :=\n    //    Identifier\n    //  | TagIdentifier ':' Identifier\n    //\n    // Tag identifier is one of \"module\", \"external\" or \"event\"\n    // Identifier is the same as Token.NAME, including any dots, something like\n    // namespace.module.MyClass\n    function parseNameExpression() {\n        var name = value, rangeStart = index - name.length;\n        expect(Token.NAME);\n\n        if (token === Token.COLON && (\n                name === 'module' ||\n                name === 'external' ||\n                name === 'event')) {\n            consume(Token.COLON);\n            name += ':' + value;\n            expect(Token.NAME);\n        }\n\n        return maybeAddRange({\n            type: Syntax.NameExpression,\n            name: name\n        }, [rangeStart, previous]);\n    }\n\n    // TypeExpressionList :=\n    //     TopLevelTypeExpression\n    //   | TopLevelTypeExpression ',' TypeExpressionList\n    function parseTypeExpressionList() {\n        var elements = [];\n\n        elements.push(parseTop());\n        while (token === Token.COMMA) {\n            consume(Token.COMMA);\n            elements.push(parseTop());\n        }\n        return elements;\n    }\n\n    // TypeName :=\n    //     NameExpression\n    //   | NameExpression TypeApplication\n    //\n    // TypeApplication :=\n    //     '.<' TypeExpressionList '>'\n    //   | '<' TypeExpressionList '>'   // this is extension of doctrine\n    function parseTypeName() {\n        var expr, applications, startIndex = index - value.length;\n\n        expr = parseNameExpression();\n        if (token === Token.DOT_LT || token === Token.LT) {\n            next();\n            applications = parseTypeExpressionList();\n            expect(Token.GT);\n            return maybeAddRange({\n                type: Syntax.TypeApplication,\n                expression: expr,\n                applications: applications\n            }, [startIndex, previous]);\n        }\n        return expr;\n    }\n\n    // ResultType :=\n    //     <<empty>>\n    //   | ':' void\n    //   | ':' TypeExpression\n    //\n    // BNF is above\n    // but, we remove <<empty>> pattern, so token is always TypeToken::COLON\n    function parseResultType() {\n        consume(Token.COLON, 'ResultType should start with :');\n        if (token === Token.NAME && value === 'void') {\n            consume(Token.NAME);\n            return {\n                type: Syntax.VoidLiteral\n            };\n        }\n        return parseTypeExpression();\n    }\n\n    // ParametersType :=\n    //     RestParameterType\n    //   | NonRestParametersType\n    //   | NonRestParametersType ',' RestParameterType\n    //\n    // RestParameterType :=\n    //     '...'\n    //     '...' Identifier\n    //\n    // NonRestParametersType :=\n    //     ParameterType ',' NonRestParametersType\n    //   | ParameterType\n    //   | OptionalParametersType\n    //\n    // OptionalParametersType :=\n    //     OptionalParameterType\n    //   | OptionalParameterType, OptionalParametersType\n    //\n    // OptionalParameterType := ParameterType=\n    //\n    // ParameterType := TypeExpression | Identifier ':' TypeExpression\n    //\n    // Identifier is \"new\" or \"this\"\n    function parseParametersType() {\n        var params = [], optionalSequence = false, expr, rest = false, startIndex, restStartIndex = index - 3, nameStartIndex;\n\n        while (token !== Token.RPAREN) {\n            if (token === Token.REST) {\n                // RestParameterType\n                consume(Token.REST);\n                rest = true;\n            }\n\n            startIndex = previous;\n\n            expr = parseTypeExpression();\n            if (expr.type === Syntax.NameExpression && token === Token.COLON) {\n                nameStartIndex = previous - expr.name.length;\n                // Identifier ':' TypeExpression\n                consume(Token.COLON);\n                expr = maybeAddRange({\n                    type: Syntax.ParameterType,\n                    name: expr.name,\n                    expression: parseTypeExpression()\n                }, [nameStartIndex, previous]);\n            }\n            if (token === Token.EQUAL) {\n                consume(Token.EQUAL);\n                expr = maybeAddRange({\n                    type: Syntax.OptionalType,\n                    expression: expr\n                }, [startIndex, previous]);\n                optionalSequence = true;\n            } else {\n                if (optionalSequence) {\n                    utility.throwError('unexpected token');\n                }\n            }\n            if (rest) {\n                expr = maybeAddRange({\n                    type: Syntax.RestType,\n                    expression: expr\n                }, [restStartIndex, previous]);\n            }\n            params.push(expr);\n            if (token !== Token.RPAREN) {\n                expect(Token.COMMA);\n            }\n        }\n        return params;\n    }\n\n    // FunctionType := 'function' FunctionSignatureType\n    //\n    // FunctionSignatureType :=\n    //   | TypeParameters '(' ')' ResultType\n    //   | TypeParameters '(' ParametersType ')' ResultType\n    //   | TypeParameters '(' 'this' ':' TypeName ')' ResultType\n    //   | TypeParameters '(' 'this' ':' TypeName ',' ParametersType ')' ResultType\n    function parseFunctionType() {\n        var isNew, thisBinding, params, result, fnType, startIndex = index - value.length;\n        utility.assert(token === Token.NAME && value === 'function', 'FunctionType should start with \\'function\\'');\n        consume(Token.NAME);\n\n        // Google Closure Compiler is not implementing TypeParameters.\n        // So we do not. if we don't get '(', we see it as error.\n        expect(Token.LPAREN);\n\n        isNew = false;\n        params = [];\n        thisBinding = null;\n        if (token !== Token.RPAREN) {\n            // ParametersType or 'this'\n            if (token === Token.NAME &&\n                    (value === 'this' || value === 'new')) {\n                // 'this' or 'new'\n                // 'new' is Closure Compiler extension\n                isNew = value === 'new';\n                consume(Token.NAME);\n                expect(Token.COLON);\n                thisBinding = parseTypeName();\n                if (token === Token.COMMA) {\n                    consume(Token.COMMA);\n                    params = parseParametersType();\n                }\n            } else {\n                params = parseParametersType();\n            }\n        }\n\n        expect(Token.RPAREN);\n\n        result = null;\n        if (token === Token.COLON) {\n            result = parseResultType();\n        }\n\n        fnType = maybeAddRange({\n            type: Syntax.FunctionType,\n            params: params,\n            result: result\n        }, [startIndex, previous]);\n        if (thisBinding) {\n            // avoid adding null 'new' and 'this' properties\n            fnType['this'] = thisBinding;\n            if (isNew) {\n                fnType['new'] = true;\n            }\n        }\n        return fnType;\n    }\n\n    // BasicTypeExpression :=\n    //     '*'\n    //   | 'null'\n    //   | 'undefined'\n    //   | TypeName\n    //   | FunctionType\n    //   | UnionType\n    //   | RecordType\n    //   | ArrayType\n    function parseBasicTypeExpression() {\n        var context, startIndex;\n        switch (token) {\n        case Token.STAR:\n            consume(Token.STAR);\n            return maybeAddRange({\n                type: Syntax.AllLiteral\n            }, [previous - 1, previous]);\n\n        case Token.LPAREN:\n            return parseUnionType();\n\n        case Token.LBRACK:\n            return parseArrayType();\n\n        case Token.LBRACE:\n            return parseRecordType();\n\n        case Token.NAME:\n            startIndex = index - value.length;\n\n            if (value === 'null') {\n                consume(Token.NAME);\n                return maybeAddRange({\n                    type: Syntax.NullLiteral\n                }, [startIndex, previous]);\n            }\n\n            if (value === 'undefined') {\n                consume(Token.NAME);\n                return maybeAddRange({\n                    type: Syntax.UndefinedLiteral\n                }, [startIndex, previous]);\n            }\n\n            if (value === 'true' || value === 'false') {\n                consume(Token.NAME);\n                return maybeAddRange({\n                    type: Syntax.BooleanLiteralType,\n                    value: value === 'true'\n                }, [startIndex, previous]);\n            }\n\n            context = Context.save();\n            if (value === 'function') {\n                try {\n                    return parseFunctionType();\n                } catch (e) {\n                    context.restore();\n                }\n            }\n\n            return parseTypeName();\n\n        case Token.STRING:\n            next();\n            return maybeAddRange({\n                type: Syntax.StringLiteralType,\n                value: value\n            }, [previous - value.length - 2, previous]);\n\n        case Token.NUMBER:\n            next();\n            return maybeAddRange({\n                type: Syntax.NumericLiteralType,\n                value: value\n            }, [previous - String(value).length, previous]);\n\n        default:\n            utility.throwError('unexpected token');\n        }\n    }\n\n    // TypeExpression :=\n    //     BasicTypeExpression\n    //   | '?' BasicTypeExpression\n    //   | '!' BasicTypeExpression\n    //   | BasicTypeExpression '?'\n    //   | BasicTypeExpression '!'\n    //   | '?'\n    //   | BasicTypeExpression '[]'\n    function parseTypeExpression() {\n        var expr, rangeStart;\n\n        if (token === Token.QUESTION) {\n            rangeStart = index - 1;\n            consume(Token.QUESTION);\n            if (token === Token.COMMA || token === Token.EQUAL || token === Token.RBRACE ||\n                    token === Token.RPAREN || token === Token.PIPE || token === Token.EOF ||\n                    token === Token.RBRACK || token === Token.GT) {\n                return maybeAddRange({\n                    type: Syntax.NullableLiteral\n                }, [rangeStart, previous]);\n            }\n            return maybeAddRange({\n                type: Syntax.NullableType,\n                expression: parseBasicTypeExpression(),\n                prefix: true\n            }, [rangeStart, previous]);\n        } else if (token === Token.BANG) {\n            rangeStart = index - 1;\n            consume(Token.BANG);\n            return maybeAddRange({\n                type: Syntax.NonNullableType,\n                expression: parseBasicTypeExpression(),\n                prefix: true\n            }, [rangeStart, previous]);\n        } else {\n            rangeStart = previous;\n        }\n\n        expr = parseBasicTypeExpression();\n        if (token === Token.BANG) {\n            consume(Token.BANG);\n            return maybeAddRange({\n                type: Syntax.NonNullableType,\n                expression: expr,\n                prefix: false\n            }, [rangeStart, previous]);\n        }\n\n        if (token === Token.QUESTION) {\n            consume(Token.QUESTION);\n            return maybeAddRange({\n                type: Syntax.NullableType,\n                expression: expr,\n                prefix: false\n            }, [rangeStart, previous]);\n        }\n\n        if (token === Token.LBRACK) {\n            consume(Token.LBRACK);\n            expect(Token.RBRACK, 'expected an array-style type declaration (' + value + '[])');\n            return maybeAddRange({\n                type: Syntax.TypeApplication,\n                expression: maybeAddRange({\n                    type: Syntax.NameExpression,\n                    name: 'Array'\n                }, [rangeStart, previous]),\n                applications: [expr]\n            }, [rangeStart, previous]);\n        }\n\n        return expr;\n    }\n\n    // TopLevelTypeExpression :=\n    //      TypeExpression\n    //    | TypeUnionList\n    //\n    // This rule is Google Closure Compiler extension, not ES4\n    // like,\n    //   { number | string }\n    // If strict to ES4, we should write it as\n    //   { (number|string) }\n    function parseTop() {\n        var expr, elements;\n\n        expr = parseTypeExpression();\n        if (token !== Token.PIPE) {\n            return expr;\n        }\n\n        elements = [expr];\n        consume(Token.PIPE);\n        while (true) {\n            elements.push(parseTypeExpression());\n            if (token !== Token.PIPE) {\n                break;\n            }\n            consume(Token.PIPE);\n        }\n\n        return maybeAddRange({\n            type: Syntax.UnionType,\n            elements: elements\n        }, [0, index]);\n    }\n\n    function parseTopParamType() {\n        var expr;\n\n        if (token === Token.REST) {\n            consume(Token.REST);\n            return maybeAddRange({\n                type: Syntax.RestType,\n                expression: parseTop()\n            }, [0, index]);\n        }\n\n        expr = parseTop();\n        if (token === Token.EQUAL) {\n            consume(Token.EQUAL);\n            return maybeAddRange({\n                type: Syntax.OptionalType,\n                expression: expr\n            }, [0, index]);\n        }\n\n        return expr;\n    }\n\n    function parseType(src, opt) {\n        var expr;\n\n        source = src;\n        length = source.length;\n        index = 0;\n        previous = 0;\n        addRange = opt && opt.range;\n        rangeOffset = opt && opt.startIndex || 0;\n\n        next();\n        expr = parseTop();\n\n        if (opt && opt.midstream) {\n            return {\n                expression: expr,\n                index: previous\n            };\n        }\n\n        if (token !== Token.EOF) {\n            utility.throwError('not reach to EOF');\n        }\n\n        return expr;\n    }\n\n    function parseParamType(src, opt) {\n        var expr;\n\n        source = src;\n        length = source.length;\n        index = 0;\n        previous = 0;\n        addRange = opt && opt.range;\n        rangeOffset = opt && opt.startIndex || 0;\n\n        next();\n        expr = parseTopParamType();\n\n        if (opt && opt.midstream) {\n            return {\n                expression: expr,\n                index: previous\n            };\n        }\n\n        if (token !== Token.EOF) {\n            utility.throwError('not reach to EOF');\n        }\n\n        return expr;\n    }\n\n    function stringifyImpl(node, compact, topLevel) {\n        var result, i, iz;\n\n        switch (node.type) {\n        case Syntax.NullableLiteral:\n            result = '?';\n            break;\n\n        case Syntax.AllLiteral:\n            result = '*';\n            break;\n\n        case Syntax.NullLiteral:\n            result = 'null';\n            break;\n\n        case Syntax.UndefinedLiteral:\n            result = 'undefined';\n            break;\n\n        case Syntax.VoidLiteral:\n            result = 'void';\n            break;\n\n        case Syntax.UnionType:\n            if (!topLevel) {\n                result = '(';\n            } else {\n                result = '';\n            }\n\n            for (i = 0, iz = node.elements.length; i < iz; ++i) {\n                result += stringifyImpl(node.elements[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? '|' : ' | ';\n                }\n            }\n\n            if (!topLevel) {\n                result += ')';\n            }\n            break;\n\n        case Syntax.ArrayType:\n            result = '[';\n            for (i = 0, iz = node.elements.length; i < iz; ++i) {\n                result += stringifyImpl(node.elements[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n            result += ']';\n            break;\n\n        case Syntax.RecordType:\n            result = '{';\n            for (i = 0, iz = node.fields.length; i < iz; ++i) {\n                result += stringifyImpl(node.fields[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n            result += '}';\n            break;\n\n        case Syntax.FieldType:\n            if (node.value) {\n                result = node.key + (compact ? ':' : ': ') + stringifyImpl(node.value, compact);\n            } else {\n                result = node.key;\n            }\n            break;\n\n        case Syntax.FunctionType:\n            result = compact ? 'function(' : 'function (';\n\n            if (node['this']) {\n                if (node['new']) {\n                    result += (compact ? 'new:' : 'new: ');\n                } else {\n                    result += (compact ? 'this:' : 'this: ');\n                }\n\n                result += stringifyImpl(node['this'], compact);\n\n                if (node.params.length !== 0) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n\n            for (i = 0, iz = node.params.length; i < iz; ++i) {\n                result += stringifyImpl(node.params[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n\n            result += ')';\n\n            if (node.result) {\n                result += (compact ? ':' : ': ') + stringifyImpl(node.result, compact);\n            }\n            break;\n\n        case Syntax.ParameterType:\n            result = node.name + (compact ? ':' : ': ') + stringifyImpl(node.expression, compact);\n            break;\n\n        case Syntax.RestType:\n            result = '...';\n            if (node.expression) {\n                result += stringifyImpl(node.expression, compact);\n            }\n            break;\n\n        case Syntax.NonNullableType:\n            if (node.prefix) {\n                result = '!' + stringifyImpl(node.expression, compact);\n            } else {\n                result = stringifyImpl(node.expression, compact) + '!';\n            }\n            break;\n\n        case Syntax.OptionalType:\n            result = stringifyImpl(node.expression, compact) + '=';\n            break;\n\n        case Syntax.NullableType:\n            if (node.prefix) {\n                result = '?' + stringifyImpl(node.expression, compact);\n            } else {\n                result = stringifyImpl(node.expression, compact) + '?';\n            }\n            break;\n\n        case Syntax.NameExpression:\n            result = node.name;\n            break;\n\n        case Syntax.TypeApplication:\n            result = stringifyImpl(node.expression, compact) + '.<';\n            for (i = 0, iz = node.applications.length; i < iz; ++i) {\n                result += stringifyImpl(node.applications[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n            result += '>';\n            break;\n\n        case Syntax.StringLiteralType:\n            result = '\"' + node.value + '\"';\n            break;\n\n        case Syntax.NumericLiteralType:\n            result = String(node.value);\n            break;\n\n        case Syntax.BooleanLiteralType:\n            result = String(node.value);\n            break;\n\n        default:\n            utility.throwError('Unknown type ' + node.type);\n        }\n\n        return result;\n    }\n\n    function stringify(node, options) {\n        if (options == null) {\n            options = {};\n        }\n        return stringifyImpl(node, options.compact, options.topLevel);\n    }\n\n    exports.parseType = parseType;\n    exports.parseParamType = parseParamType;\n    exports.stringify = stringify;\n    exports.Syntax = Syntax;\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n * @fileoverview Main Doctrine object\n * @author Yusuke Suzuki <utatane.tea@gmail.com>\n * @author Dan Tao <daniel.tao@gmail.com>\n * @author Andrew Eisenberg <andrew@eisenberg.as>\n */\n\n(function () {\n    'use strict';\n\n    var typed,\n        utility,\n        jsdoc,\n        esutils,\n        hasOwnProperty;\n\n    esutils = require('esutils');\n    typed = require('./typed');\n    utility = require('./utility');\n\n    function sliceSource(source, index, last) {\n        return source.slice(index, last);\n    }\n\n    hasOwnProperty = (function () {\n        var func = Object.prototype.hasOwnProperty;\n        return function hasOwnProperty(obj, name) {\n            return func.call(obj, name);\n        };\n    }());\n    function shallowCopy(obj) {\n        var ret = {}, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n\n    function isASCIIAlphanumeric(ch) {\n        return (ch >= 0x61  /* 'a' */ && ch <= 0x7A  /* 'z' */) ||\n            (ch >= 0x41  /* 'A' */ && ch <= 0x5A  /* 'Z' */) ||\n            (ch >= 0x30  /* '0' */ && ch <= 0x39  /* '9' */);\n    }\n\n    function isParamTitle(title) {\n        return title === 'param' || title === 'argument' || title === 'arg';\n    }\n\n    function isReturnTitle(title) {\n        return title === 'return' || title === 'returns';\n    }\n\n    function isProperty(title) {\n        return title === 'property' || title === 'prop';\n    }\n\n    function isNameParameterRequired(title) {\n        return isParamTitle(title) || isProperty(title) ||\n            title === 'alias' || title === 'this' || title === 'mixes' || title === 'requires';\n    }\n\n    function isAllowedName(title) {\n        return isNameParameterRequired(title) || title === 'const' || title === 'constant';\n    }\n\n    function isAllowedNested(title) {\n        return isProperty(title) || isParamTitle(title);\n    }\n\n    function isAllowedOptional(title) {\n        return isProperty(title) || isParamTitle(title);\n    }\n\n    function isTypeParameterRequired(title) {\n        return isParamTitle(title) || isReturnTitle(title) ||\n            title === 'define' || title === 'enum' ||\n            title === 'implements' || title === 'this' ||\n            title === 'type' || title === 'typedef' || isProperty(title);\n    }\n\n    // Consider deprecation instead using 'isTypeParameterRequired' and 'Rules' declaration to pick when a type is optional/required\n    // This would require changes to 'parseType'\n    function isAllowedType(title) {\n        return isTypeParameterRequired(title) || title === 'throws' || title === 'const' || title === 'constant' ||\n            title === 'namespace' || title === 'member' || title === 'var' || title === 'module' ||\n            title === 'constructor' || title === 'class' || title === 'extends' || title === 'augments' ||\n            title === 'public' || title === 'private' || title === 'protected';\n    }\n\n    // A regex character class that contains all whitespace except linebreak characters (\\r, \\n, \\u2028, \\u2029)\n    var WHITESPACE = '[ \\\\f\\\\t\\\\v\\\\u00a0\\\\u1680\\\\u180e\\\\u2000-\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]';\n\n    var STAR_MATCHER = '(' + WHITESPACE + '*(?:\\\\*' + WHITESPACE + '?)?)(.+|[\\r\\n\\u2028\\u2029])';\n\n    function unwrapComment(doc) {\n        // JSDoc comment is following form\n        //   /**\n        //    * .......\n        //    */\n\n        return doc.\n            // remove /**\n            replace(/^\\/\\*\\*?/, '').\n            // remove */\n            replace(/\\*\\/$/, '').\n            // remove ' * ' at the beginning of a line\n            replace(new RegExp(STAR_MATCHER, 'g'), '$2').\n            // remove trailing whitespace\n            replace(/\\s*$/, '');\n    }\n\n    /**\n     * Converts an index in an \"unwrapped\" JSDoc comment to the corresponding index in the original \"wrapped\" version\n     * @param {string} originalSource The original wrapped comment\n     * @param {number} unwrappedIndex The index of a character in the unwrapped string\n     * @returns {number} The index of the corresponding character in the original wrapped string\n     */\n    function convertUnwrappedCommentIndex(originalSource, unwrappedIndex) {\n        var replacedSource = originalSource.replace(/^\\/\\*\\*?/, '');\n        var numSkippedChars = 0;\n        var matcher = new RegExp(STAR_MATCHER, 'g');\n        var match;\n\n        while ((match = matcher.exec(replacedSource))) {\n            numSkippedChars += match[1].length;\n\n            if (match.index + match[0].length > unwrappedIndex + numSkippedChars) {\n                return unwrappedIndex + numSkippedChars + originalSource.length - replacedSource.length;\n            }\n        }\n\n        return originalSource.replace(/\\*\\/$/, '').replace(/\\s*$/, '').length;\n    }\n\n    // JSDoc Tag Parser\n\n    (function (exports) {\n        var Rules,\n            index,\n            lineNumber,\n            length,\n            source,\n            originalSource,\n            recoverable,\n            sloppy,\n            strict;\n\n        function advance() {\n            var ch = source.charCodeAt(index);\n            index += 1;\n            if (esutils.code.isLineTerminator(ch) && !(ch === 0x0D  /* '\\r' */ && source.charCodeAt(index) === 0x0A  /* '\\n' */)) {\n                lineNumber += 1;\n            }\n            return String.fromCharCode(ch);\n        }\n\n        function scanTitle() {\n            var title = '';\n            // waste '@'\n            advance();\n\n            while (index < length && isASCIIAlphanumeric(source.charCodeAt(index))) {\n                title += advance();\n            }\n\n            return title;\n        }\n\n        function seekContent() {\n            var ch, waiting, last = index;\n\n            waiting = false;\n            while (last < length) {\n                ch = source.charCodeAt(last);\n                if (esutils.code.isLineTerminator(ch) && !(ch === 0x0D  /* '\\r' */ && source.charCodeAt(last + 1) === 0x0A  /* '\\n' */)) {\n                    waiting = true;\n                } else if (waiting) {\n                    if (ch === 0x40  /* '@' */) {\n                        break;\n                    }\n                    if (!esutils.code.isWhiteSpace(ch)) {\n                        waiting = false;\n                    }\n                }\n                last += 1;\n            }\n            return last;\n        }\n\n        // type expression may have nest brace, such as,\n        // { { ok: string } }\n        //\n        // therefore, scanning type expression with balancing braces.\n        function parseType(title, last, addRange) {\n            var ch, brace, type, startIndex, direct = false;\n\n\n            // search '{'\n            while (index < last) {\n                ch = source.charCodeAt(index);\n                if (esutils.code.isWhiteSpace(ch)) {\n                    advance();\n                } else if (ch === 0x7B  /* '{' */) {\n                    advance();\n                    break;\n                } else {\n                    // this is direct pattern\n                    direct = true;\n                    break;\n                }\n            }\n\n\n            if (direct) {\n                return null;\n            }\n\n            // type expression { is found\n            brace = 1;\n            type = '';\n            while (index < last) {\n                ch = source.charCodeAt(index);\n                if (esutils.code.isLineTerminator(ch)) {\n                    advance();\n                } else {\n                    if (ch === 0x7D  /* '}' */) {\n                        brace -= 1;\n                        if (brace === 0) {\n                            advance();\n                            break;\n                        }\n                    } else if (ch === 0x7B  /* '{' */) {\n                        brace += 1;\n                    }\n                    if (type === '') {\n                        startIndex = index;\n                    }\n                    type += advance();\n                }\n            }\n\n            if (brace !== 0) {\n                // braces is not balanced\n                return utility.throwError('Braces are not balanced');\n            }\n\n            if (isAllowedOptional(title)) {\n                return typed.parseParamType(type, {startIndex: convertIndex(startIndex), range: addRange});\n            }\n\n            return typed.parseType(type, {startIndex: convertIndex(startIndex), range: addRange});\n        }\n\n        function scanIdentifier(last) {\n            var identifier;\n            if (!esutils.code.isIdentifierStartES5(source.charCodeAt(index)) && !source[index].match(/[0-9]/)) {\n                return null;\n            }\n            identifier = advance();\n            while (index < last && esutils.code.isIdentifierPartES5(source.charCodeAt(index))) {\n                identifier += advance();\n            }\n            return identifier;\n        }\n\n        function skipWhiteSpace(last) {\n            while (index < last && (esutils.code.isWhiteSpace(source.charCodeAt(index)) || esutils.code.isLineTerminator(source.charCodeAt(index)))) {\n                advance();\n            }\n        }\n\n        function parseName(last, allowBrackets, allowNestedParams) {\n            var name = '',\n                useBrackets,\n                insideString;\n\n\n            skipWhiteSpace(last);\n\n            if (index >= last) {\n                return null;\n            }\n\n            if (source.charCodeAt(index) === 0x5B  /* '[' */) {\n                if (allowBrackets) {\n                    useBrackets = true;\n                    name = advance();\n                } else {\n                    return null;\n                }\n            }\n\n            name += scanIdentifier(last);\n\n            if (allowNestedParams) {\n                if (source.charCodeAt(index) === 0x3A /* ':' */ && (\n                        name === 'module' ||\n                        name === 'external' ||\n                        name === 'event')) {\n                    name += advance();\n                    name += scanIdentifier(last);\n\n                }\n                if(source.charCodeAt(index) === 0x5B  /* '[' */ && source.charCodeAt(index + 1) === 0x5D  /* ']' */){\n                    name += advance();\n                    name += advance();\n                }\n                while (source.charCodeAt(index) === 0x2E  /* '.' */ ||\n                        source.charCodeAt(index) === 0x2F  /* '/' */ ||\n                        source.charCodeAt(index) === 0x23  /* '#' */ ||\n                        source.charCodeAt(index) === 0x2D  /* '-' */ ||\n                        source.charCodeAt(index) === 0x7E  /* '~' */) {\n                    name += advance();\n                    name += scanIdentifier(last);\n                }\n            }\n\n            if (useBrackets) {\n                skipWhiteSpace(last);\n                // do we have a default value for this?\n                if (source.charCodeAt(index) === 0x3D  /* '=' */) {\n                    // consume the '='' symbol\n                    name += advance();\n                    skipWhiteSpace(last);\n\n                    var ch;\n                    var bracketDepth = 1;\n\n                    // scan in the default value\n                    while (index < last) {\n                        ch = source.charCodeAt(index);\n\n                        if (esutils.code.isWhiteSpace(ch)) {\n                            if (!insideString) {\n                                skipWhiteSpace(last);\n                                ch = source.charCodeAt(index);\n                            }\n                        }\n\n                        if (ch === 0x27 /* ''' */) {\n                            if (!insideString) {\n                                insideString = '\\'';\n                            } else {\n                                if (insideString === '\\'') {\n                                    insideString = '';\n                                }\n                            }\n                        }\n\n                        if (ch === 0x22 /* '\"' */) {\n                            if (!insideString) {\n                                insideString = '\"';\n                            } else {\n                                if (insideString === '\"') {\n                                    insideString = '';\n                                }\n                            }\n                        }\n\n                        if (ch === 0x5B /* '[' */) {\n                            bracketDepth++;\n                        } else if (ch === 0x5D  /* ']' */ &&\n                            --bracketDepth === 0) {\n                            break;\n                        }\n\n                        name += advance();\n                    }\n                }\n\n                skipWhiteSpace(last);\n\n                if (index >= last || source.charCodeAt(index) !== 0x5D  /* ']' */) {\n                    // we never found a closing ']'\n                    return null;\n                }\n\n                // collect the last ']'\n                name += advance();\n            }\n\n            return name;\n        }\n\n        function skipToTag() {\n            while (index < length && source.charCodeAt(index) !== 0x40  /* '@' */) {\n                advance();\n            }\n            if (index >= length) {\n                return false;\n            }\n            utility.assert(source.charCodeAt(index) === 0x40  /* '@' */);\n            return true;\n        }\n\n        function convertIndex(rangeIndex) {\n            if (source === originalSource) {\n                return rangeIndex;\n            }\n            return convertUnwrappedCommentIndex(originalSource, rangeIndex);\n        }\n\n        function TagParser(options, title) {\n            this._options = options;\n            this._title = title.toLowerCase();\n            this._tag = {\n                title: title,\n                description: null\n            };\n            if (this._options.lineNumbers) {\n                this._tag.lineNumber = lineNumber;\n            }\n            this._first = index - title.length - 1;\n            this._last = 0;\n            // space to save special information for title parsers.\n            this._extra = { };\n        }\n\n        // addError(err, ...)\n        TagParser.prototype.addError = function addError(errorText) {\n            var args = Array.prototype.slice.call(arguments, 1),\n                msg = errorText.replace(\n                    /%(\\d)/g,\n                    function (whole, index) {\n                        utility.assert(index < args.length, 'Message reference must be in range');\n                        return args[index];\n                    }\n                );\n\n            if (!this._tag.errors) {\n                this._tag.errors = [];\n            }\n            if (strict) {\n                utility.throwError(msg);\n            }\n            this._tag.errors.push(msg);\n            return recoverable;\n        };\n\n        TagParser.prototype.parseType = function () {\n            // type required titles\n            if (isTypeParameterRequired(this._title)) {\n                try {\n                    this._tag.type = parseType(this._title, this._last, this._options.range);\n                    if (!this._tag.type) {\n                        if (!isParamTitle(this._title) && !isReturnTitle(this._title)) {\n                            if (!this.addError('Missing or invalid tag type')) {\n                                return false;\n                            }\n                        }\n                    }\n                } catch (error) {\n                    this._tag.type = null;\n                    if (!this.addError(error.message)) {\n                        return false;\n                    }\n                }\n            } else if (isAllowedType(this._title)) {\n                // optional types\n                try {\n                    this._tag.type = parseType(this._title, this._last, this._options.range);\n                } catch (e) {\n                    //For optional types, lets drop the thrown error when we hit the end of the file\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype._parseNamePath = function (optional) {\n            var name;\n            name = parseName(this._last, sloppy && isAllowedOptional(this._title), true);\n            if (!name) {\n                if (!optional) {\n                    if (!this.addError('Missing or invalid tag name')) {\n                        return false;\n                    }\n                }\n            }\n            this._tag.name = name;\n            return true;\n        };\n\n        TagParser.prototype.parseNamePath = function () {\n            return this._parseNamePath(false);\n        };\n\n        TagParser.prototype.parseNamePathOptional = function () {\n            return this._parseNamePath(true);\n        };\n\n\n        TagParser.prototype.parseName = function () {\n            var assign, name;\n\n            // param, property requires name\n            if (isAllowedName(this._title)) {\n                this._tag.name = parseName(this._last, sloppy && isAllowedOptional(this._title), isAllowedNested(this._title));\n                if (!this._tag.name) {\n                    if (!isNameParameterRequired(this._title)) {\n                        return true;\n                    }\n\n                    // it's possible the name has already been parsed but interpreted as a type\n                    // it's also possible this is a sloppy declaration, in which case it will be\n                    // fixed at the end\n                    if (isParamTitle(this._title) && this._tag.type && this._tag.type.name) {\n                        this._extra.name = this._tag.type;\n                        this._tag.name = this._tag.type.name;\n                        this._tag.type = null;\n                    } else {\n                        if (!this.addError('Missing or invalid tag name')) {\n                            return false;\n                        }\n                    }\n                } else {\n                    name = this._tag.name;\n                    if (name.charAt(0) === '[' && name.charAt(name.length - 1) === ']') {\n                        // extract the default value if there is one\n                        // example: @param {string} [somebody=John Doe] description\n                        assign = name.substring(1, name.length - 1).split('=');\n                        if (assign.length > 1) {\n                            this._tag['default'] = assign.slice(1).join('=');\n                        }\n                        this._tag.name = assign[0];\n\n                        // convert to an optional type\n                        if (this._tag.type && this._tag.type.type !== 'OptionalType') {\n                            this._tag.type = {\n                                type: 'OptionalType',\n                                expression: this._tag.type\n                            };\n                        }\n                    }\n                }\n            }\n\n\n            return true;\n        };\n\n        TagParser.prototype.parseDescription = function parseDescription() {\n            var description = sliceSource(source, index, this._last).trim();\n            if (description) {\n                if ((/^-\\s+/).test(description)) {\n                    description = description.substring(2);\n                }\n                this._tag.description = description;\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseCaption = function parseDescription() {\n            var description = sliceSource(source, index, this._last).trim();\n            var captionStartTag = '<caption>';\n            var captionEndTag = '</caption>';\n            var captionStart = description.indexOf(captionStartTag);\n            var captionEnd = description.indexOf(captionEndTag);\n            if (captionStart >= 0 && captionEnd >= 0) {\n                this._tag.caption = description.substring(\n                    captionStart + captionStartTag.length, captionEnd).trim();\n                this._tag.description = description.substring(captionEnd + captionEndTag.length).trim();\n            } else {\n                this._tag.description = description;\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseKind = function parseKind() {\n            var kind, kinds;\n            kinds = {\n                'class': true,\n                'constant': true,\n                'event': true,\n                'external': true,\n                'file': true,\n                'function': true,\n                'member': true,\n                'mixin': true,\n                'module': true,\n                'namespace': true,\n                'typedef': true\n            };\n            kind = sliceSource(source, index, this._last).trim();\n            this._tag.kind = kind;\n            if (!hasOwnProperty(kinds, kind)) {\n                if (!this.addError('Invalid kind name \\'%0\\'', kind)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseAccess = function parseAccess() {\n            var access;\n            access = sliceSource(source, index, this._last).trim();\n            this._tag.access = access;\n            if (access !== 'private' && access !== 'protected' && access !== 'public') {\n                if (!this.addError('Invalid access name \\'%0\\'', access)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseThis = function parseThis() {\n            // this name may be a name expression (e.g. {foo.bar}),\n            // an union (e.g. {foo.bar|foo.baz}) or a name path (e.g. foo.bar)\n            var value = sliceSource(source, index, this._last).trim();\n            if (value && value.charAt(0) === '{') {\n                var gotType = this.parseType();\n                if (gotType && this._tag.type.type === 'NameExpression' || this._tag.type.type === 'UnionType') {\n                    this._tag.name = this._tag.type.name;\n                    return true;\n                } else {\n                    return this.addError('Invalid name for this');\n                }\n            } else {\n                return this.parseNamePath();\n            }\n        };\n\n        TagParser.prototype.parseVariation = function parseVariation() {\n            var variation, text;\n            text = sliceSource(source, index, this._last).trim();\n            variation = parseFloat(text, 10);\n            this._tag.variation = variation;\n            if (isNaN(variation)) {\n                if (!this.addError('Invalid variation \\'%0\\'', text)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.ensureEnd = function () {\n            var shouldBeEmpty = sliceSource(source, index, this._last).trim();\n            if (shouldBeEmpty) {\n                if (!this.addError('Unknown content \\'%0\\'', shouldBeEmpty)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.epilogue = function epilogue() {\n            var description;\n\n            description = this._tag.description;\n            // un-fix potentially sloppy declaration\n            if (isAllowedOptional(this._title) && !this._tag.type && description && description.charAt(0) === '[') {\n                this._tag.type = this._extra.name;\n                if (!this._tag.name) {\n                    this._tag.name = undefined;\n                }\n\n                if (!sloppy) {\n                    if (!this.addError('Missing or invalid tag name')) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        };\n\n        Rules = {\n            // http://usejsdoc.org/tags-access.html\n            'access': ['parseAccess'],\n            // http://usejsdoc.org/tags-alias.html\n            'alias': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-augments.html\n            'augments': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-constructor.html\n            'constructor': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-constructor.html\n            'class': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-extends.html\n            'extends': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-example.html\n            'example': ['parseCaption'],\n            // http://usejsdoc.org/tags-deprecated.html\n            'deprecated': ['parseDescription'],\n            // http://usejsdoc.org/tags-global.html\n            'global': ['ensureEnd'],\n            // http://usejsdoc.org/tags-inner.html\n            'inner': ['ensureEnd'],\n            // http://usejsdoc.org/tags-instance.html\n            'instance': ['ensureEnd'],\n            // http://usejsdoc.org/tags-kind.html\n            'kind': ['parseKind'],\n            // http://usejsdoc.org/tags-mixes.html\n            'mixes': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-mixin.html\n            'mixin': ['parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-member.html\n            'member': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-method.html\n            'method': ['parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-module.html\n            'module': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-method.html\n            'func': ['parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-method.html\n            'function': ['parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-member.html\n            'var': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-name.html\n            'name': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-namespace.html\n            'namespace': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-private.html\n            'private': ['parseType', 'parseDescription'],\n            // http://usejsdoc.org/tags-protected.html\n            'protected': ['parseType', 'parseDescription'],\n            // http://usejsdoc.org/tags-public.html\n            'public': ['parseType', 'parseDescription'],\n            // http://usejsdoc.org/tags-readonly.html\n            'readonly': ['ensureEnd'],\n            // http://usejsdoc.org/tags-requires.html\n            'requires': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-since.html\n            'since': ['parseDescription'],\n            // http://usejsdoc.org/tags-static.html\n            'static': ['ensureEnd'],\n            // http://usejsdoc.org/tags-summary.html\n            'summary': ['parseDescription'],\n            // http://usejsdoc.org/tags-this.html\n            'this': ['parseThis', 'ensureEnd'],\n            // http://usejsdoc.org/tags-todo.html\n            'todo': ['parseDescription'],\n            // http://usejsdoc.org/tags-typedef.html\n            'typedef': ['parseType', 'parseNamePathOptional'],\n            // http://usejsdoc.org/tags-variation.html\n            'variation': ['parseVariation'],\n            // http://usejsdoc.org/tags-version.html\n            'version': ['parseDescription']\n        };\n\n        TagParser.prototype.parse = function parse() {\n            var i, iz, sequences, method;\n\n\n            // empty title\n            if (!this._title) {\n                if (!this.addError('Missing or invalid title')) {\n                    return null;\n                }\n            }\n\n            // Seek to content last index.\n            this._last = seekContent(this._title);\n\n            if (this._options.range) {\n                this._tag.range = [this._first, source.slice(0, this._last).replace(/\\s*$/, '').length].map(convertIndex);\n            }\n\n            if (hasOwnProperty(Rules, this._title)) {\n                sequences = Rules[this._title];\n            } else {\n                // default sequences\n                sequences = ['parseType', 'parseName', 'parseDescription', 'epilogue'];\n            }\n\n            for (i = 0, iz = sequences.length; i < iz; ++i) {\n                method = sequences[i];\n                if (!this[method]()) {\n                    return null;\n                }\n            }\n\n            return this._tag;\n        };\n\n        function parseTag(options) {\n            var title, parser, tag;\n\n            // skip to tag\n            if (!skipToTag()) {\n                return null;\n            }\n\n            // scan title\n            title = scanTitle();\n\n            // construct tag parser\n            parser = new TagParser(options, title);\n            tag = parser.parse();\n\n            // Seek global index to end of this tag.\n            while (index < parser._last) {\n                advance();\n            }\n\n            return tag;\n        }\n\n        //\n        // Parse JSDoc\n        //\n\n        function scanJSDocDescription(preserveWhitespace) {\n            var description = '', ch, atAllowed;\n\n            atAllowed = true;\n            while (index < length) {\n                ch = source.charCodeAt(index);\n\n                if (atAllowed && ch === 0x40  /* '@' */) {\n                    break;\n                }\n\n                if (esutils.code.isLineTerminator(ch)) {\n                    atAllowed = true;\n                } else if (atAllowed && !esutils.code.isWhiteSpace(ch)) {\n                    atAllowed = false;\n                }\n\n                description += advance();\n            }\n\n            return preserveWhitespace ? description : description.trim();\n        }\n\n        function parse(comment, options) {\n            var tags = [], tag, description, interestingTags, i, iz;\n\n            if (options === undefined) {\n                options = {};\n            }\n\n            if (typeof options.unwrap === 'boolean' && options.unwrap) {\n                source = unwrapComment(comment);\n            } else {\n                source = comment;\n            }\n\n            originalSource = comment;\n\n            // array of relevant tags\n            if (options.tags) {\n                if (Array.isArray(options.tags)) {\n                    interestingTags = { };\n                    for (i = 0, iz = options.tags.length; i < iz; i++) {\n                        if (typeof options.tags[i] === 'string') {\n                            interestingTags[options.tags[i]] = true;\n                        } else {\n                            utility.throwError('Invalid \"tags\" parameter: ' + options.tags);\n                        }\n                    }\n                } else {\n                    utility.throwError('Invalid \"tags\" parameter: ' + options.tags);\n                }\n            }\n\n            length = source.length;\n            index = 0;\n            lineNumber = 0;\n            recoverable = options.recoverable;\n            sloppy = options.sloppy;\n            strict = options.strict;\n\n            description = scanJSDocDescription(options.preserveWhitespace);\n\n            while (true) {\n                tag = parseTag(options);\n                if (!tag) {\n                    break;\n                }\n                if (!interestingTags || interestingTags.hasOwnProperty(tag.title)) {\n                    tags.push(tag);\n                }\n            }\n\n            return {\n                description: description,\n                tags: tags\n            };\n        }\n        exports.parse = parse;\n    }(jsdoc = {}));\n\n    exports.version = utility.VERSION;\n    exports.parse = jsdoc.parse;\n    exports.parseType = typed.parseType;\n    exports.parseParamType = typed.parseParamType;\n    exports.unwrapComment = unwrapComment;\n    exports.Syntax = shallowCopy(typed.Syntax);\n    exports.Error = utility.DoctrineError;\n    exports.type = {\n        Syntax: exports.Syntax,\n        parseType: typed.parseType,\n        parseParamType: typed.parseParamType,\n        stringify: typed.stringify\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","var $=e=>{switch(e.type){case\"function\":return{name:\"function\"};case\"object\":let r={};return e.signature.properties.forEach(t=>{r[t.key]=g(t.value)}),{name:\"object\",value:r};default:throw new Error(`Unknown: ${e}`)}},g=e=>{let{name:r,raw:t}=e,n={};switch(typeof t<\"u\"&&(n.raw=t),e.name){case\"string\":case\"number\":case\"symbol\":case\"boolean\":return{...n,name:r};case\"Array\":return{...n,name:\"array\",value:e.elements.map(g)};case\"signature\":return{...n,...$(e)};case\"union\":case\"intersection\":return{...n,name:r,value:e.elements.map(g)};default:return{...n,name:\"other\",value:r}}};var Y=e=>e.name===\"literal\",G=e=>e.value.replace(/['|\"]/g,\"\"),X=e=>{switch(e.type){case\"function\":return{name:\"function\"};case\"object\":let r={};return e.signature.properties.forEach(t=>{r[t.key]=l(t.value)}),{name:\"object\",value:r};default:throw new Error(`Unknown: ${e}`)}},l=e=>{let{name:r,raw:t}=e,n={};switch(typeof t<\"u\"&&(n.raw=t),e.name){case\"literal\":return{...n,name:\"other\",value:e.value};case\"string\":case\"number\":case\"symbol\":case\"boolean\":return{...n,name:r};case\"Array\":return{...n,name:\"array\",value:e.elements.map(l)};case\"signature\":return{...n,...X(e)};case\"union\":return e.elements.every(Y)?{...n,name:\"enum\",value:e.elements.map(G)}:{...n,name:r,value:e.elements.map(l)};case\"intersection\":return{...n,name:r,value:e.elements.map(l)};default:return{...n,name:\"other\",value:r}}};import q from\"lodash/mapValues\";var S=/^['\"]|['\"]$/g,E=e=>e.replace(S,\"\"),F=e=>S.test(e);var K=/^\\(.*\\) => /,m=e=>{let{name:r,raw:t,computed:n,value:o}=e,a={};switch(typeof t<\"u\"&&(a.raw=t),r){case\"enum\":{let c=n?o:o.map(D=>{let u=E(D.value);return F(D.value)||Number.isNaN(Number(u))?u:Number(u)});return{...a,name:r,value:c}}case\"string\":case\"number\":case\"symbol\":return{...a,name:r};case\"func\":return{...a,name:\"function\"};case\"bool\":case\"boolean\":return{...a,name:\"boolean\"};case\"arrayOf\":case\"array\":return{...a,name:\"array\",value:o&&m(o)};case\"object\":return{...a,name:r};case\"objectOf\":return{...a,name:r,value:m(o)};case\"shape\":case\"exact\":let i=q(o,c=>m(c));return{...a,name:\"object\",value:i};case\"union\":return{...a,name:\"union\",value:o.map(c=>m(c))};case\"instanceOf\":case\"element\":case\"elementType\":default:{if(r?.indexOf(\"|\")>0)try{let u=r.split(\"|\").map(B=>JSON.parse(B));return{...a,name:\"enum\",value:u}}catch{}let c=o?`${r}(${o})`:r,D=K.test(r)?\"function\":\"other\";return{...a,name:D,value:c}}}};var T=e=>{let{type:r,tsType:t,flowType:n}=e;return r!=null?m(r):t!=null?g(t):n!=null?l(n):null};var Q=(o=>(o.JAVASCRIPT=\"JavaScript\",o.FLOW=\"Flow\",o.TYPESCRIPT=\"TypeScript\",o.UNKNOWN=\"Unknown\",o))(Q||{});var W=[\"null\",\"undefined\"];function f(e){return W.some(r=>r===e)}var w=e=>{if(!e)return\"\";if(typeof e==\"string\")return e;throw new Error(`Description: expected string, got: ${JSON.stringify(e)}`)};function b(e){return!!e.__docgenInfo}function v(e){return e!=null&&Object.keys(e).length>0}function A(e,r){return b(e)?e.__docgenInfo[r]:null}function N(e){return b(e)&&w(e.__docgenInfo.description)}import H from\"doctrine\";function z(e){return e!=null&&e.includes(\"@\")}function Z(e,r){let t;try{t=H.parse(e,{tags:r,sloppy:!0})}catch(n){throw console.error(n),new Error(\"Cannot parse JSDoc tags.\")}return t}var ee={tags:[\"param\",\"arg\",\"argument\",\"returns\",\"ignore\"]},V=(e,r=ee)=>{if(!z(e))return{includesJsDoc:!1,ignore:!1};let t=Z(e,r.tags),n=re(t);return n.ignore?{includesJsDoc:!0,ignore:!0}:{includesJsDoc:!0,ignore:!1,description:t.description,extractedTags:n}};function re(e){let r={params:null,returns:null,ignore:!1};for(let t=0;t<e.tags.length;t+=1){let n=e.tags[t];if(n.title===\"ignore\"){r.ignore=!0;break}else switch(n.title){case\"param\":case\"arg\":case\"argument\":{let o=te(n);o!=null&&(r.params==null&&(r.params=[]),r.params.push(o));break}case\"returns\":{let o=ne(n);o!=null&&(r.returns=o);break}default:break}}return r}function te(e){let r=e.name;return r!=null&&r!==\"null-null\"?{name:e.name,type:e.type,description:e.description,getPrettyName:()=>r.includes(\"null\")?r.replace(\"-null\",\"\").replace(\".null\",\"\"):e.name,getTypeName:()=>e.type!=null?y(e.type):null}:null}function ne(e){return e.type!=null?{type:e.type,description:e.description,getTypeName:()=>y(e.type)}:null}function y(e){return e.type===\"NameExpression\"?e.name:e.type===\"RecordType\"?`({${e.fields.map(t=>{if(t.value!=null){let n=y(t.value);return`${t.key}: ${n}`}return t.key}).join(\", \")}})`:e.type===\"UnionType\"?`(${e.elements.map(y).join(\"|\")})`:e.type===\"ArrayType\"?\"[]\":e.type===\"TypeApplication\"&&e.expression!=null&&e.expression.name===\"Array\"?`${y(e.applications[0])}[]`:e.type===\"NullableType\"||e.type===\"NonNullableType\"||e.type===\"OptionalType\"?y(e.expression):e.type===\"AllLiteral\"?\"any\":null}var Le=90,je=50;function P(e){return e.length>90}function J(e){return e.length>50}function s(e,r){return e===r?{summary:e}:{summary:e,detail:r}}var Me=e=>e.replace(/\\\\r\\\\n/g,\"\\\\n\");function h({name:e,value:r,elements:t,raw:n}){return r??(t!=null?t.map(h).join(\" | \"):n??e)}function oe({name:e,raw:r,elements:t}){return t!=null?s(t.map(h).join(\" | \")):r!=null?s(r.replace(/^\\|\\s*/,\"\")):s(e)}function ae({type:e,raw:r}){return r!=null?s(r):s(e)}function se({type:e,raw:r}){return r!=null?P(r)?s(e,r):s(r):s(e)}function pe(e){let{type:r}=e;return r===\"object\"?se(e):ae(e)}function ce({name:e,raw:r}){return r!=null?P(r)?s(e,r):s(r):s(e)}function O(e){if(e==null)return null;switch(e.name){case\"union\":return oe(e);case\"signature\":return pe(e);default:return ce(e)}}function R(e,r){if(e!=null){let{value:t}=e;if(!f(t))return J(t)?s(r.name,t):s(t)}return null}var k=(e,r)=>{let{flowType:t,description:n,required:o,defaultValue:a}=r;return{name:e,type:O(t),required:o,description:n,defaultValue:R(a,t)}};function U({tsType:e,required:r}){return e==null?null:r?s(e.name):s(e.name.replace(\" | undefined\",\"\"))}function C({defaultValue:e}){if(e!=null){let{value:r}=e;if(!f(r))return s(r)}return null}var I=(e,r)=>{let{description:t,required:n}=r;return{name:e,type:U(r),required:n,description:t,defaultValue:C(r)}};function ie(e){return e!=null?s(e.name):null}function ue(e){let{computed:r,func:t}=e;return typeof r>\"u\"&&typeof t>\"u\"}function le(e){return e?e.name===\"string\"?!0:e.name===\"enum\"?Array.isArray(e.value)&&e.value.every(({value:r})=>typeof r==\"string\"&&r[0]==='\"'&&r[r.length-1]==='\"'):!1:!1}function me(e,r){if(e!=null){let{value:t}=e;if(!f(t))return ue(e)&&le(r)?s(JSON.stringify(t)):s(t)}return null}function _(e,r,t){let{description:n,required:o,defaultValue:a}=t;return{name:e,type:ie(r),required:o,description:n,defaultValue:me(a,r)}}function d(e,r){if(r.includesJsDoc){let{description:t,extractedTags:n}=r;t!=null&&(e.description=r.description);let o=n.params!=null,a=n.returns!=null&&n.returns.type!=null;(o||a)&&(e.jsDocTags={params:o&&n.params.map(i=>({name:i.getPrettyName(),description:i.description})),returns:a&&{description:n.returns.description}})}return e}var fe=(e,r,t)=>{let n=_(e,r.type,r);return n.sbType=T(r),d(n,t)},ye=(e,r,t)=>{let n=I(e,r);return n.sbType=T(r),d(n,t)},ge=(e,r,t)=>{let n=k(e,r);return n.sbType=T(r),d(n,t)},De=(e,r,t)=>{let n=_(e,{name:\"unknown\"},r);return d(n,t)},x=e=>{switch(e){case\"JavaScript\":return fe;case\"TypeScript\":return ye;case\"Flow\":return ge;default:return De}};var L=e=>e.type!=null?\"JavaScript\":e.flowType!=null?\"Flow\":e.tsType!=null?\"TypeScript\":\"Unknown\",Te=e=>{let r=L(e[0]),t=x(r);return e.map(n=>{let o=n;return n.type?.elements&&(o={...n,type:{...n.type,value:n.type.elements}}),j(o.name,o,r,t)})},de=e=>{let r=Object.keys(e),t=L(e[r[0]]),n=x(t);return r.map(o=>{let a=e[o];return a!=null?j(o,a,t,n):null}).filter(Boolean)},yr=(e,r)=>{let t=A(e,r);return v(t)?Array.isArray(t)?Te(t):de(t):[]};function j(e,r,t,n){let o=V(r.description);return o.includesJsDoc&&o.ignore?null:{propDef:n(e,r,o),jsDocTags:o.extractedTags,docgenInfo:r,typeSystem:t}}function gr(e){return e!=null&&N(e)}import{combineParameters as Pe}from\"@storybook/store\";var dr=e=>{let{component:r,argTypes:t,parameters:{docs:n={}}}=e,{extractArgTypes:o}=n,a=o&&r?o(r):{};return a?Pe(a,t):t};var M=\"storybook/docs\",xr=`${M}/panel`,Sr=\"docs\",Er=`${M}/snippet-rendered`,xe=(n=>(n.AUTO=\"auto\",n.CODE=\"code\",n.DYNAMIC=\"dynamic\",n))(xe||{});var Se=/(addons\\/|addon-)(docs|controls)/,wr=e=>e.presetsList?.some(r=>Se.test(r.name));export{M as ADDON_ID,je as MAX_DEFAULT_VALUE_SUMMARY_LENGTH,Le as MAX_TYPE_SUMMARY_LENGTH,xr as PANEL_ID,Sr as PARAM_KEY,Er as SNIPPET_RENDERED,xe as SourceType,Q as TypeSystem,T as convert,s as createSummaryValue,dr as enhanceArgTypes,gr as extractComponentDescription,yr as extractComponentProps,Te as extractComponentSectionArray,de as extractComponentSectionObject,N as getDocgenDescription,A as getDocgenSection,b as hasDocgen,wr as hasDocsOrControls,f as isDefaultValueBlacklisted,J as isTooLongForDefaultValueSummary,P as isTooLongForTypeSummary,v as isValidDocgenSection,Me as normalizeNewlines,V as parseJsDoc,w as str};\n"],"names":["isExpression","node","isIterationStatement","isStatement","isSourceElement","trailingStatement","isProblematicIfStatement","current","astModule","ES6Regex","ES5Regex","NON_ASCII_WHITESPACES","IDENTIFIER_START","IDENTIFIER_PART","ch","isDecimalDigit","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","fromCodePoint","cp","cu1","cu2","isIdentifierStartES5","isIdentifierPartES5","isIdentifierStartES6","isIdentifierPartES6","codeModule","code","require$$0","isStrictModeReservedWordES6","id","isKeywordES5","strict","isKeywordES6","isReservedWordES5","isReservedWordES6","isRestrictedWord","isIdentifierNameES5","i","iz","decodeUtf16","lead","trail","isIdentifierNameES6","lowCh","check","isIdentifierES5","isIdentifierES6","keywordModule","utils","require$$1","require$$2","VERSION","utility","DoctrineError","message","Middle","throwError","Syntax","Token","source","length","index","previous","token","value","esutils","rangeOffset","addRange","isTypeName","Context","maybeAddRange","range","advance","scanHexEscape","prefix","len","scanString","str","quote","unescaped","restore","scanNumber","number","scanTypeName","ch2","next","consume","target","text","expect","parseUnionType","elements","startIndex","parseTypeExpression","parseArrayType","restStartIndex","parseFieldName","v","parseFieldType","key","rangeStart","parseRecordType","fields","rangeEnd","parseNameExpression","name","parseTypeExpressionList","parseTop","parseTypeName","expr","applications","parseResultType","parseParametersType","params","optionalSequence","rest","nameStartIndex","parseFunctionType","isNew","thisBinding","result","fnType","parseBasicTypeExpression","context","parseTopParamType","parseType","src","opt","parseParamType","stringifyImpl","compact","topLevel","stringify","options","typed","jsdoc","hasOwnProperty","sliceSource","last","func","obj","shallowCopy","ret","isASCIIAlphanumeric","isParamTitle","title","isReturnTitle","isProperty","isNameParameterRequired","isAllowedName","isAllowedNested","isAllowedOptional","isTypeParameterRequired","isAllowedType","WHITESPACE","STAR_MATCHER","unwrapComment","doc","convertUnwrappedCommentIndex","originalSource","unwrappedIndex","replacedSource","numSkippedChars","matcher","match","exports","Rules","lineNumber","recoverable","sloppy","scanTitle","seekContent","waiting","brace","type","direct","convertIndex","scanIdentifier","identifier","skipWhiteSpace","parseName","allowBrackets","allowNestedParams","useBrackets","insideString","bracketDepth","skipToTag","rangeIndex","TagParser","errorText","args","msg","whole","error","optional","assign","description","captionStartTag","captionEndTag","captionStart","captionEnd","kind","kinds","access","gotType","variation","shouldBeEmpty","sequences","method","parseTag","parser","tag","scanJSDocDescription","preserveWhitespace","atAllowed","parse","comment","tags","interestingTags","$","r","t","g","n","Y","G","X","l","S","E","F","K","m","o","a","c","D","u","q","B","T","Q","W","f","w","b","A","N","z","Z","H","ee","V","re","te","ne","y","P","J","s","h","oe","ae","se","pe","ce","O","R","k","U","C","I","ie","ue","le","me","_","d","fe","ye","ge","De","x","L","Te","_a","j","de","yr","gr","dr","Pe","M","Er","xe"],"mappings":"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"}