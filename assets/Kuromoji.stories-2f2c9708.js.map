{"version":3,"file":"Kuromoji.stories-2f2c9708.js","sources":["../../node_modules/lru_map/dist/lru.js","../../node_modules/kuromojin/lib/Deferred.js","../../node_modules/kuromoji/src/viterbi/ViterbiNode.js","../../node_modules/kuromoji/src/viterbi/ViterbiLattice.js","../../node_modules/kuromoji/src/util/SurrogateAwareString.js","../../node_modules/kuromoji/src/viterbi/ViterbiBuilder.js","../../node_modules/kuromoji/src/viterbi/ViterbiSearcher.js","../../node_modules/kuromoji/src/util/IpadicFormatter.js","../../node_modules/kuromoji/src/Tokenizer.js","../../node_modules/zlibjs/bin/gunzip.min.js","../../node_modules/async/dist/async.js","../../node_modules/doublearray/doublearray.js","../../node_modules/kuromoji/src/util/ByteBuffer.js","../../node_modules/kuromoji/src/dict/TokenInfoDictionary.js","../../node_modules/kuromoji/src/dict/ConnectionCosts.js","../../node_modules/kuromoji/src/dict/CharacterClass.js","../../node_modules/kuromoji/src/dict/InvokeDefinitionMap.js","../../node_modules/kuromoji/src/dict/CharacterDefinition.js","../../node_modules/kuromoji/src/dict/UnknownDictionary.js","../../node_modules/kuromoji/src/dict/DynamicDictionaries.js","../../node_modules/kuromoji/src/loader/DictionaryLoader.js","../../node_modules/kuromoji/src/loader/BrowserDictionaryLoader.js","../../node_modules/kuromoji/src/TokenizerBuilder.js","../../node_modules/kuromoji/src/dict/builder/ConnectionCostsBuilder.js","../../node_modules/kuromoji/src/dict/builder/CharacterDefinitionBuilder.js","../../node_modules/kuromoji/src/dict/builder/DictionaryBuilder.js","../../node_modules/kuromoji/src/kuromoji.js","../../node_modules/kuromojin/lib/kuromojin.js","../../node_modules/kuromojin/lib/index.js"],"sourcesContent":["!function(g,c){typeof exports==\"object\"&&typeof module!=\"undefined\"?c(exports):typeof define==\"function\"&&define.amd?define([\"exports\"],c):c((g=g||self).lru_map=g.lru_map||{})}(this,function(g){const c=Symbol(\"newer\"),e=Symbol(\"older\");class n{constructor(a,b){typeof a!==\"number\"&&(b=a,a=0),this.size=0,this.limit=a,this.oldest=this.newest=void 0,this._keymap=new Map(),b&&(this.assign(b),a<1&&(this.limit=this.size))}_markEntryAsUsed(a){if(a===this.newest)return;a[c]&&(a===this.oldest&&(this.oldest=a[c]),a[c][e]=a[e]),a[e]&&(a[e][c]=a[c]),a[c]=void 0,a[e]=this.newest,this.newest&&(this.newest[c]=a),this.newest=a}assign(a){let b,d=this.limit||Number.MAX_VALUE;this._keymap.clear();let m=a[Symbol.iterator]();for(let h=m.next();!h.done;h=m.next()){let f=new l(h.value[0],h.value[1]);this._keymap.set(f.key,f),b?(b[c]=f,f[e]=b):this.oldest=f,b=f;if(d--==0)throw new Error(\"overflow\")}this.newest=b,this.size=this._keymap.size}get(a){var b=this._keymap.get(a);return b?(this._markEntryAsUsed(b),b.value):void 0}set(a,b){var d=this._keymap.get(a);return d?(d.value=b,this._markEntryAsUsed(d),this):(this._keymap.set(a,d=new l(a,b)),this.newest?(this.newest[c]=d,d[e]=this.newest):this.oldest=d,this.newest=d,++this.size,this.size>this.limit&&this.shift(),this)}shift(){var a=this.oldest;if(a)return this.oldest[c]?(this.oldest=this.oldest[c],this.oldest[e]=void 0):(this.oldest=void 0,this.newest=void 0),a[c]=a[e]=void 0,this._keymap.delete(a.key),--this.size,[a.key,a.value]}find(a){let b=this._keymap.get(a);return b?b.value:void 0}has(a){return this._keymap.has(a)}delete(a){var b=this._keymap.get(a);return b?(this._keymap.delete(b.key),b[c]&&b[e]?(b[e][c]=b[c],b[c][e]=b[e]):b[c]?(b[c][e]=void 0,this.oldest=b[c]):b[e]?(b[e][c]=void 0,this.newest=b[e]):this.oldest=this.newest=void 0,this.size--,b.value):void 0}clear(){this.oldest=this.newest=void 0,this.size=0,this._keymap.clear()}keys(){return new j(this.oldest)}values(){return new k(this.oldest)}entries(){return this}[Symbol.iterator](){return new i(this.oldest)}forEach(a,b){typeof b!==\"object\"&&(b=this);let d=this.oldest;for(;d;)a.call(b,d.value,d.key,this),d=d[c]}toJSON(){for(var a=new Array(this.size),b=0,d=this.oldest;d;)a[b++]={key:d.key,value:d.value},d=d[c];return a}toString(){for(var a=\"\",b=this.oldest;b;)a+=String(b.key)+\":\"+b.value,b=b[c],b&&(a+=\" < \");return a}}g.LRUMap=n;function l(a,b){this.key=a,this.value=b,this[c]=void 0,this[e]=void 0}function i(a){this.entry=a}i.prototype[Symbol.iterator]=function(){return this},i.prototype.next=function(){let a=this.entry;return a?(this.entry=a[c],{done:!1,value:[a.key,a.value]}):{done:!0,value:void 0}};function j(a){this.entry=a}j.prototype[Symbol.iterator]=function(){return this},j.prototype.next=function(){let a=this.entry;return a?(this.entry=a[c],{done:!1,value:a.key}):{done:!0,value:void 0}};function k(a){this.entry=a}k.prototype[Symbol.iterator]=function(){return this},k.prototype.next=function(){let a=this.entry;return a?(this.entry=a[c],{done:!1,value:a.value}):{done:!0,value:void 0}}});\n//# sourceMappingURL=lru.js.map\n","// LICENSE : MIT\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    return Deferred;\n}());\nexports.default = Deferred;\n//# sourceMappingURL=Deferred.js.map","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * ViterbiNode is a node of ViterbiLattice\n * @param {number} node_name Word ID\n * @param {number} node_cost Word cost to generate\n * @param {number} start_pos Start position from 1\n * @param {number} length Word length\n * @param {string} type Node type (KNOWN, UNKNOWN, BOS, EOS, ...)\n * @param {number} left_id Left context ID\n * @param {number} right_id Right context ID\n * @param {string} surface_form Surface form of this word\n * @constructor\n */\nfunction ViterbiNode(node_name, node_cost, start_pos, length, type, left_id, right_id, surface_form) {\n    this.name = node_name;\n    this.cost = node_cost;\n    this.start_pos = start_pos;\n    this.length = length;\n    this.left_id = left_id;\n    this.right_id = right_id;\n    this.prev = null;\n    this.surface_form = surface_form;\n    if (type === \"BOS\") {\n        this.shortest_cost = 0;\n    } else {\n        this.shortest_cost = Number.MAX_VALUE;\n    }\n    this.type = type;\n}\n\nmodule.exports = ViterbiNode;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ViterbiNode = require(\"./ViterbiNode\");\n\n/**\n * ViterbiLattice is a lattice in Viterbi algorithm\n * @constructor\n */\nfunction ViterbiLattice() {\n    this.nodes_end_at = [];\n    this.nodes_end_at[0] = [ new ViterbiNode(-1, 0, 0, 0, \"BOS\", 0, 0, \"\") ];\n    this.eos_pos = 1;\n}\n\n/**\n * Append node to ViterbiLattice\n * @param {ViterbiNode} node\n */\nViterbiLattice.prototype.append = function (node) {\n    var last_pos = node.start_pos + node.length - 1;\n    if (this.eos_pos < last_pos) {\n        this.eos_pos = last_pos;\n    }\n\n    var prev_nodes = this.nodes_end_at[last_pos];\n    if (prev_nodes == null) {\n        prev_nodes = [];\n    }\n    prev_nodes.push(node);\n\n    this.nodes_end_at[last_pos] = prev_nodes;\n};\n\n/**\n * Set ends with EOS (End of Statement)\n */\nViterbiLattice.prototype.appendEos = function () {\n    var last_index = this.nodes_end_at.length;\n    this.eos_pos++;\n    this.nodes_end_at[last_index] = [ new ViterbiNode(-1, 0, this.eos_pos, 0, \"EOS\", 0, 0, \"\") ];\n};\n\nmodule.exports = ViterbiLattice;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * String wrapper for UTF-16 surrogate pair (4 bytes)\n * @param {string} str String to wrap\n * @constructor\n */\nfunction SurrogateAwareString(str) {\n    this.str = str;\n    this.index_mapping = [];\n\n    for (var pos = 0; pos < str.length; pos++) {\n        var ch = str.charAt(pos);\n        this.index_mapping.push(pos);\n        if (SurrogateAwareString.isSurrogatePair(ch)) {\n            pos++;\n        }\n    }\n    // Surrogate aware length\n    this.length = this.index_mapping.length;\n}\n\nSurrogateAwareString.prototype.slice = function (index) {\n    if (this.index_mapping.length <= index) {\n        return \"\";\n    }\n    var surrogate_aware_index = this.index_mapping[index];\n    return this.str.slice(surrogate_aware_index);\n};\n\nSurrogateAwareString.prototype.charAt = function (index) {\n    if (this.str.length <= index) {\n        return \"\";\n    }\n    var surrogate_aware_start_index = this.index_mapping[index];\n    var surrogate_aware_end_index = this.index_mapping[index + 1];\n\n    if (surrogate_aware_end_index == null) {\n        return this.str.slice(surrogate_aware_start_index);\n    }\n    return this.str.slice(surrogate_aware_start_index, surrogate_aware_end_index);\n};\n\nSurrogateAwareString.prototype.charCodeAt = function (index) {\n    if (this.index_mapping.length <= index) {\n        return NaN;\n    }\n    var surrogate_aware_index = this.index_mapping[index];\n    var upper = this.str.charCodeAt(surrogate_aware_index);\n    var lower;\n    if (upper >= 0xD800 && upper <= 0xDBFF && surrogate_aware_index < this.str.length) {\n        lower = this.str.charCodeAt(surrogate_aware_index + 1);\n        if (lower >= 0xDC00 && lower <= 0xDFFF) {\n            return (upper - 0xD800) * 0x400 + lower - 0xDC00 + 0x10000;\n        }\n    }\n    return upper;\n};\n\nSurrogateAwareString.prototype.toString = function () {\n    return this.str;\n};\n\nSurrogateAwareString.isSurrogatePair = function (ch) {\n    var utf16_code = ch.charCodeAt(0);\n    if (utf16_code >= 0xD800 && utf16_code <= 0xDBFF) {\n        // surrogate pair\n        return true;\n    } else {\n        return false;\n    }\n};\n\nmodule.exports = SurrogateAwareString;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ViterbiNode = require(\"./ViterbiNode\");\nvar ViterbiLattice = require(\"./ViterbiLattice\");\nvar SurrogateAwareString = require(\"../util/SurrogateAwareString\");\n\n/**\n * ViterbiBuilder builds word lattice (ViterbiLattice)\n * @param {DynamicDictionaries} dic dictionary\n * @constructor\n */\nfunction ViterbiBuilder(dic) {\n    this.trie = dic.trie;\n    this.token_info_dictionary = dic.token_info_dictionary;\n    this.unknown_dictionary = dic.unknown_dictionary;\n}\n\n/**\n * Build word lattice\n * @param {string} sentence_str Input text\n * @returns {ViterbiLattice} Word lattice\n */\nViterbiBuilder.prototype.build = function (sentence_str) {\n    var lattice = new ViterbiLattice();\n    var sentence = new SurrogateAwareString(sentence_str);\n\n    var key, trie_id, left_id, right_id, word_cost;\n    for (var pos = 0; pos < sentence.length; pos++) {\n        var tail = sentence.slice(pos);\n        var vocabulary = this.trie.commonPrefixSearch(tail);\n        for (var n = 0; n < vocabulary.length; n++) {  // Words in dictionary do not have surrogate pair (only UCS2 set)\n            trie_id = vocabulary[n].v;\n            key = vocabulary[n].k;\n\n            var token_info_ids = this.token_info_dictionary.target_map[trie_id];\n            for (var i = 0; i < token_info_ids.length; i++) {\n                var token_info_id = parseInt(token_info_ids[i]);\n\n                left_id = this.token_info_dictionary.dictionary.getShort(token_info_id);\n                right_id = this.token_info_dictionary.dictionary.getShort(token_info_id + 2);\n                word_cost = this.token_info_dictionary.dictionary.getShort(token_info_id + 4);\n\n                // node_name, cost, start_index, length, type, left_id, right_id, surface_form\n                lattice.append(new ViterbiNode(token_info_id, word_cost, pos + 1, key.length, \"KNOWN\", left_id, right_id, key));\n            }\n        }\n\n        // Unknown word processing\n        var surrogate_aware_tail = new SurrogateAwareString(tail);\n        var head_char = new SurrogateAwareString(surrogate_aware_tail.charAt(0));\n        var head_char_class = this.unknown_dictionary.lookup(head_char.toString());\n        if (vocabulary == null || vocabulary.length === 0 || head_char_class.is_always_invoke === 1) {\n            // Process unknown word\n            key = head_char;\n            if (head_char_class.is_grouping === 1 && 1 < surrogate_aware_tail.length) {\n                for (var k = 1; k < surrogate_aware_tail.length; k++) {\n                    var next_char = surrogate_aware_tail.charAt(k);\n                    var next_char_class = this.unknown_dictionary.lookup(next_char);\n                    if (head_char_class.class_name !== next_char_class.class_name) {\n                        break;\n                    }\n                    key += next_char;\n                }\n            }\n\n            var unk_ids = this.unknown_dictionary.target_map[head_char_class.class_id];\n            for (var j = 0; j < unk_ids.length; j++) {\n                var unk_id = parseInt(unk_ids[j]);\n\n                left_id = this.unknown_dictionary.dictionary.getShort(unk_id);\n                right_id = this.unknown_dictionary.dictionary.getShort(unk_id + 2);\n                word_cost = this.unknown_dictionary.dictionary.getShort(unk_id + 4);\n\n                // node_name, cost, start_index, length, type, left_id, right_id, surface_form\n                lattice.append(new ViterbiNode(unk_id, word_cost, pos + 1, key.length, \"UNKNOWN\", left_id, right_id, key.toString()));\n            }\n        }\n    }\n    lattice.appendEos();\n\n    return lattice;\n};\n\nmodule.exports = ViterbiBuilder;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * ViterbiSearcher is for searching best Viterbi path\n * @param {ConnectionCosts} connection_costs Connection costs matrix\n * @constructor\n */\nfunction ViterbiSearcher(connection_costs) {\n    this.connection_costs = connection_costs;\n}\n\n/**\n * Search best path by forward-backward algorithm\n * @param {ViterbiLattice} lattice Viterbi lattice to search\n * @returns {Array} Shortest path\n */\nViterbiSearcher.prototype.search = function (lattice) {\n    lattice = this.forward(lattice);\n    return this.backward(lattice);\n};\n\nViterbiSearcher.prototype.forward = function (lattice) {\n    var i, j, k;\n    for (i = 1; i <= lattice.eos_pos; i++) {\n        var nodes = lattice.nodes_end_at[i];\n        if (nodes == null) {\n            continue;\n        }\n        for (j = 0; j < nodes.length; j++) {\n            var node = nodes[j];\n            var cost = Number.MAX_VALUE;\n            var shortest_prev_node;\n\n            var prev_nodes = lattice.nodes_end_at[node.start_pos - 1];\n            if (prev_nodes == null) {\n                // TODO process unknown words (repair word lattice)\n                continue;\n            }\n            for (k = 0; k < prev_nodes.length; k++) {\n                var prev_node = prev_nodes[k];\n\n                var edge_cost;\n                if (node.left_id == null || prev_node.right_id == null) {\n                    // TODO assert\n                    console.log(\"Left or right is null\");\n                    edge_cost = 0;\n                } else {\n                    edge_cost = this.connection_costs.get(prev_node.right_id, node.left_id);\n                }\n\n                var _cost = prev_node.shortest_cost + edge_cost + node.cost;\n                if (_cost < cost) {\n                    shortest_prev_node = prev_node;\n                    cost = _cost;\n                }\n            }\n\n            node.prev = shortest_prev_node;\n            node.shortest_cost = cost;\n        }\n    }\n    return lattice;\n};\n\nViterbiSearcher.prototype.backward = function (lattice) {\n    var shortest_path = [];\n    var eos = lattice.nodes_end_at[lattice.nodes_end_at.length - 1][0];\n\n    var node_back = eos.prev;\n    if (node_back == null) {\n        return [];\n    }\n    while (node_back.type !== \"BOS\") {\n        shortest_path.push(node_back);\n        if (node_back.prev == null) {\n            // TODO Failed to back. Process unknown words?\n            return [];\n        }\n        node_back = node_back.prev;\n    }\n\n    return shortest_path.reverse();\n};\n\nmodule.exports = ViterbiSearcher;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Mappings between IPADIC dictionary features and tokenized results\n * @constructor\n */\nfunction IpadicFormatter() {\n}\n\nIpadicFormatter.prototype.formatEntry = function (word_id, position, type, features) {\n    var token = {};\n    token.word_id = word_id;\n    token.word_type = type;\n    token.word_position = position;\n\n    token.surface_form = features[0];\n    token.pos = features[1];\n    token.pos_detail_1 = features[2];\n    token.pos_detail_2 = features[3];\n    token.pos_detail_3 = features[4];\n    token.conjugated_type = features[5];\n    token.conjugated_form = features[6];\n    token.basic_form = features[7];\n    token.reading = features[8];\n    token.pronunciation = features[9];\n\n    return token;\n};\n\nIpadicFormatter.prototype.formatUnknownEntry = function (word_id, position, type, features, surface_form) {\n    var token = {};\n    token.word_id = word_id;\n    token.word_type = type;\n    token.word_position = position;\n\n    token.surface_form = surface_form;\n    token.pos = features[1];\n    token.pos_detail_1 = features[2];\n    token.pos_detail_2 = features[3];\n    token.pos_detail_3 = features[4];\n    token.conjugated_type = features[5];\n    token.conjugated_form = features[6];\n    token.basic_form = features[7];\n    // token.reading = features[8];\n    // token.pronunciation = features[9];\n\n    return token;\n};\n\nmodule.exports = IpadicFormatter;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ViterbiBuilder = require(\"./viterbi/ViterbiBuilder\");\nvar ViterbiSearcher = require(\"./viterbi/ViterbiSearcher\");\nvar IpadicFormatter = require(\"./util/IpadicFormatter\");\n\nvar PUNCTUATION = /、|。/;\n\n/**\n * Tokenizer\n * @param {DynamicDictionaries} dic Dictionaries used by this tokenizer\n * @constructor\n */\nfunction Tokenizer(dic) {\n    this.token_info_dictionary = dic.token_info_dictionary;\n    this.unknown_dictionary = dic.unknown_dictionary;\n    this.viterbi_builder = new ViterbiBuilder(dic);\n    this.viterbi_searcher = new ViterbiSearcher(dic.connection_costs);\n    this.formatter = new IpadicFormatter();  // TODO Other dictionaries\n}\n\n/**\n * Split into sentence by punctuation\n * @param {string} input Input text\n * @returns {Array.<string>} Sentences end with punctuation\n */\nTokenizer.splitByPunctuation = function (input) {\n    var sentences = [];\n    var tail = input;\n    while (true) {\n        if (tail === \"\") {\n            break;\n        }\n        var index = tail.search(PUNCTUATION);\n        if (index < 0) {\n            sentences.push(tail);\n            break;\n        }\n        sentences.push(tail.substring(0, index + 1));\n        tail = tail.substring(index + 1);\n    }\n    return sentences;\n};\n\n/**\n * Tokenize text\n * @param {string} text Input text to analyze\n * @returns {Array} Tokens\n */\nTokenizer.prototype.tokenize = function (text) {\n    var sentences = Tokenizer.splitByPunctuation(text);\n    var tokens = [];\n    for (var i = 0; i < sentences.length; i++) {\n        var sentence = sentences[i];\n        this.tokenizeForSentence(sentence, tokens);\n    }\n    return tokens;\n};\n\nTokenizer.prototype.tokenizeForSentence = function (sentence, tokens) {\n    if (tokens == null) {\n        tokens = [];\n    }\n    var lattice = this.getLattice(sentence);\n    var best_path = this.viterbi_searcher.search(lattice);\n    var last_pos = 0;\n    if (tokens.length > 0) {\n        last_pos = tokens[tokens.length - 1].word_position;\n    }\n\n    for (var j = 0; j < best_path.length; j++) {\n        var node = best_path[j];\n\n        var token, features, features_line;\n        if (node.type === \"KNOWN\") {\n            features_line = this.token_info_dictionary.getFeatures(node.name);\n            if (features_line == null) {\n                features = [];\n            } else {\n                features = features_line.split(\",\");\n            }\n            token = this.formatter.formatEntry(node.name, last_pos + node.start_pos, node.type, features);\n        } else if (node.type === \"UNKNOWN\") {\n            // Unknown word\n            features_line = this.unknown_dictionary.getFeatures(node.name);\n            if (features_line == null) {\n                features = [];\n            } else {\n                features = features_line.split(\",\");\n            }\n            token = this.formatter.formatUnknownEntry(node.name, last_pos + node.start_pos, node.type, features, node.surface_form);\n        } else {\n            // TODO User dictionary\n            token = this.formatter.formatEntry(node.name, last_pos + node.start_pos, node.type, []);\n        }\n\n        tokens.push(token);\n    }\n\n    return tokens;\n};\n\n/**\n * Build word lattice\n * @param {string} text Input text to analyze\n * @returns {ViterbiLattice} Word lattice\n */\nTokenizer.prototype.getLattice = function (text) {\n    return this.viterbi_builder.build(text);\n};\n\nmodule.exports = Tokenizer;\n","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {'use strict';function n(e){throw e;}var p=void 0,aa=this;function t(e,b){var d=e.split(\".\"),c=aa;!(d[0]in c)&&c.execScript&&c.execScript(\"var \"+d[0]);for(var a;d.length&&(a=d.shift());)!d.length&&b!==p?c[a]=b:c=c[a]?c[a]:c[a]={}};var x=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;new (x?Uint8Array:Array)(256);var y;for(y=0;256>y;++y)for(var A=y,ba=7,A=A>>>1;A;A>>>=1)--ba;function B(e,b,d){var c,a=\"number\"===typeof b?b:b=0,f=\"number\"===typeof d?d:e.length;c=-1;for(a=f&7;a--;++b)c=c>>>8^C[(c^e[b])&255];for(a=f>>3;a--;b+=8)c=c>>>8^C[(c^e[b])&255],c=c>>>8^C[(c^e[b+1])&255],c=c>>>8^C[(c^e[b+2])&255],c=c>>>8^C[(c^e[b+3])&255],c=c>>>8^C[(c^e[b+4])&255],c=c>>>8^C[(c^e[b+5])&255],c=c>>>8^C[(c^e[b+6])&255],c=c>>>8^C[(c^e[b+7])&255];return(c^4294967295)>>>0}\nvar D=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,\n2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,\n2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,\n2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,\n3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,\n936918E3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],C=x?new Uint32Array(D):D;function E(){}E.prototype.getName=function(){return this.name};E.prototype.getData=function(){return this.data};E.prototype.G=function(){return this.H};function G(e){var b=e.length,d=0,c=Number.POSITIVE_INFINITY,a,f,k,l,m,r,q,g,h,v;for(g=0;g<b;++g)e[g]>d&&(d=e[g]),e[g]<c&&(c=e[g]);a=1<<d;f=new (x?Uint32Array:Array)(a);k=1;l=0;for(m=2;k<=d;){for(g=0;g<b;++g)if(e[g]===k){r=0;q=l;for(h=0;h<k;++h)r=r<<1|q&1,q>>=1;v=k<<16|g;for(h=r;h<a;h+=m)f[h]=v;++l}++k;l<<=1;m<<=1}return[f,d,c]};var J=[],K;for(K=0;288>K;K++)switch(!0){case 143>=K:J.push([K+48,8]);break;case 255>=K:J.push([K-144+400,9]);break;case 279>=K:J.push([K-256+0,7]);break;case 287>=K:J.push([K-280+192,8]);break;default:n(\"invalid literal: \"+K)}\nvar ca=function(){function e(a){switch(!0){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,\na-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:n(\"invalid length: \"+a)}}var b=[],d,c;for(d=3;258>=d;d++)c=e(d),b[d]=c[2]<<24|c[1]<<\n16|c[0];return b}();x&&new Uint32Array(ca);function L(e,b){this.i=[];this.j=32768;this.d=this.f=this.c=this.n=0;this.input=x?new Uint8Array(e):e;this.o=!1;this.k=M;this.w=!1;if(b||!(b={}))b.index&&(this.c=b.index),b.bufferSize&&(this.j=b.bufferSize),b.bufferType&&(this.k=b.bufferType),b.resize&&(this.w=b.resize);switch(this.k){case N:this.a=32768;this.b=new (x?Uint8Array:Array)(32768+this.j+258);break;case M:this.a=0;this.b=new (x?Uint8Array:Array)(this.j);this.e=this.D;this.q=this.A;this.l=this.C;break;default:n(Error(\"invalid inflate mode\"))}}\nvar N=0,M=1;\nL.prototype.g=function(){for(;!this.o;){var e=P(this,3);e&1&&(this.o=!0);e>>>=1;switch(e){case 0:var b=this.input,d=this.c,c=this.b,a=this.a,f=b.length,k=p,l=p,m=c.length,r=p;this.d=this.f=0;d+1>=f&&n(Error(\"invalid uncompressed block header: LEN\"));k=b[d++]|b[d++]<<8;d+1>=f&&n(Error(\"invalid uncompressed block header: NLEN\"));l=b[d++]|b[d++]<<8;k===~l&&n(Error(\"invalid uncompressed block header: length verify\"));d+k>b.length&&n(Error(\"input buffer is broken\"));switch(this.k){case N:for(;a+k>c.length;){r=\nm-a;k-=r;if(x)c.set(b.subarray(d,d+r),a),a+=r,d+=r;else for(;r--;)c[a++]=b[d++];this.a=a;c=this.e();a=this.a}break;case M:for(;a+k>c.length;)c=this.e({t:2});break;default:n(Error(\"invalid inflate mode\"))}if(x)c.set(b.subarray(d,d+k),a),a+=k,d+=k;else for(;k--;)c[a++]=b[d++];this.c=d;this.a=a;this.b=c;break;case 1:this.l(da,ea);break;case 2:for(var q=P(this,5)+257,g=P(this,5)+1,h=P(this,4)+4,v=new (x?Uint8Array:Array)(Q.length),s=p,F=p,H=p,w=p,z=p,O=p,I=p,u=p,Z=p,u=0;u<h;++u)v[Q[u]]=P(this,3);if(!x){u=\nh;for(h=v.length;u<h;++u)v[Q[u]]=0}s=G(v);w=new (x?Uint8Array:Array)(q+g);u=0;for(Z=q+g;u<Z;)switch(z=R(this,s),z){case 16:for(I=3+P(this,2);I--;)w[u++]=O;break;case 17:for(I=3+P(this,3);I--;)w[u++]=0;O=0;break;case 18:for(I=11+P(this,7);I--;)w[u++]=0;O=0;break;default:O=w[u++]=z}F=x?G(w.subarray(0,q)):G(w.slice(0,q));H=x?G(w.subarray(q)):G(w.slice(q));this.l(F,H);break;default:n(Error(\"unknown BTYPE: \"+e))}}return this.q()};\nvar S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],Q=x?new Uint16Array(S):S,fa=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],ga=x?new Uint16Array(fa):fa,ha=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],T=x?new Uint8Array(ha):ha,ia=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],ja=x?new Uint16Array(ia):ia,ka=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,\n11,12,12,13,13],U=x?new Uint8Array(ka):ka,V=new (x?Uint8Array:Array)(288),W,la;W=0;for(la=V.length;W<la;++W)V[W]=143>=W?8:255>=W?9:279>=W?7:8;var da=G(V),X=new (x?Uint8Array:Array)(30),Y,ma;Y=0;for(ma=X.length;Y<ma;++Y)X[Y]=5;var ea=G(X);function P(e,b){for(var d=e.f,c=e.d,a=e.input,f=e.c,k=a.length,l;c<b;)f>=k&&n(Error(\"input buffer is broken\")),d|=a[f++]<<c,c+=8;l=d&(1<<b)-1;e.f=d>>>b;e.d=c-b;e.c=f;return l}\nfunction R(e,b){for(var d=e.f,c=e.d,a=e.input,f=e.c,k=a.length,l=b[0],m=b[1],r,q;c<m&&!(f>=k);)d|=a[f++]<<c,c+=8;r=l[d&(1<<m)-1];q=r>>>16;q>c&&n(Error(\"invalid code length: \"+q));e.f=d>>q;e.d=c-q;e.c=f;return r&65535}\nL.prototype.l=function(e,b){var d=this.b,c=this.a;this.r=e;for(var a=d.length-258,f,k,l,m;256!==(f=R(this,e));)if(256>f)c>=a&&(this.a=c,d=this.e(),c=this.a),d[c++]=f;else{k=f-257;m=ga[k];0<T[k]&&(m+=P(this,T[k]));f=R(this,b);l=ja[f];0<U[f]&&(l+=P(this,U[f]));c>=a&&(this.a=c,d=this.e(),c=this.a);for(;m--;)d[c]=d[c++-l]}for(;8<=this.d;)this.d-=8,this.c--;this.a=c};\nL.prototype.C=function(e,b){var d=this.b,c=this.a;this.r=e;for(var a=d.length,f,k,l,m;256!==(f=R(this,e));)if(256>f)c>=a&&(d=this.e(),a=d.length),d[c++]=f;else{k=f-257;m=ga[k];0<T[k]&&(m+=P(this,T[k]));f=R(this,b);l=ja[f];0<U[f]&&(l+=P(this,U[f]));c+m>a&&(d=this.e(),a=d.length);for(;m--;)d[c]=d[c++-l]}for(;8<=this.d;)this.d-=8,this.c--;this.a=c};\nL.prototype.e=function(){var e=new (x?Uint8Array:Array)(this.a-32768),b=this.a-32768,d,c,a=this.b;if(x)e.set(a.subarray(32768,e.length));else{d=0;for(c=e.length;d<c;++d)e[d]=a[d+32768]}this.i.push(e);this.n+=e.length;if(x)a.set(a.subarray(b,b+32768));else for(d=0;32768>d;++d)a[d]=a[b+d];this.a=32768;return a};\nL.prototype.D=function(e){var b,d=this.input.length/this.c+1|0,c,a,f,k=this.input,l=this.b;e&&(\"number\"===typeof e.t&&(d=e.t),\"number\"===typeof e.z&&(d+=e.z));2>d?(c=(k.length-this.c)/this.r[2],f=258*(c/2)|0,a=f<l.length?l.length+f:l.length<<1):a=l.length*d;x?(b=new Uint8Array(a),b.set(l)):b=l;return this.b=b};\nL.prototype.q=function(){var e=0,b=this.b,d=this.i,c,a=new (x?Uint8Array:Array)(this.n+(this.a-32768)),f,k,l,m;if(0===d.length)return x?this.b.subarray(32768,this.a):this.b.slice(32768,this.a);f=0;for(k=d.length;f<k;++f){c=d[f];l=0;for(m=c.length;l<m;++l)a[e++]=c[l]}f=32768;for(k=this.a;f<k;++f)a[e++]=b[f];this.i=[];return this.buffer=a};\nL.prototype.A=function(){var e,b=this.a;x?this.w?(e=new Uint8Array(b),e.set(this.b.subarray(0,b))):e=this.b.subarray(0,b):(this.b.length>b&&(this.b.length=b),e=this.b);return this.buffer=e};function $(e){this.input=e;this.c=0;this.m=[];this.s=!1}$.prototype.F=function(){this.s||this.g();return this.m.slice()};\n$.prototype.g=function(){for(var e=this.input.length;this.c<e;){var b=new E,d=p,c=p,a=p,f=p,k=p,l=p,m=p,r=p,q=p,g=this.input,h=this.c;b.u=g[h++];b.v=g[h++];(31!==b.u||139!==b.v)&&n(Error(\"invalid file signature:\"+b.u+\",\"+b.v));b.p=g[h++];switch(b.p){case 8:break;default:n(Error(\"unknown compression method: \"+b.p))}b.h=g[h++];r=g[h++]|g[h++]<<8|g[h++]<<16|g[h++]<<24;b.H=new Date(1E3*r);b.N=g[h++];b.M=g[h++];0<(b.h&4)&&(b.I=g[h++]|g[h++]<<8,h+=b.I);if(0<(b.h&8)){m=[];for(l=0;0<(k=g[h++]);)m[l++]=String.fromCharCode(k);\nb.name=m.join(\"\")}if(0<(b.h&16)){m=[];for(l=0;0<(k=g[h++]);)m[l++]=String.fromCharCode(k);b.J=m.join(\"\")}0<(b.h&2)&&(b.B=B(g,0,h)&65535,b.B!==(g[h++]|g[h++]<<8)&&n(Error(\"invalid header crc16\")));d=g[g.length-4]|g[g.length-3]<<8|g[g.length-2]<<16|g[g.length-1]<<24;g.length-h-4-4<512*d&&(f=d);c=new L(g,{index:h,bufferSize:f});b.data=a=c.g();h=c.c;b.K=q=(g[h++]|g[h++]<<8|g[h++]<<16|g[h++]<<24)>>>0;B(a,p,p)!==q&&n(Error(\"invalid CRC-32 checksum: 0x\"+B(a,p,p).toString(16)+\" / 0x\"+q.toString(16)));b.L=\nd=(g[h++]|g[h++]<<8|g[h++]<<16|g[h++]<<24)>>>0;(a.length&4294967295)!==d&&n(Error(\"invalid input size: \"+(a.length&4294967295)+\" / \"+d));this.m.push(b);this.c=h}this.s=!0;var v=this.m,s,F,H=0,w=0,z;s=0;for(F=v.length;s<F;++s)w+=v[s].data.length;if(x){z=new Uint8Array(w);for(s=0;s<F;++s)z.set(v[s].data,H),H+=v[s].data.length}else{z=[];for(s=0;s<F;++s)z[s]=v[s].data;z=Array.prototype.concat.apply([],z)}return z};t(\"Zlib.Gunzip\",$);t(\"Zlib.Gunzip.prototype.decompress\",$.prototype.g);t(\"Zlib.Gunzip.prototype.getMembers\",$.prototype.F);t(\"Zlib.GunzipMember\",E);t(\"Zlib.GunzipMember.prototype.getName\",E.prototype.getName);t(\"Zlib.GunzipMember.prototype.getData\",E.prototype.getData);t(\"Zlib.GunzipMember.prototype.getMtime\",E.prototype.G);}).call(this);\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.async = global.async || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction slice(arrayLike, start) {\n    start = start|0;\n    var newLen = Math.max(arrayLike.length - start, 0);\n    var newArr = Array(newLen);\n    for(var idx = 0; idx < newLen; idx++)  {\n        newArr[idx] = arrayLike[start + idx];\n    }\n    return newArr;\n}\n\n/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @returns {Function} the partially-applied function\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nvar apply = function(fn/*, ...args*/) {\n    var args = slice(arguments, 1);\n    return function(/*callArgs*/) {\n        var callArgs = slice(arguments);\n        return fn.apply(null, args.concat(callArgs));\n    };\n};\n\nvar initialParams = function (fn) {\n    return function (/*...args, callback*/) {\n        var args = slice(arguments);\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    };\n};\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return function (fn/*, ...args*/) {\n        var args = slice(arguments, 1);\n        defer(function () {\n            fn.apply(null, args);\n        });\n    };\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function(value) {\n                invokeCallback(callback, null, value);\n            }, function(err) {\n                invokeCallback(callback, err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (e) {\n        setImmediate$1(rethrow, e);\n    }\n}\n\nfunction rethrow(error) {\n    throw error;\n}\n\nvar supportsSymbol = typeof Symbol === 'function';\n\nfunction isAsync(fn) {\n    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction wrapAsync(asyncFn) {\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\nfunction applyEach$1(eachfn) {\n    return function(fns/*, ...args*/) {\n        var args = slice(arguments, 1);\n        var go = initialParams(function(args, callback) {\n            var that = this;\n            return eachfn(fns, function (fn, cb) {\n                wrapAsync(fn).apply(that, args.concat(cb));\n            }, callback);\n        });\n        if (args.length) {\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop = {};\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nvar iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nvar getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n};\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar objectTag = '[object Object]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule$1 && freeModule$1.require && freeModule$1.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$1.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? {value: obj[key], key: key} : null;\n    };\n}\n\nfunction iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function() {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nfunction _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n\nfunction doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nvar eachOf = function(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, wrapAsync(iteratee), callback);\n};\n\nfunction doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, wrapAsync(iteratee), callback);\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        _iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nvar map = doParallel(_asyncMap);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument, `fns`, is provided, it will\n * return a function which lets you pass in the arguments as if it were a single\n * function call. The signature is `(..args, callback)`. If invoked with any\n * arguments, `callback` is required.\n * @example\n *\n * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async.applyEach([enableSearch, updateSchema]),\n *     callback\n * );\n */\nvar applyEach = applyEach$1(map);\n\nfunction doParallelLimit(fn) {\n    return function (obj, limit, iteratee, callback) {\n        return fn(_eachOfLimit(limit), obj, wrapAsync(iteratee), callback);\n    };\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapLimit = doParallelLimit(_asyncMap);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapSeries = doLimit(mapLimit, 1);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument is provided, it will return\n * a function which lets you pass in the arguments as if it were a single\n * function call.\n */\nvar applyEachSeries = applyEach$1(mapSeries);\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * {@link AsyncFunction}s also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns undefined\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nvar auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || noop);\n    var keys$$1 = keys(tasks);\n    var numTasks = keys$$1.length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    baseForOwn(tasks, function (task, key) {\n        if (!isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        arrayEach(dependencies, function (dependencyName) {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key +\n                    '` has a non-existent dependency `' +\n                    dependencyName + '` in ' +\n                    dependencies.join(', '));\n            }\n            addListener(dependencyName, function () {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(function () {\n            runTask(key, task);\n        });\n    }\n\n    function processQueue() {\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while(readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        arrayEach(taskListeners, function (fn) {\n            fn();\n        });\n        processQueue();\n    }\n\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce(function(err, result) {\n            runningTasks--;\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            }\n            if (err) {\n                var safeResults = {};\n                baseForOwn(results, function(val, rkey) {\n                    safeResults[rkey] = val;\n                });\n                safeResults[key] = result;\n                hasError = true;\n                listeners = Object.create(null);\n\n                callback(err, safeResults);\n            } else {\n                results[key] = result;\n                taskComplete(key);\n            }\n        });\n\n        runningTasks++;\n        var taskFn = wrapAsync(task[task.length - 1]);\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            arrayEach(getDependents(currentTask), function (dependent) {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error(\n                'async.auto cannot execute tasks due to a recursive dependency'\n            );\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        baseForOwn(tasks, function (task, key) {\n            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n};\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\nvar symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\nvar rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange$1 = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nvar FN_ARGS = /^(?:async\\s+)?(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg){\n        return trim(arg.replace(FN_ARG, ''));\n    });\n    return func;\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    baseForOwn(tasks, function (taskFn, key) {\n        var params;\n        var fnIsAsync = isAsync(taskFn);\n        var hasNoDeps =\n            (!fnIsAsync && taskFn.length === 1) ||\n            (fnIsAsync && taskFn.length === 0);\n\n        if (isArray(taskFn)) {\n            params = taskFn.slice(0, -1);\n            taskFn = taskFn[taskFn.length - 1];\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (hasNoDeps) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if (taskFn.length === 0 && !fnIsAsync && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            // remove callback param\n            if (!fnIsAsync) params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = arrayMap(params, function (name) {\n                return results[name];\n            });\n            newArgs.push(taskCb);\n            wrapAsync(taskFn).apply(null, newArgs);\n        }\n    });\n\n    auto(newTasks, callback);\n}\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function(node) {\n    if (node.prev) node.prev.next = node.next;\n    else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;\n    else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = function () {\n    while(this.head) this.shift();\n    return this;\n};\n\nDLL.prototype.insertAfter = function(node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;\n    else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function(node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;\n    else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function(node) {\n    if (this.head) this.insertBefore(this.head, node);\n    else setInitial(this, node);\n};\n\nDLL.prototype.push = function(node) {\n    if (this.tail) this.insertAfter(this.tail, node);\n    else setInitial(this, node);\n};\n\nDLL.prototype.shift = function() {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function() {\n    return this.tail && this.removeLink(this.tail);\n};\n\nDLL.prototype.toArray = function () {\n    var arr = Array(this.length);\n    var curr = this.head;\n    for(var idx = 0; idx < this.length; idx++) {\n        arr[idx] = curr.data;\n        curr = curr.next;\n    }\n    return arr;\n};\n\nDLL.prototype.remove = function (testFn) {\n    var curr = this.head;\n    while(!!curr) {\n        var next = curr.next;\n        if (testFn(curr)) {\n            this.removeLink(curr);\n        }\n        curr = next;\n    }\n    return this;\n};\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    }\n    else if(concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    var _worker = wrapAsync(worker);\n    var numRunning = 0;\n    var workersList = [];\n\n    var processingScheduled = false;\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function() {\n                q.drain();\n            });\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                callback: callback || noop\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(function() {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n    }\n\n    function _next(tasks) {\n        return function(err){\n            numRunning -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n\n                var index = baseIndexOf(workersList, task, 0);\n                if (index === 0) {\n                    workersList.shift();\n                } else if (index > 0) {\n                    workersList.splice(index, 1);\n                }\n\n                task.callback.apply(task, arguments);\n\n                if (err != null) {\n                    q.error(err, task.data);\n                }\n            }\n\n            if (numRunning <= (q.concurrency - q.buffer) ) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n            q.process();\n        };\n    }\n\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        concurrency: concurrency,\n        payload: payload,\n        saturated: noop,\n        unsaturated:noop,\n        buffer: concurrency / 4,\n        empty: noop,\n        drain: noop,\n        error: noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = noop;\n            q._tasks.empty();\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        remove: function (testFn) {\n            q._tasks.remove(testFn);\n        },\n        process: function () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                var tasks = [], data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    workersList.push(node);\n                    data.push(node.data);\n                }\n\n                numRunning += 1;\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n\n                if (numRunning === q.concurrency) {\n                    q.saturated();\n                }\n\n                var cb = onlyOnce(_next(tasks));\n                _worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return numRunning;\n        },\n        workersList: function () {\n            return workersList;\n        },\n        idle: function() {\n            return q._tasks.length + numRunning === 0;\n        },\n        pause: function () {\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) { return; }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    return q;\n}\n\n/**\n * A cargo of tasks for the worker function to complete. Cargo inherits all of\n * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n * @typedef {Object} CargoObject\n * @memberOf module:ControlFlow\n * @property {Function} length - A function returning the number of items\n * waiting to be processed. Invoke like `cargo.length()`.\n * @property {number} payload - An `integer` for determining how many tasks\n * should be process per round. This property can be changed after a `cargo` is\n * created to alter the payload on-the-fly.\n * @property {Function} push - Adds `task` to the `queue`. The callback is\n * called once the `worker` has finished processing the task. Instead of a\n * single task, an array of `tasks` can be submitted. The respective callback is\n * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n * @property {Function} saturated - A callback that is called when the\n * `queue.length()` hits the concurrency and further tasks will be queued.\n * @property {Function} empty - A callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - A callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke like `cargo.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n */\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargo.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n */\nfunction cargo(worker, payload) {\n    return queue(worker, 1, payload);\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachOfSeries = doLimit(eachOfLimit, 1);\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    eachOfSeries(coll, function(x, i, callback) {\n        _iteratee(memo, x, function(err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function(err) {\n        callback(err, memo);\n    });\n}\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nfunction seq(/*...functions*/) {\n    var _functions = arrayMap(arguments, wrapAsync);\n    return function(/*...args*/) {\n        var args = slice(arguments);\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = noop;\n        }\n\n        reduce(_functions, args, function(newargs, fn, cb) {\n            fn.apply(that, newargs.concat(function(err/*, ...nextargs*/) {\n                var nextargs = slice(arguments, 1);\n                cb(err, nextargs);\n            }));\n        },\n        function(err, results) {\n            cb.apply(that, [err].concat(results));\n        });\n    };\n}\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nvar compose = function(/*...args*/) {\n    return seq.apply(null, slice(arguments).reverse());\n};\n\nvar _concat = Array.prototype.concat;\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatLimit = function(coll, limit, iteratee, callback) {\n    callback = callback || noop;\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(coll, limit, function(val, callback) {\n        _iteratee(val, function(err /*, ...args*/) {\n            if (err) return callback(err);\n            return callback(null, slice(arguments, 1));\n        });\n    }, function(err, mapResults) {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = _concat.apply(result, mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. There is no guarantee that the\n * results array will be returned in the original order of `coll` passed to the\n * `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nvar concat = doLimit(concatLimit, Infinity);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatSeries = doLimit(concatLimit, 1);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {AsyncFunction} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nvar constant = function(/*...values*/) {\n    var values = slice(arguments);\n    var args = [null].concat(values);\n    return function (/*...ignoredArgs, callback*/) {\n        var callback = arguments[arguments.length - 1];\n        return callback.apply(this, args);\n    };\n};\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nfunction _createTester(check, getResult) {\n    return function(eachfn, arr, iteratee, cb) {\n        cb = cb || noop;\n        var testPassed = false;\n        var testResult;\n        eachfn(arr, function(value, _, callback) {\n            iteratee(value, function(err, result) {\n                if (err) {\n                    callback(err);\n                } else if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    callback(null, breakLoop);\n                } else {\n                    callback();\n                }\n            });\n        }, function(err) {\n            if (err) {\n                cb(err);\n            } else {\n                cb(null, testPassed ? testResult : getResult(false));\n            }\n        });\n    };\n}\n\nfunction _findGetResult(v, x) {\n    return x;\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nvar detect = doParallel(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectLimit = doParallelLimit(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectSeries = doLimit(detectLimit, 1);\n\nfunction consoleFunc(name) {\n    return function (fn/*, ...args*/) {\n        var args = slice(arguments, 1);\n        args.push(function (err/*, ...args*/) {\n            var args = slice(arguments, 1);\n            if (typeof console === 'object') {\n                if (err) {\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) {\n                    arrayEach(args, function (x) {\n                        console[name](x);\n                    });\n                }\n            }\n        });\n        wrapAsync(fn).apply(null, args);\n    };\n}\n\n/**\n * Logs the result of an [`async` function]{@link AsyncFunction} to the\n * `console` using `console.dir` to display the properties of the resulting object.\n * Only works in Node.js or in browsers that support `console.dir` and\n * `console.error` (such as FF and Chrome).\n * If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n * the order of operations, the arguments `test` and `fn` are switched.\n *\n * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n * @name doDuring\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.during]{@link module:ControlFlow.during}\n * @category Control Flow\n * @param {AsyncFunction} fn - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error if one occurred, otherwise `null`.\n */\nfunction doDuring(fn, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var _fn = wrapAsync(fn);\n    var _test = wrapAsync(test);\n\n    function next(err/*, ...args*/) {\n        if (err) return callback(err);\n        var args = slice(arguments, 1);\n        args.push(check);\n        _test.apply(this, args);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        _fn(next);\n    }\n\n    check(null, true);\n\n}\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with any non-error callback results of\n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    var next = function(err/*, ...args*/) {\n        if (err) return callback(err);\n        var args = slice(arguments, 1);\n        if (test.apply(this, args)) return _iteratee(next);\n        callback.apply(null, [null].concat(args));\n    };\n    _iteratee(next);\n}\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with any non-error callback results of\n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n */\nfunction doUntil(iteratee, test, callback) {\n    doWhilst(iteratee, function() {\n        return !test.apply(this, arguments);\n    }, callback);\n}\n\n/**\n * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n * is passed a callback in the form of `function (err, truth)`. If error is\n * passed to `test` or `fn`, the main callback is immediately called with the\n * value of the error.\n *\n * @name during\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (callback).\n * @param {AsyncFunction} fn - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error, if one occurred, otherwise `null`.\n * @example\n *\n * var count = 0;\n *\n * async.during(\n *     function (callback) {\n *         return callback(null, count < 5);\n *     },\n *     function (callback) {\n *         count++;\n *         setTimeout(callback, 1000);\n *     },\n *     function (err) {\n *         // 5 seconds have passed\n *     }\n * );\n */\nfunction during(test, fn, callback) {\n    callback = onlyOnce(callback || noop);\n    var _fn = wrapAsync(fn);\n    var _test = wrapAsync(test);\n\n    function next(err) {\n        if (err) return callback(err);\n        _test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        _fn(next);\n    }\n\n    _test(check);\n}\n\nfunction _withoutIndex(iteratee) {\n    return function (value, index, callback) {\n        return iteratee(value, callback);\n    };\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n    eachOf(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachSeries = doLimit(eachLimit$1, 1);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained. ES2017 `async` functions are returned as-is -- they are immune\n * to Zalgo's corrupting influences, as they always resolve on a later tick.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    if (isAsync(fn)) return fn;\n    return initialParams(function (args, callback) {\n        var sync = true;\n        args.push(function () {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate$1(function () {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    });\n}\n\nfunction notId(v) {\n    return !v;\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nvar every = doParallel(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everyLimit = doParallelLimit(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in series.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everySeries = doLimit(everyLimit, 1);\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            truthValues[index] = !!v;\n            callback(err);\n        });\n    }, function (err) {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            if (err) {\n                callback(err);\n            } else {\n                if (v) {\n                    results.push({index: index, value: x});\n                }\n                callback();\n            }\n        });\n    }, function (err) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, arrayMap(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), baseProperty('value')));\n        }\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    filter(eachfn, coll, wrapAsync(iteratee), callback || noop);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nvar filter = doParallel(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar filterLimit = doParallelLimit(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n */\nvar filterSeries = doLimit(filterLimit, 1);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback || noop);\n    var task = wrapAsync(ensureAsync(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        task(next);\n    }\n    next();\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupByLimit = function(coll, limit, iteratee, callback) {\n    callback = callback || noop;\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(coll, limit, function(val, callback) {\n        _iteratee(val, function(err, key) {\n            if (err) return callback(err);\n            return callback(null, {key: key, val: val});\n        });\n    }, function(err, mapResults) {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var key = mapResults[i].key;\n                var val = mapResults[i].val;\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @example\n *\n * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {\n *     db.findById(userId, function(err, user) {\n *         if (err) return callback(err);\n *         return callback(null, user.age);\n *     });\n * }, function(err, result) {\n *     // result is object containing the userIds grouped by age\n *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};\n * });\n */\nvar groupBy = doLimit(groupByLimit, Infinity);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupBySeries = doLimit(groupByLimit, 1);\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback || noop);\n    var newObj = {};\n    var _iteratee = wrapAsync(iteratee);\n    eachOfLimit(obj, limit, function(val, key, next) {\n        _iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\n\nvar mapValues = doLimit(mapValuesLimit, Infinity);\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nvar mapValuesSeries = doLimit(mapValuesLimit, 1);\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || identity;\n    var _fn = wrapAsync(fn);\n    var memoized = initialParams(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            setImmediate$1(function() {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn.apply(null, args.concat(function(/*args*/) {\n                var args = slice(arguments);\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            }));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.setImmediate]{@link module:Utils.setImmediate}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nfunction _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        wrapAsync(task)(function (err, result) {\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            }\n            results[key] = result;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n *\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallelLimit(tasks, callback) {\n    _parallel(eachOf, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n */\nfunction parallelLimit$1(tasks, limit, callback) {\n    _parallel(_eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Object} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {Function} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {Function} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {Function} remove - remove items from the queue that match a test\n * function.  The test function will be passed an object with a `data` property,\n * and a `priority` property, if this is a\n * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n * `function ({data, priority}) {}` and returns a Boolean.\n * @property {Function} saturated - a callback that is called when the number of\n * running workers hits the `concurrency` limit, and further tasks will be\n * queued.\n * @property {Function} unsaturated - a callback that is called when the number\n * of running workers is less than the `concurrency` & `buffer` limits, and\n * further tasks will not be queued.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - a callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} error - a callback that is called when a task errors.\n * Has the signature `function(error, task)`.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. No more tasks\n * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`. Invoked with (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain = function() {\n *     console.log('all items have been processed');\n * };\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * q.push({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nvar queue$1 = function (worker, concurrency) {\n    var _worker = wrapAsync(worker);\n    return queue(function (items, cb) {\n        _worker(items[0], cb);\n    }, concurrency, 1);\n};\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`.\n * Invoked with (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nvar priorityQueue = function(worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    // Override push to accept second parameter representing priority\n    q.push = function(data, priority, callback) {\n        if (callback == null) callback = noop;\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function() {\n                q.drain();\n            });\n        }\n\n        priority = priority || 0;\n        var nextNode = q._tasks.head;\n        while (nextNode && priority >= nextNode.priority) {\n            nextNode = nextNode.next;\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority: priority,\n                callback: callback\n            };\n\n            if (nextNode) {\n                q._tasks.insertBefore(nextNode, item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n};\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        wrapAsync(tasks[i])(callback);\n    }\n}\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight (array, memo, iteratee, callback) {\n    var reversed = slice(array).reverse();\n    reduce(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = wrapAsync(fn);\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push(function callback(error, cbArg) {\n            if (error) {\n                reflectCallback(null, { error: error });\n            } else {\n                var value;\n                if (arguments.length <= 2) {\n                    value = cbArg;\n                } else {\n                    value = slice(arguments, 1);\n                }\n                reflectCallback(null, { value: value });\n            }\n        });\n\n        return _fn.apply(this, args);\n    });\n}\n\n/**\n * A helper function that wraps an array or an object of functions with `reflect`.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array|Object|Iterable} tasks - The collection of\n * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n * @returns {Array} Returns an array of async functions, each wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (isArray(tasks)) {\n        results = arrayMap(tasks, reflect);\n    } else {\n        results = {};\n        baseForOwn(tasks, function(task, key) {\n            results[key] = reflect.call(this, task);\n        });\n    }\n    return results;\n}\n\nfunction reject$1(eachfn, arr, iteratee, callback) {\n    _filter(eachfn, arr, function(value, cb) {\n        iteratee(value, function(err, v) {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nvar reject = doParallel(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectLimit = doParallelLimit(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectSeries = doLimit(rejectLimit, 1);\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nfunction retry(opts, task, callback) {\n    var DEFAULT_TIMES = 5;\n    var DEFAULT_INTERVAL = 0;\n\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ?\n                t.interval :\n                constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || noop;\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || noop;\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = wrapAsync(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task(function(err) {\n            if (err && attempt++ < options.times &&\n                (typeof options.errorFilter != 'function' ||\n                    options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt));\n            } else {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n\n    retryAttempt();\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nvar retryable = function (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    var _task = wrapAsync(task);\n    return initialParams(function (args, callback) {\n        function taskFn(cb) {\n            _task.apply(null, args.concat(cb));\n        }\n\n        if (opts) retry(opts, taskFn, callback);\n        else retry(taskFn, callback);\n\n    });\n};\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n    _parallel(eachOfSeries, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nvar some = doParallel(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someLimit = doParallelLimit(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in series.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someSeries = doLimit(someLimit, 1);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a value to use as the sort criteria as\n * its `result`.\n * Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy (coll, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    map(coll, function (x, callback) {\n        _iteratee(x, function (err, criteria) {\n            if (err) return callback(err);\n            callback(null, {value: x, criteria: criteria});\n        });\n    }, function (err, results) {\n        if (err) return callback(err);\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria, b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} asyncFn - The async function to limit in time.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n * of the control flow functions.\n * Invoke this function with the same parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var fn = wrapAsync(asyncFn);\n\n    return initialParams(function (args, callback) {\n        var timedOut = false;\n        var timer;\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error  = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            callback(error);\n        }\n\n        args.push(function () {\n            if (!timedOut) {\n                callback.apply(null, arguments);\n                clearTimeout(timer);\n            }\n        });\n\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        fn.apply(null, args);\n    });\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n */\nfunction timeLimit(count, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(baseRange(0, count, 1), limit, _iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nvar times = doLimit(timeLimit, Infinity);\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n */\nvar timesSeries = doLimit(timeLimit, 1);\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in series, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc.push(item * 2)\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3) {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = isArray(coll) ? [] : {};\n    }\n    callback = once(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n\n    eachOf(coll, function(v, k, cb) {\n        _iteratee(accumulator, v, k, cb);\n    }, function(err) {\n        callback(err, accumulator);\n    });\n}\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    callback = callback || noop;\n    eachSeries(tasks, function(task, callback) {\n        wrapAsync(task)(function (err, res/*, ...args*/) {\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            } else {\n                result = res;\n            }\n            error = err;\n            callback(!err);\n        });\n    }, function () {\n        callback(error, result);\n    });\n}\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    if (!test()) return callback(null);\n    var next = function(err/*, ...args*/) {\n        if (err) return callback(err);\n        if (test()) return _iteratee(next);\n        var args = slice(arguments, 1);\n        callback.apply(null, [null].concat(args));\n    };\n    _iteratee(next);\n}\n\n/**\n * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `iteratee`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, iteratee, callback) {\n    whilst(function() {\n        return !test.apply(this, arguments);\n    }, iteratee, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nvar waterfall = function(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = wrapAsync(tasks[taskIndex++]);\n        args.push(onlyOnce(next));\n        task.apply(null, args);\n    }\n\n    function next(err/*, ...args*/) {\n        if (err || taskIndex === tasks.length) {\n            return callback.apply(null, arguments);\n        }\n        nextTask(slice(arguments, 1));\n    }\n\n    nextTask([]);\n};\n\n/**\n * An \"async function\" in the context of Async is an asynchronous function with\n * a variable number of parameters, with the final parameter being a callback.\n * (`function (arg1, arg2, ..., callback) {}`)\n * The final callback is of the form `callback(err, results...)`, which must be\n * called once the function is completed.  The callback should be called with a\n * Error as its first argument to signal that an error occurred.\n * Otherwise, if no error occurred, it should be called with `null` as the first\n * argument, and any additional `result` arguments that may apply, to signal\n * successful completion.\n * The callback must be called exactly once, ideally on a later tick of the\n * JavaScript event loop.\n *\n * This type of function is also referred to as a \"Node-style async function\",\n * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n * library are themselves CPS/Node-style async functions, or functions that\n * return CPS/Node-style async functions.\n *\n * Wherever we accept a Node-style async function, we also directly accept an\n * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n * In this case, the `async` function will not be passed a final callback\n * argument, and any thrown error will be used as the `err` argument of the\n * implicit callback, and the return value will be used as the `result` value.\n * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n * argument, and a `resolved` value becomes the `result`.)\n *\n * Note, due to JavaScript limitations, we can only detect native `async`\n * functions and not transpilied implementations.\n * Your environment must have `async`/`await` support for this to work.\n * (e.g. Node > v7.6, or a recent version of a modern browser).\n * If you are using `async` functions through a transpiler (e.g. Babel), you\n * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n * because the `async function` will be compiled to an ordinary function that\n * returns a promise.\n *\n * @typedef {Function} AsyncFunction\n * @static\n */\n\n/**\n * Async is a utility module which provides straight-forward, powerful functions\n * for working with asynchronous JavaScript. Although originally designed for\n * use with [Node.js](http://nodejs.org) and installable via\n * `npm install --save async`, it can also be used directly in the browser.\n * @module async\n * @see AsyncFunction\n */\n\n\n/**\n * A collection of `async` functions for manipulating collections, such as\n * arrays and objects.\n * @module Collections\n */\n\n/**\n * A collection of `async` functions for controlling the flow through a script.\n * @module ControlFlow\n */\n\n/**\n * A collection of `async` utility functions.\n * @module Utils\n */\n\nvar index = {\n    apply: apply,\n    applyEach: applyEach,\n    applyEachSeries: applyEachSeries,\n    asyncify: asyncify,\n    auto: auto,\n    autoInject: autoInject,\n    cargo: cargo,\n    compose: compose,\n    concat: concat,\n    concatLimit: concatLimit,\n    concatSeries: concatSeries,\n    constant: constant,\n    detect: detect,\n    detectLimit: detectLimit,\n    detectSeries: detectSeries,\n    dir: dir,\n    doDuring: doDuring,\n    doUntil: doUntil,\n    doWhilst: doWhilst,\n    during: during,\n    each: eachLimit,\n    eachLimit: eachLimit$1,\n    eachOf: eachOf,\n    eachOfLimit: eachOfLimit,\n    eachOfSeries: eachOfSeries,\n    eachSeries: eachSeries,\n    ensureAsync: ensureAsync,\n    every: every,\n    everyLimit: everyLimit,\n    everySeries: everySeries,\n    filter: filter,\n    filterLimit: filterLimit,\n    filterSeries: filterSeries,\n    forever: forever,\n    groupBy: groupBy,\n    groupByLimit: groupByLimit,\n    groupBySeries: groupBySeries,\n    log: log,\n    map: map,\n    mapLimit: mapLimit,\n    mapSeries: mapSeries,\n    mapValues: mapValues,\n    mapValuesLimit: mapValuesLimit,\n    mapValuesSeries: mapValuesSeries,\n    memoize: memoize,\n    nextTick: nextTick,\n    parallel: parallelLimit,\n    parallelLimit: parallelLimit$1,\n    priorityQueue: priorityQueue,\n    queue: queue$1,\n    race: race,\n    reduce: reduce,\n    reduceRight: reduceRight,\n    reflect: reflect,\n    reflectAll: reflectAll,\n    reject: reject,\n    rejectLimit: rejectLimit,\n    rejectSeries: rejectSeries,\n    retry: retry,\n    retryable: retryable,\n    seq: seq,\n    series: series,\n    setImmediate: setImmediate$1,\n    some: some,\n    someLimit: someLimit,\n    someSeries: someSeries,\n    sortBy: sortBy,\n    timeout: timeout,\n    times: times,\n    timesLimit: timeLimit,\n    timesSeries: timesSeries,\n    transform: transform,\n    tryEach: tryEach,\n    unmemoize: unmemoize,\n    until: until,\n    waterfall: waterfall,\n    whilst: whilst,\n\n    // aliases\n    all: every,\n    allLimit: everyLimit,\n    allSeries: everySeries,\n    any: some,\n    anyLimit: someLimit,\n    anySeries: someSeries,\n    find: detect,\n    findLimit: detectLimit,\n    findSeries: detectSeries,\n    forEach: eachLimit,\n    forEachSeries: eachSeries,\n    forEachLimit: eachLimit$1,\n    forEachOf: eachOf,\n    forEachOfSeries: eachOfSeries,\n    forEachOfLimit: eachOfLimit,\n    inject: reduce,\n    foldl: reduce,\n    foldr: reduceRight,\n    select: filter,\n    selectLimit: filterLimit,\n    selectSeries: filterSeries,\n    wrapSync: asyncify\n};\n\nexports['default'] = index;\nexports.apply = apply;\nexports.applyEach = applyEach;\nexports.applyEachSeries = applyEachSeries;\nexports.asyncify = asyncify;\nexports.auto = auto;\nexports.autoInject = autoInject;\nexports.cargo = cargo;\nexports.compose = compose;\nexports.concat = concat;\nexports.concatLimit = concatLimit;\nexports.concatSeries = concatSeries;\nexports.constant = constant;\nexports.detect = detect;\nexports.detectLimit = detectLimit;\nexports.detectSeries = detectSeries;\nexports.dir = dir;\nexports.doDuring = doDuring;\nexports.doUntil = doUntil;\nexports.doWhilst = doWhilst;\nexports.during = during;\nexports.each = eachLimit;\nexports.eachLimit = eachLimit$1;\nexports.eachOf = eachOf;\nexports.eachOfLimit = eachOfLimit;\nexports.eachOfSeries = eachOfSeries;\nexports.eachSeries = eachSeries;\nexports.ensureAsync = ensureAsync;\nexports.every = every;\nexports.everyLimit = everyLimit;\nexports.everySeries = everySeries;\nexports.filter = filter;\nexports.filterLimit = filterLimit;\nexports.filterSeries = filterSeries;\nexports.forever = forever;\nexports.groupBy = groupBy;\nexports.groupByLimit = groupByLimit;\nexports.groupBySeries = groupBySeries;\nexports.log = log;\nexports.map = map;\nexports.mapLimit = mapLimit;\nexports.mapSeries = mapSeries;\nexports.mapValues = mapValues;\nexports.mapValuesLimit = mapValuesLimit;\nexports.mapValuesSeries = mapValuesSeries;\nexports.memoize = memoize;\nexports.nextTick = nextTick;\nexports.parallel = parallelLimit;\nexports.parallelLimit = parallelLimit$1;\nexports.priorityQueue = priorityQueue;\nexports.queue = queue$1;\nexports.race = race;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.reflect = reflect;\nexports.reflectAll = reflectAll;\nexports.reject = reject;\nexports.rejectLimit = rejectLimit;\nexports.rejectSeries = rejectSeries;\nexports.retry = retry;\nexports.retryable = retryable;\nexports.seq = seq;\nexports.series = series;\nexports.setImmediate = setImmediate$1;\nexports.some = some;\nexports.someLimit = someLimit;\nexports.someSeries = someSeries;\nexports.sortBy = sortBy;\nexports.timeout = timeout;\nexports.times = times;\nexports.timesLimit = timeLimit;\nexports.timesSeries = timesSeries;\nexports.transform = transform;\nexports.tryEach = tryEach;\nexports.unmemoize = unmemoize;\nexports.until = until;\nexports.waterfall = waterfall;\nexports.whilst = whilst;\nexports.all = every;\nexports.allLimit = everyLimit;\nexports.allSeries = everySeries;\nexports.any = some;\nexports.anyLimit = someLimit;\nexports.anySeries = someSeries;\nexports.find = detect;\nexports.findLimit = detectLimit;\nexports.findSeries = detectSeries;\nexports.forEach = eachLimit;\nexports.forEachSeries = eachSeries;\nexports.forEachLimit = eachLimit$1;\nexports.forEachOf = eachOf;\nexports.forEachOfSeries = eachOfSeries;\nexports.forEachOfLimit = eachOfLimit;\nexports.inject = reduce;\nexports.foldl = reduce;\nexports.foldr = reduceRight;\nexports.select = filter;\nexports.selectLimit = filterLimit;\nexports.selectSeries = filterSeries;\nexports.wrapSync = asyncify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// Copyright (c) 2014 Takuya Asano All Rights Reserved.\n\n(function () {\n\n    \"use strict\";\n\n    var TERM_CHAR = \"\\u0000\", // terminal character\n        TERM_CODE = 0,        // terminal character code\n        ROOT_ID = 0,          // index of root node\n        NOT_FOUND = -1,       // traverse() returns if no nodes found\n        BASE_SIGNED = true,\n        CHECK_SIGNED = true,\n        BASE_BYTES = 4,\n        CHECK_BYTES = 4,\n        MEMORY_EXPAND_RATIO = 2;\n\n\n    var newBC = function (initial_size) {\n\n        if (initial_size == null) {\n            initial_size = 1024;\n        }\n\n        var initBase = function (_base, start, end) {  // 'end' index does not include\n            for (var i = start; i < end; i++) {\n                _base[i] = - i + 1;  // inversed previous empty node index\n            }\n            if (0 < check.array[check.array.length - 1]) {\n                var last_used_id = check.array.length - 2;\n                while (0 < check.array[last_used_id]) {\n                    last_used_id--;\n                }\n                _base[start] = - last_used_id;\n            }\n        };\n\n        var initCheck = function (_check, start, end) {\n            for (var i = start; i < end; i++) {\n                _check[i] = - i - 1;  // inversed next empty node index\n            }\n        };\n\n        var realloc = function (min_size) {\n            // expand arrays size by given ratio\n            var new_size = min_size * MEMORY_EXPAND_RATIO;\n            // console.log('re-allocate memory to ' + new_size);\n\n            var base_new_array = newArrayBuffer(base.signed, base.bytes, new_size);\n            initBase(base_new_array, base.array.length, new_size);  // init BASE in new range\n            base_new_array.set(base.array);\n            base.array = null;  // explicit GC\n            base.array = base_new_array;\n\n            var check_new_array = newArrayBuffer(check.signed, check.bytes, new_size);\n            initCheck(check_new_array, check.array.length, new_size);  // init CHECK in new range\n            check_new_array.set(check.array);\n            check.array = null;  // explicit GC\n            check.array = check_new_array;\n        };\n\n        var first_unused_node = ROOT_ID + 1;\n\n        var base = {\n            signed: BASE_SIGNED,\n            bytes: BASE_BYTES,\n            array: newArrayBuffer(BASE_SIGNED, BASE_BYTES, initial_size)\n        };\n\n        var check = {\n            signed: CHECK_SIGNED,\n            bytes: CHECK_BYTES,\n            array: newArrayBuffer(CHECK_SIGNED, CHECK_BYTES, initial_size)\n        };\n\n        // init root node\n        base.array[ROOT_ID] = 1;\n        check.array[ROOT_ID] = ROOT_ID;\n\n        // init BASE\n        initBase(base.array, ROOT_ID + 1, base.array.length);\n\n        // init CHECK\n        initCheck(check.array, ROOT_ID + 1, check.array.length);\n\n        return {\n            getBaseBuffer: function () {\n                return base.array;\n            },\n            getCheckBuffer: function () {\n                return check.array;\n            },\n            loadBaseBuffer: function (base_buffer) {\n                base.array = base_buffer;\n                return this;\n            },\n            loadCheckBuffer: function (check_buffer) {\n                check.array = check_buffer;\n                return this;\n            },\n            size: function () {\n                return Math.max(base.array.length, check.array.length);\n            },\n            getBase: function (index) {\n                if (base.array.length - 1 < index) {\n                    return - index + 1;\n                    // realloc(index);\n                }\n                // if (!Number.isFinite(base.array[index])) {\n                //     console.log('getBase:' + index);\n                //     throw 'getBase' + index;\n                // }\n                return base.array[index];\n            },\n            getCheck: function (index) {\n                if (check.array.length - 1 < index) {\n                    return - index - 1;\n                    // realloc(index);\n                }\n                // if (!Number.isFinite(check.array[index])) {\n                //     console.log('getCheck:' + index);\n                //     throw 'getCheck' + index;\n                // }\n                return check.array[index];\n            },\n            setBase: function (index, base_value) {\n                if (base.array.length - 1 < index) {\n                    realloc(index);\n                }\n                base.array[index] = base_value;\n            },\n            setCheck: function (index, check_value) {\n                if (check.array.length - 1 < index) {\n                    realloc(index);\n                }\n                check.array[index] = check_value;\n            },\n            setFirstUnusedNode: function (index) {\n                // if (!Number.isFinite(index)) {\n                //     throw 'assertion error: setFirstUnusedNode ' + index + ' is not finite number';\n                // }\n                first_unused_node = index;\n            },\n            getFirstUnusedNode: function () {\n                // if (!Number.isFinite(first_unused_node)) {\n                //     throw 'assertion error: getFirstUnusedNode ' + first_unused_node + ' is not finite number';\n                // }\n                return first_unused_node;\n            },\n            shrink: function () {\n                var last_index = this.size() - 1;\n                while (true) {\n                    if (0 <= check.array[last_index]) {\n                        break;\n                    }\n                    last_index--;\n                }\n                base.array = base.array.subarray(0, last_index + 2);   // keep last unused node\n                check.array = check.array.subarray(0, last_index + 2); // keep last unused node\n            },\n            calc: function () {\n                var unused_count = 0;\n                var size = check.array.length;\n                for (var i = 0; i < size; i++) {\n                    if (check.array[i] < 0) {\n                        unused_count++;\n                    }\n                }\n                return {\n                    all: size,\n                    unused: unused_count,\n                    efficiency: (size - unused_count) / size\n                };\n            },\n            dump: function () {\n                // for debug\n                var dump_base = \"\";\n                var dump_check = \"\";\n\n                var i;\n                for (i = 0; i < base.array.length; i++) {\n                    dump_base = dump_base + \" \" + this.getBase(i);\n                }\n                for (i = 0; i < check.array.length; i++) {\n                    dump_check = dump_check + \" \" + this.getCheck(i);\n                }\n\n                console.log(\"base:\" + dump_base);\n                console.log(\"chck:\" + dump_check);\n\n                return \"base:\" + dump_base + \" chck:\" + dump_check;\n            }\n        };\n    };\n\n\n    /**\n     * Factory method of double array\n     */\n    function DoubleArrayBuilder(initial_size) {\n        this.bc = newBC(initial_size);  // BASE and CHECK\n        this.keys = [];\n    }\n\n\n    /**\n     * Append a key to initialize set\n     * (This method should be called by dictionary ordered key)\n     *\n     * @param {String} key\n     * @param {Number} value Integer value from 0 to max signed integer number - 1\n     */\n    DoubleArrayBuilder.prototype.append = function (key, record) {\n        this.keys.push({ k: key, v: record });\n        return this;\n    };\n\n    /**\n     * Build double array for given keys\n     *\n     * @param {Array} keys Array of keys. A key is a Object which has properties 'k', 'v'.\n     * 'k' is a key string, 'v' is a record assigned to that key.\n     * @return {DoubleArray} Compiled double array\n     */\n    DoubleArrayBuilder.prototype.build = function (keys, sorted) {\n\n        if (keys == null) {\n            keys = this.keys;\n        }\n\n        if (keys == null) {\n            return new DoubleArray(this.bc);\n        }\n\n        if (sorted == null) {\n            sorted = false;\n        }\n\n        // Convert key string to ArrayBuffer\n        var buff_keys =\n            keys.map(function (k) {\n                return {\n                    k: stringToUtf8Bytes(k.k + TERM_CHAR),\n                    v: k.v\n                };\n            });\n\n        // Sort keys by byte order\n        if (sorted) {\n            this.keys = buff_keys;\n        } else {\n            this.keys =\n                buff_keys.sort(function (k1, k2) {\n                    var b1 = k1.k;\n                    var b2 = k2.k;\n                    var min_length = Math.min(b1.length, b2.length);\n                    for (var pos = 0; pos < min_length; pos++) {\n                        if (b1[pos] === b2[pos]) {\n                            continue;\n                        }\n                        return b1[pos] - b2[pos];\n                    }\n                    return b1.length - b2.length;\n                });\n        }\n\n        buff_keys = null;  // explicit GC\n\n        this._build(ROOT_ID, 0, 0, this.keys.length);\n        return new DoubleArray(this.bc);\n    };\n\n    /**\n     * Append nodes to BASE and CHECK array recursively\n     */\n    DoubleArrayBuilder.prototype._build = function (parent_index, position, start, length) {\n\n        var children_info = this.getChildrenInfo(position, start, length);\n        var _base = this.findAllocatableBase(children_info);\n\n        this.setBC(parent_index, children_info, _base);\n\n        for (var i = 0; i < children_info.length; i = i + 3) {\n            var child_code = children_info[i];\n            if (child_code === TERM_CODE) {\n                continue;\n            }\n            var child_start = children_info[i + 1];\n            var child_len = children_info[i + 2];\n            var child_index = _base + child_code;\n            this._build(child_index, position + 1, child_start, child_len);\n        }\n    };\n\n    DoubleArrayBuilder.prototype.getChildrenInfo = function (position, start, length) {\n        var current_char = this.keys[start].k[position];\n        var i = 0;\n        var children_info = new Int32Array(length * 3);\n\n        children_info[i++] = current_char;  // char (current)\n        children_info[i++] = start;         // start index (current)\n\n        var next_pos = start;\n        var start_pos = start;\n        for (; next_pos < start + length; next_pos++) {\n            var next_char = this.keys[next_pos].k[position];\n            if (current_char !== next_char) {\n                children_info[i++] = next_pos - start_pos;  // length (current)\n\n                children_info[i++] = next_char;             // char (next)\n                children_info[i++] = next_pos;              // start index (next)\n                current_char = next_char;\n                start_pos = next_pos;\n            }\n        }\n        children_info[i++] = next_pos - start_pos;\n        children_info = children_info.subarray(0, i);\n\n        return children_info;\n    };\n\n    DoubleArrayBuilder.prototype.setBC = function (parent_id, children_info, _base) {\n\n        var bc = this.bc;\n\n        bc.setBase(parent_id, _base);  // Update BASE of parent node\n\n        var i;\n        for (i = 0; i < children_info.length; i = i + 3) {\n            var code = children_info[i];\n            var child_id = _base + code;\n\n            // Update linked list of unused nodes\n\n            // Assertion\n            // if (child_id < 0) {\n            //     throw 'assertion error: child_id is negative'\n            // }\n\n            var prev_unused_id = - bc.getBase(child_id);\n            var next_unused_id = - bc.getCheck(child_id);\n            // if (prev_unused_id < 0) {\n            //     throw 'assertion error: setBC'\n            // }\n            // if (next_unused_id < 0) {\n            //     throw 'assertion error: setBC'\n            // }\n            if (child_id !== bc.getFirstUnusedNode()) {\n                bc.setCheck(prev_unused_id, - next_unused_id);\n            } else {\n                // Update first_unused_node\n                bc.setFirstUnusedNode(next_unused_id);\n            }\n            bc.setBase(next_unused_id, - prev_unused_id);\n\n            var check = parent_id;         // CHECK is parent node index\n            bc.setCheck(child_id, check);  // Update CHECK of child node\n\n            // Update record\n            if (code === TERM_CODE) {\n                var start_pos = children_info[i + 1];\n                // var len = children_info[i + 2];\n                // if (len != 1) {\n                //     throw 'assertion error: there are multiple terminal nodes. len:' + len;\n                // }\n                var value = this.keys[start_pos].v;\n\n                if (value == null) {\n                    value = 0;\n                }\n\n                var base = - value - 1;       // BASE is inverted record value\n                bc.setBase(child_id, base);  // Update BASE of child(leaf) node\n            }\n        }\n    };\n\n\n    /**\n     * Find BASE value that all children are allocatable in double array's region\n     */\n    DoubleArrayBuilder.prototype.findAllocatableBase = function (children_info) {\n\n        var bc = this.bc;\n\n        // Assertion: keys are sorted by byte order\n        // var c = -1;\n        // for (var i = 0; i < children_info.length; i = i + 3) {\n        //     if (children_info[i] < c) {\n        //         throw 'assertion error: not sort key'\n        //     }\n        //     c = children_info[i];\n        // }\n\n        // iterate linked list of unused nodes\n        var _base;\n        var curr = bc.getFirstUnusedNode();  // current index\n        // if (curr < 0) {\n        //     throw 'assertion error: getFirstUnusedNode returns negative value'\n        // }\n\n        while (true) {\n            _base = curr - children_info[0];\n\n            if (_base < 0) {\n                curr = - bc.getCheck(curr);  // next\n\n                // if (curr < 0) {\n                //     throw 'assertion error: getCheck returns negative value'\n                // }\n\n                continue;\n            }\n\n            var empty_area_found = true;\n            for (var i = 0; i < children_info.length; i = i + 3) {\n                var code = children_info[i];\n                var candidate_id = _base + code;\n\n                if (!this.isUnusedNode(candidate_id)) {\n                    // candidate_id is used node\n                    // next\n                    curr = - bc.getCheck(curr);\n                    // if (curr < 0) {\n                    //     throw 'assertion error: getCheck returns negative value'\n                    // }\n\n                    empty_area_found = false;\n                    break;\n                }\n            }\n            if (empty_area_found) {\n                // Area is free\n                return _base;\n            }\n        }\n    };\n\n    /**\n     * Check this double array index is unused or not\n     */\n    DoubleArrayBuilder.prototype.isUnusedNode = function (index) {\n        var bc = this.bc;\n        var check = bc.getCheck(index);\n\n        // if (index < 0) {\n        //     throw 'assertion error: isUnusedNode index:' + index;\n        // }\n\n        if (index === ROOT_ID) {\n            // root node\n            return false;\n        }\n        if (check < 0) {\n            // unused\n            return true;\n        }\n\n        // used node (incl. leaf)\n        return false;\n    };\n\n\n    /**\n     * Factory method of double array\n     */\n    function DoubleArray(bc) {\n        this.bc = bc;       // BASE and CHECK\n        this.bc.shrink();\n    }\n\n\n    /**\n     * Look up a given key in this trie\n     *\n     * @param {String} key\n     * @return {Boolean} True if this trie contains a given key\n     */\n    DoubleArray.prototype.contain = function (key) {\n\n        var bc = this.bc;\n\n        key += TERM_CHAR;\n        var buffer = stringToUtf8Bytes(key);\n\n        var parent = ROOT_ID;\n        var child = NOT_FOUND;\n\n        for (var i = 0; i < buffer.length; i++) {\n            var code = buffer[i];\n\n            child = this.traverse(parent, code);\n            if (child === NOT_FOUND) {\n                return false;\n            }\n\n            if (bc.getBase(child) <= 0) {\n                // leaf node\n                return true;\n            } else {\n                // not leaf\n                parent = child;\n                continue;\n            }\n        }\n        return false;\n    };\n\n\n    /**\n     * Look up a given key in this trie\n     *\n     * @param {String} key\n     * @return {Number} Record value assgned to this key, -1 if this key does not contain\n     */\n    DoubleArray.prototype.lookup = function (key) {\n\n        key += TERM_CHAR;\n        var buffer = stringToUtf8Bytes(key);\n\n        var parent = ROOT_ID;\n        var child = NOT_FOUND;\n\n        for (var i = 0; i < buffer.length; i++) {\n            var code = buffer[i];\n            child = this.traverse(parent, code);\n            if (child === NOT_FOUND) {\n                return NOT_FOUND;\n            }\n            parent = child;\n        }\n\n        var base = this.bc.getBase(child);\n        if (base <= 0) {\n            // leaf node\n            return - base - 1;\n        } else {\n            // not leaf\n            return NOT_FOUND;\n        }\n    };\n\n\n    /**\n     * Common prefix search\n     *\n     * @param {String} key\n     * @return {Array} Each result object has 'k' and 'v' (key and record,\n     * respectively) properties assigned to matched string\n     */\n    DoubleArray.prototype.commonPrefixSearch = function (key) {\n\n        var buffer = stringToUtf8Bytes(key);\n\n        var parent = ROOT_ID;\n        var child = NOT_FOUND;\n\n        var result = [];\n\n        for (var i = 0; i < buffer.length; i++) {\n            var code = buffer[i];\n\n            child = this.traverse(parent, code);\n\n            if (child !== NOT_FOUND) {\n                parent = child;\n\n                // look forward by terminal character code to check this node is a leaf or not\n                var grand_child = this.traverse(child, TERM_CODE);\n\n                if (grand_child !== NOT_FOUND) {\n                    var base = this.bc.getBase(grand_child);\n\n                    var r = {};\n\n                    if (base <= 0) {\n                        // If child is a leaf node, add record to result\n                        r.v = - base - 1;\n                    }\n\n                    // If child is a leaf node, add word to result\n                    r.k = utf8BytesToString(arrayCopy(buffer, 0, i + 1));\n\n                    result.push(r);\n                }\n                continue;\n            } else {\n                break;\n            }\n        }\n\n        return result;\n    };\n\n    DoubleArray.prototype.traverse = function (parent, code) {\n        var child = this.bc.getBase(parent) + code;\n        if (this.bc.getCheck(child) === parent) {\n            return child;\n        } else {\n            return NOT_FOUND;\n        }\n    };\n\n    DoubleArray.prototype.size = function () {\n        return this.bc.size();\n    };\n\n    DoubleArray.prototype.calc = function () {\n        return this.bc.calc();\n    };\n\n    DoubleArray.prototype.dump = function () {\n        return this.bc.dump();\n    };\n\n\n    // Array utility functions\n\n    var newArrayBuffer = function (signed, bytes, size) {\n        if (signed) {\n            switch(bytes) {\n                case 1:\n                return new Int8Array(size);\n                case 2:\n                return new Int16Array(size);\n                case 4:\n                return new Int32Array(size);\n                default:\n                throw new RangeError(\"Invalid newArray parameter element_bytes:\" + bytes);\n            }\n        } else {\n            switch(bytes) {\n                case 1:\n                return new Uint8Array(size);\n                case 2:\n                return new Uint16Array(size);\n                case 4:\n                return new Uint32Array(size);\n                default:\n                throw new RangeError(\"Invalid newArray parameter element_bytes:\" + bytes);\n            }\n        }\n    };\n\n    var arrayCopy = function (src, src_offset, length) {\n        var buffer = new ArrayBuffer(length);\n        var dstU8 = new Uint8Array(buffer, 0, length);\n        var srcU8 = src.subarray(src_offset, length);\n        dstU8.set(srcU8);\n        return dstU8;\n    };\n\n\n    /**\n     * Convert String (UTF-16) to UTF-8 ArrayBuffer\n     *\n     * @param {String} str UTF-16 string to convert\n     * @return {Uint8Array} Byte sequence encoded by UTF-8\n     */\n    var stringToUtf8Bytes = function (str) {\n\n        // Max size of 1 character is 4 bytes\n        var bytes = new Uint8Array(new ArrayBuffer(str.length * 4));\n\n        var i = 0, j = 0;\n\n        while (i < str.length) {\n            var unicode_code;\n\n            var utf16_code = str.charCodeAt(i++);\n            if (utf16_code >= 0xD800 && utf16_code <= 0xDBFF) {\n                // surrogate pair\n                var upper = utf16_code;           // high surrogate\n                var lower = str.charCodeAt(i++);  // low surrogate\n\n                if (lower >= 0xDC00 && lower <= 0xDFFF) {\n                    unicode_code =\n                        (upper - 0xD800) * (1 << 10) + (1 << 16) +\n                        (lower - 0xDC00);\n                } else {\n                    // malformed surrogate pair\n                    return null;\n                }\n            } else {\n                // not surrogate code\n                unicode_code = utf16_code;\n            }\n\n            if (unicode_code < 0x80) {\n                // 1-byte\n                bytes[j++] = unicode_code;\n\n            } else if (unicode_code < (1 << 11)) {\n                // 2-byte\n                bytes[j++] = (unicode_code >>> 6) | 0xC0;\n                bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n            } else if (unicode_code < (1 << 16)) {\n                // 3-byte\n                bytes[j++] = (unicode_code >>> 12) | 0xE0;\n                bytes[j++] = ((unicode_code >> 6) & 0x3f) | 0x80;\n                bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n            } else if (unicode_code < (1 << 21)) {\n                // 4-byte\n                bytes[j++] = (unicode_code >>> 18) | 0xF0;\n                bytes[j++] = ((unicode_code >> 12) & 0x3F) | 0x80;\n                bytes[j++] = ((unicode_code >> 6) & 0x3F) | 0x80;\n                bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n            } else {\n                // malformed UCS4 code\n            }\n        }\n\n        return bytes.subarray(0, j);\n    };\n\n\n    /**\n     * Convert UTF-8 ArrayBuffer to String (UTF-16)\n     *\n     * @param {Uint8Array} bytes UTF-8 byte sequence to convert\n     * @return {String} String encoded by UTF-16\n     */\n    var utf8BytesToString = function (bytes) {\n\n        var str = \"\";\n        var code, b1, b2, b3, b4, upper, lower;\n        var i = 0;\n\n        while (i < bytes.length) {\n\n            b1 = bytes[i++];\n\n            if (b1 < 0x80) {\n                // 1 byte\n                code = b1;\n            } else if ((b1 >> 5) === 0x06) {\n                // 2 bytes\n                b2 = bytes[i++];\n                code = ((b1 & 0x1f) << 6) | (b2 & 0x3f);\n            } else if ((b1 >> 4) === 0x0e) {\n                // 3 bytes\n                b2 = bytes[i++];\n                b3 = bytes[i++];\n                code = ((b1 & 0x0f) << 12) | ((b2 & 0x3f) << 6) | (b3 & 0x3f);\n            } else {\n                // 4 bytes\n                b2 = bytes[i++];\n                b3 = bytes[i++];\n                b4 = bytes[i++];\n                code = ((b1 & 0x07) << 18) | ((b2 & 0x3f) << 12) | ((b3 & 0x3f) << 6) | (b4 & 0x3f);\n            }\n\n            if (code < 0x10000) {\n\t            str += String.fromCharCode(code);\n            } else {\n\t            // surrogate pair\n\t            code -= 0x10000;\n\t            upper = (0xD800 | (code >> 10));\n\t            lower = (0xDC00 | (code & 0x3FF));\n\t            str += String.fromCharCode(upper, lower);\n            }\n        }\n\n        return str;\n    };\n\n\n    // public methods\n    var doublearray = {\n        builder: function (initial_size) {\n            return new DoubleArrayBuilder(initial_size);\n        },\n        load: function (base_buffer, check_buffer) {\n            var bc = newBC(0);\n            bc.loadBaseBuffer(base_buffer);\n            bc.loadCheckBuffer(check_buffer);\n            return new DoubleArray(bc);\n        }\n    };\n\n    if (\"undefined\" === typeof module) {\n\t    // In browser\n        window.doublearray = doublearray;\n    } else {\n\t    // In node\n        module.exports = doublearray;\n    }\n\n})();\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Convert String (UTF-16) to UTF-8 ArrayBuffer\n *\n * @param {String} str UTF-16 string to convert\n * @return {Uint8Array} Byte sequence encoded by UTF-8\n */\nvar stringToUtf8Bytes = function (str) {\n\n    // Max size of 1 character is 4 bytes\n    var bytes = new Uint8Array(str.length * 4);\n\n    var i = 0, j = 0;\n\n    while (i < str.length) {\n        var unicode_code;\n\n        var utf16_code = str.charCodeAt(i++);\n        if (utf16_code >= 0xD800 && utf16_code <= 0xDBFF) {\n            // surrogate pair\n            var upper = utf16_code;           // high surrogate\n            var lower = str.charCodeAt(i++);  // low surrogate\n\n            if (lower >= 0xDC00 && lower <= 0xDFFF) {\n                unicode_code =\n                    (upper - 0xD800) * (1 << 10) + (1 << 16) +\n                    (lower - 0xDC00);\n            } else {\n                // malformed surrogate pair\n                return null;\n            }\n        } else {\n            // not surrogate code\n            unicode_code = utf16_code;\n        }\n\n        if (unicode_code < 0x80) {\n            // 1-byte\n            bytes[j++] = unicode_code;\n\n        } else if (unicode_code < (1 << 11)) {\n            // 2-byte\n            bytes[j++] = (unicode_code >>> 6) | 0xC0;\n            bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n        } else if (unicode_code < (1 << 16)) {\n            // 3-byte\n            bytes[j++] = (unicode_code >>> 12) | 0xE0;\n            bytes[j++] = ((unicode_code >> 6) & 0x3f) | 0x80;\n            bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n        } else if (unicode_code < (1 << 21)) {\n            // 4-byte\n            bytes[j++] = (unicode_code >>> 18) | 0xF0;\n            bytes[j++] = ((unicode_code >> 12) & 0x3F) | 0x80;\n            bytes[j++] = ((unicode_code >> 6) & 0x3F) | 0x80;\n            bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n        } else {\n            // malformed UCS4 code\n        }\n    }\n\n    return bytes.subarray(0, j);\n};\n\n/**\n * Convert UTF-8 ArrayBuffer to String (UTF-16)\n *\n * @param {Array} bytes UTF-8 byte sequence to convert\n * @return {String} String encoded by UTF-16\n */\nvar utf8BytesToString = function (bytes) {\n\n    var str = \"\";\n    var code, b1, b2, b3, b4, upper, lower;\n    var i = 0;\n\n    while (i < bytes.length) {\n\n        b1 = bytes[i++];\n\n        if (b1 < 0x80) {\n            // 1 byte\n            code = b1;\n        } else if ((b1 >> 5) === 0x06) {\n            // 2 bytes\n            b2 = bytes[i++];\n            code = ((b1 & 0x1f) << 6) | (b2 & 0x3f);\n        } else if ((b1 >> 4) === 0x0e) {\n            // 3 bytes\n            b2 = bytes[i++];\n            b3 = bytes[i++];\n            code = ((b1 & 0x0f) << 12) | ((b2 & 0x3f) << 6) | (b3 & 0x3f);\n        } else {\n            // 4 bytes\n            b2 = bytes[i++];\n            b3 = bytes[i++];\n            b4 = bytes[i++];\n            code = ((b1 & 0x07) << 18) | ((b2 & 0x3f) << 12) | ((b3 & 0x3f) << 6) | (b4 & 0x3f);\n        }\n\n        if (code < 0x10000) {\n            str += String.fromCharCode(code);\n        } else {\n            // surrogate pair\n            code -= 0x10000;\n            upper = (0xD800 | (code >> 10));\n            lower = (0xDC00 | (code & 0x3FF));\n            str += String.fromCharCode(upper, lower);\n        }\n    }\n\n    return str;\n};\n\n/**\n * Utilities to manipulate byte sequence\n * @param {(number|Uint8Array)} arg Initial size of this buffer (number), or buffer to set (Uint8Array)\n * @constructor\n */\nfunction ByteBuffer(arg) {\n    var initial_size;\n    if (arg == null) {\n        initial_size = 1024 * 1024;\n    } else if (typeof arg === \"number\") {\n        initial_size = arg;\n    } else if (arg instanceof Uint8Array) {\n        this.buffer = arg;\n        this.position = 0;  // Overwrite\n        return;\n    } else {\n        // typeof arg -> String\n        throw typeof arg + \" is invalid parameter type for ByteBuffer constructor\";\n    }\n    // arg is null or number\n    this.buffer = new Uint8Array(initial_size);\n    this.position = 0;\n}\n\nByteBuffer.prototype.size = function () {\n    return this.buffer.length;\n};\n\nByteBuffer.prototype.reallocate = function () {\n    var new_array = new Uint8Array(this.buffer.length * 2);\n    new_array.set(this.buffer);\n    this.buffer = new_array;\n};\n\nByteBuffer.prototype.shrink = function () {\n    this.buffer = this.buffer.subarray(0, this.position);\n    return this.buffer;\n};\n\nByteBuffer.prototype.put = function (b) {\n    if (this.buffer.length < this.position + 1) {\n        this.reallocate();\n    }\n    this.buffer[this.position++] = b;\n};\n\nByteBuffer.prototype.get = function (index) {\n    if (index == null) {\n        index = this.position;\n        this.position += 1;\n    }\n    if (this.buffer.length < index + 1) {\n        return 0;\n    }\n    return this.buffer[index];\n};\n\n// Write short to buffer by little endian\nByteBuffer.prototype.putShort = function (num) {\n    if (0xFFFF < num) {\n        throw num + \" is over short value\";\n    }\n    var lower = (0x00FF & num);\n    var upper = (0xFF00 & num) >> 8;\n    this.put(lower);\n    this.put(upper);\n};\n\n// Read short from buffer by little endian\nByteBuffer.prototype.getShort = function (index) {\n    if (index == null) {\n        index = this.position;\n        this.position += 2;\n    }\n    if (this.buffer.length < index + 2) {\n        return 0;\n    }\n    var lower = this.buffer[index];\n    var upper = this.buffer[index + 1];\n    var value = (upper << 8) + lower;\n    if (value & 0x8000) {\n\tvalue = -((value - 1) ^ 0xFFFF);\n    }\n    return value;\n};\n\n// Write integer to buffer by little endian\nByteBuffer.prototype.putInt = function (num) {\n    if (0xFFFFFFFF < num) {\n        throw num + \" is over integer value\";\n    }\n    var b0 = (0x000000FF & num);\n    var b1 = (0x0000FF00 & num) >> 8;\n    var b2 = (0x00FF0000 & num) >> 16;\n    var b3 = (0xFF000000 & num) >> 24;\n    this.put(b0);\n    this.put(b1);\n    this.put(b2);\n    this.put(b3);\n};\n\n// Read integer from buffer by little endian\nByteBuffer.prototype.getInt = function (index) {\n    if (index == null) {\n        index = this.position;\n        this.position += 4;\n    }\n    if (this.buffer.length < index + 4) {\n        return 0;\n    }\n    var b0 = this.buffer[index];\n    var b1 = this.buffer[index + 1];\n    var b2 = this.buffer[index + 2];\n    var b3 = this.buffer[index + 3];\n\n    return (b3 << 24) + (b2 << 16) + (b1 << 8) + b0;\n};\n\nByteBuffer.prototype.readInt = function () {\n    var pos = this.position;\n    this.position += 4;\n    return this.getInt(pos);\n};\n\nByteBuffer.prototype.putString = function (str) {\n    var bytes = stringToUtf8Bytes(str);\n    for (var i = 0; i < bytes.length; i++) {\n        this.put(bytes[i]);\n    }\n    // put null character as terminal character\n    this.put(0);\n};\n\nByteBuffer.prototype.getString = function (index) {\n    var buf = [],\n        ch;\n    if (index == null) {\n        index = this.position;\n    }\n    while (true) {\n        if (this.buffer.length < index + 1) {\n            break;\n        }\n        ch = this.get(index++);\n        if (ch === 0) {\n            break;\n        } else {\n            buf.push(ch);\n        }\n    }\n    this.position = index;\n    return utf8BytesToString(buf);\n};\n\nmodule.exports = ByteBuffer;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ByteBuffer = require(\"../util/ByteBuffer\");\n\n/**\n * TokenInfoDictionary\n * @constructor\n */\nfunction TokenInfoDictionary() {\n    this.dictionary = new ByteBuffer(10 * 1024 * 1024);\n    this.target_map = {};  // trie_id (of surface form) -> token_info_id (of token)\n    this.pos_buffer = new ByteBuffer(10 * 1024 * 1024);\n}\n\n// left_id right_id word_cost ...\n// ^ this position is token_info_id\nTokenInfoDictionary.prototype.buildDictionary = function (entries) {\n    var dictionary_entries = {};  // using as hashmap, string -> string (word_id -> surface_form) to build dictionary\n\n    for (var i = 0; i < entries.length; i++) {\n        var entry = entries[i];\n\n        if (entry.length < 4) {\n            continue;\n        }\n\n        var surface_form = entry[0];\n        var left_id = entry[1];\n        var right_id = entry[2];\n        var word_cost = entry[3];\n        var feature = entry.slice(4).join(\",\");  // TODO Optimize\n\n        // Assertion\n        if (!isFinite(left_id) || !isFinite(right_id) || !isFinite(word_cost)) {\n            console.log(entry);\n        }\n\n        var token_info_id = this.put(left_id, right_id, word_cost, surface_form, feature);\n        dictionary_entries[token_info_id] = surface_form;\n    }\n\n    // Remove last unused area\n    this.dictionary.shrink();\n    this.pos_buffer.shrink();\n\n    return dictionary_entries;\n};\n\nTokenInfoDictionary.prototype.put = function (left_id, right_id, word_cost, surface_form, feature) {\n    var token_info_id = this.dictionary.position;\n    var pos_id = this.pos_buffer.position;\n\n    this.dictionary.putShort(left_id);\n    this.dictionary.putShort(right_id);\n    this.dictionary.putShort(word_cost);\n    this.dictionary.putInt(pos_id);\n    this.pos_buffer.putString(surface_form + \",\" + feature);\n\n    return token_info_id;\n};\n\nTokenInfoDictionary.prototype.addMapping = function (source, target) {\n    var mapping = this.target_map[source];\n    if (mapping == null) {\n        mapping = [];\n    }\n    mapping.push(target);\n\n    this.target_map[source] = mapping;\n};\n\nTokenInfoDictionary.prototype.targetMapToBuffer = function () {\n    var buffer = new ByteBuffer();\n    var map_keys_size = Object.keys(this.target_map).length;\n    buffer.putInt(map_keys_size);\n    for (var key in this.target_map) {\n        var values = this.target_map[key];  // Array\n        var map_values_size = values.length;\n        buffer.putInt(parseInt(key));\n        buffer.putInt(map_values_size);\n        for (var i = 0; i < values.length; i++) {\n            buffer.putInt(values[i]);\n        }\n    }\n    return buffer.shrink();  // Shrink-ed Typed Array\n};\n\n// from tid.dat\nTokenInfoDictionary.prototype.loadDictionary = function (array_buffer) {\n    this.dictionary = new ByteBuffer(array_buffer);\n    return this;\n};\n\n// from tid_pos.dat\nTokenInfoDictionary.prototype.loadPosVector = function (array_buffer) {\n    this.pos_buffer = new ByteBuffer(array_buffer);\n    return this;\n};\n\n// from tid_map.dat\nTokenInfoDictionary.prototype.loadTargetMap = function (array_buffer) {\n    var buffer = new ByteBuffer(array_buffer);\n    buffer.position = 0;\n    this.target_map = {};\n    buffer.readInt();  // map_keys_size\n    while (true) {\n        if (buffer.buffer.length < buffer.position + 1) {\n            break;\n        }\n        var key = buffer.readInt();\n        var map_values_size = buffer.readInt();\n        for (var i = 0; i < map_values_size; i++) {\n            var value = buffer.readInt();\n            this.addMapping(key, value);\n        }\n    }\n    return this;\n};\n\n/**\n * Look up features in the dictionary\n * @param {string} token_info_id_str Word ID to look up\n * @returns {string} Features string concatenated by \",\"\n */\nTokenInfoDictionary.prototype.getFeatures = function (token_info_id_str) {\n    var token_info_id = parseInt(token_info_id_str);\n    if (isNaN(token_info_id)) {\n        // TODO throw error\n        return \"\";\n    }\n    var pos_id = this.dictionary.getInt(token_info_id + 6);\n    return this.pos_buffer.getString(pos_id);\n};\n\nmodule.exports = TokenInfoDictionary;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Connection costs matrix from cc.dat file.\n * 2 dimension matrix [forward_id][backward_id] -> cost\n * @constructor\n * @param {number} forward_dimension\n * @param {number} backward_dimension\n */\nfunction ConnectionCosts(forward_dimension, backward_dimension) {\n    this.forward_dimension = forward_dimension;\n    this.backward_dimension = backward_dimension;\n\n    // leading 2 integers for forward_dimension, backward_dimension, respectively\n    this.buffer = new Int16Array(forward_dimension * backward_dimension + 2);\n    this.buffer[0] = forward_dimension;\n    this.buffer[1] = backward_dimension;\n}\n\nConnectionCosts.prototype.put = function (forward_id, backward_id, cost) {\n    var index = forward_id * this.backward_dimension + backward_id + 2;\n    if (this.buffer.length < index + 1) {\n        throw \"ConnectionCosts buffer overflow\";\n    }\n    this.buffer[index] = cost;\n};\n\nConnectionCosts.prototype.get = function (forward_id, backward_id) {\n    var index = forward_id * this.backward_dimension + backward_id + 2;\n    if (this.buffer.length < index + 1) {\n        throw \"ConnectionCosts buffer overflow\";\n    }\n    return this.buffer[index];\n};\n\nConnectionCosts.prototype.loadConnectionCosts = function (connection_costs_buffer) {\n    this.forward_dimension = connection_costs_buffer[0];\n    this.backward_dimension = connection_costs_buffer[1];\n    this.buffer = connection_costs_buffer;\n};\n\nmodule.exports = ConnectionCosts;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * CharacterClass\n * @param {number} class_id\n * @param {string} class_name\n * @param {boolean} is_always_invoke\n * @param {boolean} is_grouping\n * @param {number} max_length\n * @constructor\n */\nfunction CharacterClass(class_id, class_name, is_always_invoke, is_grouping, max_length) {\n    this.class_id = class_id;\n    this.class_name = class_name;\n    this.is_always_invoke = is_always_invoke;\n    this.is_grouping = is_grouping;\n    this.max_length = max_length;\n}\n\nmodule.exports = CharacterClass;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ByteBuffer = require(\"../util/ByteBuffer\");\nvar CharacterClass = require(\"./CharacterClass\");\n\n/**\n * InvokeDefinitionMap represents invoke definition a part of char.def\n * @constructor\n */\nfunction InvokeDefinitionMap() {\n    this.map = [];\n    this.lookup_table = {};  // Just for building dictionary\n}\n\n/**\n * Load InvokeDefinitionMap from buffer\n * @param {Uint8Array} invoke_def_buffer\n * @returns {InvokeDefinitionMap}\n */\nInvokeDefinitionMap.load = function (invoke_def_buffer) {\n    var invoke_def = new InvokeDefinitionMap();\n    var character_category_definition = [];\n\n    var buffer = new ByteBuffer(invoke_def_buffer);\n    while (buffer.position + 1 < buffer.size()) {\n        var class_id = character_category_definition.length;\n        var is_always_invoke = buffer.get();\n        var is_grouping = buffer.get();\n        var max_length = buffer.getInt();\n        var class_name = buffer.getString();\n        character_category_definition.push(new CharacterClass(class_id, class_name, is_always_invoke, is_grouping, max_length));\n    }\n\n    invoke_def.init(character_category_definition);\n\n    return invoke_def;\n};\n\n/**\n * Initializing method\n * @param {Array.<CharacterClass>} character_category_definition Array of CharacterClass\n */\nInvokeDefinitionMap.prototype.init = function (character_category_definition) {\n    if (character_category_definition == null) {\n        return;\n    }\n    for (var i = 0; i < character_category_definition.length; i++) {\n        var character_class = character_category_definition[i];\n        this.map[i] = character_class;\n        this.lookup_table[character_class.class_name] = i;\n    }\n};\n\n/**\n * Get class information by class ID\n * @param {number} class_id\n * @returns {CharacterClass}\n */\nInvokeDefinitionMap.prototype.getCharacterClass = function (class_id) {\n    return this.map[class_id];\n};\n\n/**\n * For building character definition dictionary\n * @param {string} class_name character\n * @returns {number} class_id\n */\nInvokeDefinitionMap.prototype.lookup = function (class_name) {\n    var class_id = this.lookup_table[class_name];\n    if (class_id == null) {\n        return null;\n    }\n    return class_id;\n};\n\n/**\n * Transform from map to binary buffer\n * @returns {Uint8Array}\n */\nInvokeDefinitionMap.prototype.toBuffer = function () {\n    var buffer = new ByteBuffer();\n    for (var i = 0; i < this.map.length; i++) {\n        var char_class = this.map[i];\n        buffer.put(char_class.is_always_invoke);\n        buffer.put(char_class.is_grouping);\n        buffer.putInt(char_class.max_length);\n        buffer.putString(char_class.class_name);\n    }\n    buffer.shrink();\n    return buffer.buffer;\n};\n\nmodule.exports = InvokeDefinitionMap;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar InvokeDefinitionMap = require(\"./InvokeDefinitionMap\");\nvar CharacterClass = require(\"./CharacterClass\");\nvar SurrogateAwareString = require(\"../util/SurrogateAwareString\");\n\nvar DEFAULT_CATEGORY = \"DEFAULT\";\n\n/**\n * CharacterDefinition represents char.def file and\n * defines behavior of unknown word processing\n * @constructor\n */\nfunction CharacterDefinition() {\n    this.character_category_map = new Uint8Array(65536);  // for all UCS2 code points\n    this.compatible_category_map = new Uint32Array(65536);  // for all UCS2 code points\n    this.invoke_definition_map = null;\n}\n\n/**\n * Load CharacterDefinition\n * @param {Uint8Array} cat_map_buffer\n * @param {Uint32Array} compat_cat_map_buffer\n * @param {InvokeDefinitionMap} invoke_def_buffer\n * @returns {CharacterDefinition}\n */\nCharacterDefinition.load = function (cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {\n    var char_def = new CharacterDefinition();\n    char_def.character_category_map = cat_map_buffer;\n    char_def.compatible_category_map = compat_cat_map_buffer;\n    char_def.invoke_definition_map = InvokeDefinitionMap.load(invoke_def_buffer);\n    return char_def;\n};\n\nCharacterDefinition.parseCharCategory = function (class_id, parsed_category_def) {\n    var category = parsed_category_def[1];\n    var invoke = parseInt(parsed_category_def[2]);\n    var grouping = parseInt(parsed_category_def[3]);\n    var max_length = parseInt(parsed_category_def[4]);\n    if (!isFinite(invoke) || (invoke !== 0 && invoke !== 1)) {\n        console.log(\"char.def parse error. INVOKE is 0 or 1 in:\" + invoke);\n        return null;\n    }\n    if (!isFinite(grouping) || (grouping !== 0 && grouping !== 1)) {\n        console.log(\"char.def parse error. GROUP is 0 or 1 in:\" + grouping);\n        return null;\n    }\n    if (!isFinite(max_length) || max_length < 0) {\n        console.log(\"char.def parse error. LENGTH is 1 to n:\" + max_length);\n        return null;\n    }\n    var is_invoke = (invoke === 1);\n    var is_grouping = (grouping === 1);\n\n    return new CharacterClass(class_id, category, is_invoke, is_grouping, max_length);\n};\n\nCharacterDefinition.parseCategoryMapping = function (parsed_category_mapping) {\n    var start = parseInt(parsed_category_mapping[1]);\n    var default_category = parsed_category_mapping[2];\n    var compatible_category = (3 < parsed_category_mapping.length) ? parsed_category_mapping.slice(3) : [];\n    if (!isFinite(start) || start < 0 || start > 0xFFFF) {\n        console.log(\"char.def parse error. CODE is invalid:\" + start);\n    }\n    return { start: start, default: default_category, compatible: compatible_category};\n};\n\nCharacterDefinition.parseRangeCategoryMapping = function (parsed_category_mapping) {\n    var start = parseInt(parsed_category_mapping[1]);\n    var end = parseInt(parsed_category_mapping[2]);\n    var default_category = parsed_category_mapping[3];\n    var compatible_category = (4 < parsed_category_mapping.length) ? parsed_category_mapping.slice(4) : [];\n    if (!isFinite(start) || start < 0 || start > 0xFFFF) {\n        console.log(\"char.def parse error. CODE is invalid:\" + start);\n    }\n    if (!isFinite(end) || end < 0 || end > 0xFFFF) {\n        console.log(\"char.def parse error. CODE is invalid:\" + end);\n    }\n    return { start: start, end: end, default: default_category, compatible: compatible_category};\n};\n\n/**\n * Initializing method\n * @param {Array} category_mapping Array of category mapping\n */\nCharacterDefinition.prototype.initCategoryMappings = function (category_mapping) {\n    // Initialize map by DEFAULT class\n    var code_point;\n    if (category_mapping != null) {\n        for (var i = 0; i < category_mapping.length; i++) {\n            var mapping = category_mapping[i];\n            var end = mapping.end || mapping.start;\n            for (code_point = mapping.start; code_point <= end; code_point++) {\n\n                // Default Category class ID\n                this.character_category_map[code_point] = this.invoke_definition_map.lookup(mapping.default);\n\n                for (var j = 0; j < mapping.compatible.length; j++) {\n                    var bitset = this.compatible_category_map[code_point];\n                    var compatible_category = mapping.compatible[j];\n                    if (compatible_category == null) {\n                        continue;\n                    }\n                    var class_id = this.invoke_definition_map.lookup(compatible_category);  // Default Category\n                    if (class_id == null) {\n                        continue;\n                    }\n                    var class_id_bit = 1 << class_id;\n                    bitset = bitset | class_id_bit;  // Set a bit of class ID 例えば、class_idが3のとき、3ビット目に1を立てる\n                    this.compatible_category_map[code_point] = bitset;\n                }\n            }\n        }\n    }\n    var default_id = this.invoke_definition_map.lookup(DEFAULT_CATEGORY);\n    if (default_id == null) {\n        return;\n    }\n    for (code_point = 0; code_point < this.character_category_map.length; code_point++) {\n        // 他に何のクラスも定義されていなかったときだけ DEFAULT\n        if (this.character_category_map[code_point] === 0) {\n            // DEFAULT class ID に対応するビットだけ1を立てる\n            this.character_category_map[code_point] = 1 << default_id;\n        }\n    }\n};\n\n/**\n * Lookup compatible categories for a character (not included 1st category)\n * @param {string} ch UCS2 character (just 1st character is effective)\n * @returns {Array.<CharacterClass>} character classes\n */\nCharacterDefinition.prototype.lookupCompatibleCategory = function (ch) {\n    var classes = [];\n\n    /*\n     if (SurrogateAwareString.isSurrogatePair(ch)) {\n     // Surrogate pair character codes can not be defined by char.def\n     return classes;\n     }*/\n    var code = ch.charCodeAt(0);\n    var integer;\n    if (code < this.compatible_category_map.length) {\n        integer = this.compatible_category_map[code];  // Bitset\n    }\n\n    if (integer == null || integer === 0) {\n        return classes;\n    }\n\n    for (var bit = 0; bit < 32; bit++) {  // Treat \"bit\" as a class ID\n        if (((integer << (31 - bit)) >>> 31) === 1) {\n            var character_class = this.invoke_definition_map.getCharacterClass(bit);\n            if (character_class == null) {\n                continue;\n            }\n            classes.push(character_class);\n        }\n    }\n    return classes;\n};\n\n\n/**\n * Lookup category for a character\n * @param {string} ch UCS2 character (just 1st character is effective)\n * @returns {CharacterClass} character class\n */\nCharacterDefinition.prototype.lookup = function (ch) {\n\n    var class_id;\n\n    var code = ch.charCodeAt(0);\n    if (SurrogateAwareString.isSurrogatePair(ch)) {\n        // Surrogate pair character codes can not be defined by char.def, so set DEFAULT category\n        class_id = this.invoke_definition_map.lookup(DEFAULT_CATEGORY);\n    } else if (code < this.character_category_map.length) {\n        class_id = this.character_category_map[code];  // Read as integer value\n    }\n\n    if (class_id == null) {\n        class_id = this.invoke_definition_map.lookup(DEFAULT_CATEGORY);\n    }\n\n    return this.invoke_definition_map.getCharacterClass(class_id);\n};\n\nmodule.exports = CharacterDefinition;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar TokenInfoDictionary = require(\"./TokenInfoDictionary\");\nvar CharacterDefinition = require(\"./CharacterDefinition\");\nvar ByteBuffer = require(\"../util/ByteBuffer\");\n\n/**\n * UnknownDictionary\n * @constructor\n */\nfunction UnknownDictionary() {\n    this.dictionary = new ByteBuffer(10 * 1024 * 1024);\n    this.target_map = {};  // class_id (of CharacterClass) -> token_info_id (of unknown class)\n    this.pos_buffer = new ByteBuffer(10 * 1024 * 1024);\n    this.character_definition = null;\n}\n\n// Inherit from TokenInfoDictionary as a super class\nUnknownDictionary.prototype = Object.create(TokenInfoDictionary.prototype);\n\nUnknownDictionary.prototype.characterDefinition = function (character_definition) {\n    this.character_definition = character_definition;\n    return this;\n};\n\nUnknownDictionary.prototype.lookup = function (ch) {\n    return this.character_definition.lookup(ch);\n};\n\nUnknownDictionary.prototype.lookupCompatibleCategory = function (ch) {\n    return this.character_definition.lookupCompatibleCategory(ch);\n};\n\nUnknownDictionary.prototype.loadUnknownDictionaries = function (unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {\n    this.loadDictionary(unk_buffer);\n    this.loadPosVector(unk_pos_buffer);\n    this.loadTargetMap(unk_map_buffer);\n    this.character_definition = CharacterDefinition.load(cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);\n};\n\nmodule.exports = UnknownDictionary;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar doublearray = require(\"doublearray\");\nvar TokenInfoDictionary = require(\"./TokenInfoDictionary\");\nvar ConnectionCosts = require(\"./ConnectionCosts\");\nvar UnknownDictionary = require(\"./UnknownDictionary\");\n\n/**\n * Dictionaries container for Tokenizer\n * @param {DoubleArray} trie\n * @param {TokenInfoDictionary} token_info_dictionary\n * @param {ConnectionCosts} connection_costs\n * @param {UnknownDictionary} unknown_dictionary\n * @constructor\n */\nfunction DynamicDictionaries(trie, token_info_dictionary, connection_costs, unknown_dictionary) {\n    if (trie != null) {\n        this.trie = trie;\n    } else {\n        this.trie = doublearray.builder(0).build([\n            {k: \"\", v: 1}\n        ]);\n    }\n    if (token_info_dictionary != null) {\n        this.token_info_dictionary = token_info_dictionary;\n    } else {\n        this.token_info_dictionary = new TokenInfoDictionary();\n    }\n    if (connection_costs != null) {\n        this.connection_costs = connection_costs;\n    } else {\n        // backward_size * backward_size\n        this.connection_costs = new ConnectionCosts(0, 0);\n    }\n    if (unknown_dictionary != null) {\n        this.unknown_dictionary = unknown_dictionary;\n    } else {\n        this.unknown_dictionary = new UnknownDictionary();\n    }\n}\n\n// from base.dat & check.dat\nDynamicDictionaries.prototype.loadTrie = function (base_buffer, check_buffer) {\n    this.trie = doublearray.load(base_buffer, check_buffer);\n    return this;\n};\n\nDynamicDictionaries.prototype.loadTokenInfoDictionaries = function (token_info_buffer, pos_buffer, target_map_buffer) {\n    this.token_info_dictionary.loadDictionary(token_info_buffer);\n    this.token_info_dictionary.loadPosVector(pos_buffer);\n    this.token_info_dictionary.loadTargetMap(target_map_buffer);\n    return this;\n};\n\nDynamicDictionaries.prototype.loadConnectionCosts = function (cc_buffer) {\n    this.connection_costs.loadConnectionCosts(cc_buffer);\n    return this;\n};\n\nDynamicDictionaries.prototype.loadUnknownDictionaries = function (unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {\n    this.unknown_dictionary.loadUnknownDictionaries(unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);\n    return this;\n};\n\nmodule.exports = DynamicDictionaries;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar path = require(\"path\");\nvar async = require(\"async\");\nvar DynamicDictionaries = require(\"../dict/DynamicDictionaries\");\n\n/**\n * DictionaryLoader base constructor\n * @param {string} dic_path Dictionary path\n * @constructor\n */\nfunction DictionaryLoader(dic_path) {\n    this.dic = new DynamicDictionaries();\n    this.dic_path = dic_path;\n}\n\nDictionaryLoader.prototype.loadArrayBuffer = function (file, callback) {\n    throw new Error(\"DictionaryLoader#loadArrayBuffer should be overwrite\");\n};\n\n/**\n * Load dictionary files\n * @param {DictionaryLoader~onLoad} load_callback Callback function called after loaded\n */\nDictionaryLoader.prototype.load = function (load_callback) {\n    var dic = this.dic;\n    var dic_path = this.dic_path;\n    var loadArrayBuffer = this.loadArrayBuffer;\n\n    async.parallel([\n        // Trie\n        function (callback) {\n            async.map([ \"base.dat.gz\", \"check.dat.gz\" ], function (filename, _callback) {\n                loadArrayBuffer(path.join(dic_path, filename), function (err, buffer) {\n                    if(err) {\n                        return _callback(err);\n                    }\n                    _callback(null, buffer);\n                });\n            }, function (err, buffers) {\n                if(err) {\n                    return callback(err);\n                }\n                var base_buffer = new Int32Array(buffers[0]);\n                var check_buffer = new Int32Array(buffers[1]);\n\n                dic.loadTrie(base_buffer, check_buffer);\n                callback(null);\n            });\n        },\n        // Token info dictionaries\n        function (callback) {\n            async.map([ \"tid.dat.gz\", \"tid_pos.dat.gz\", \"tid_map.dat.gz\" ], function (filename, _callback) {\n                loadArrayBuffer(path.join(dic_path, filename), function (err, buffer) {\n                    if(err) {\n                        return _callback(err);\n                    }\n                    _callback(null, buffer);\n                });\n            }, function (err, buffers) {\n                if(err) {\n                    return callback(err);\n                }\n                var token_info_buffer = new Uint8Array(buffers[0]);\n                var pos_buffer = new Uint8Array(buffers[1]);\n                var target_map_buffer = new Uint8Array(buffers[2]);\n\n                dic.loadTokenInfoDictionaries(token_info_buffer, pos_buffer, target_map_buffer);\n                callback(null);\n            });\n        },\n        // Connection cost matrix\n        function (callback) {\n            loadArrayBuffer(path.join(dic_path, \"cc.dat.gz\"), function (err, buffer) {\n                if(err) {\n                    return callback(err);\n                }\n                var cc_buffer = new Int16Array(buffer);\n                dic.loadConnectionCosts(cc_buffer);\n                callback(null);\n            });\n        },\n        // Unknown dictionaries\n        function (callback) {\n            async.map([ \"unk.dat.gz\", \"unk_pos.dat.gz\", \"unk_map.dat.gz\", \"unk_char.dat.gz\", \"unk_compat.dat.gz\", \"unk_invoke.dat.gz\" ], function (filename, _callback) {\n                loadArrayBuffer(path.join(dic_path, filename), function (err, buffer) {\n                    if(err) {\n                        return _callback(err);\n                    }\n                    _callback(null, buffer);\n                });\n            }, function (err, buffers) {\n                if(err) {\n                    return callback(err);\n                }\n                var unk_buffer = new Uint8Array(buffers[0]);\n                var unk_pos_buffer = new Uint8Array(buffers[1]);\n                var unk_map_buffer = new Uint8Array(buffers[2]);\n                var cat_map_buffer = new Uint8Array(buffers[3]);\n                var compat_cat_map_buffer = new Uint32Array(buffers[4]);\n                var invoke_def_buffer = new Uint8Array(buffers[5]);\n\n                dic.loadUnknownDictionaries(unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);\n                // dic.loadUnknownDictionaries(char_buffer, unk_buffer);\n                callback(null);\n            });\n        }\n    ], function (err) {\n        load_callback(err, dic);\n    });\n};\n\n/**\n * Callback\n * @callback DictionaryLoader~onLoad\n * @param {Object} err Error object\n * @param {DynamicDictionaries} dic Loaded dictionary\n */\n\nmodule.exports = DictionaryLoader;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar zlib = require(\"zlibjs/bin/gunzip.min.js\");\nvar DictionaryLoader = require(\"./DictionaryLoader\");\n\n/**\n * BrowserDictionaryLoader inherits DictionaryLoader, using jQuery XHR for download\n * @param {string} dic_path Dictionary path\n * @constructor\n */\nfunction BrowserDictionaryLoader(dic_path) {\n    DictionaryLoader.apply(this, [dic_path]);\n}\n\nBrowserDictionaryLoader.prototype = Object.create(DictionaryLoader.prototype);\n\n/**\n * Utility function to load gzipped dictionary\n * @param {string} url Dictionary URL\n * @param {BrowserDictionaryLoader~onLoad} callback Callback function\n */\nBrowserDictionaryLoader.prototype.loadArrayBuffer = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"arraybuffer\";\n    xhr.onload = function () {\n        if (this.status > 0 && this.status !== 200) {\n            callback(xhr.statusText, null);\n            return;\n        }\n        var arraybuffer = this.response;\n\n        var gz = new zlib.Zlib.Gunzip(new Uint8Array(arraybuffer));\n        var typed_array = gz.decompress();\n        callback(null, typed_array.buffer);\n    };\n    xhr.onerror = function (err) {\n        callback(err, null);\n    };\n    xhr.send();\n};\n\n/**\n * Callback\n * @callback BrowserDictionaryLoader~onLoad\n * @param {Object} err Error object\n * @param {Uint8Array} buffer Loaded buffer\n */\n\nmodule.exports = BrowserDictionaryLoader;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Tokenizer = require(\"./Tokenizer\");\nvar DictionaryLoader = require(\"./loader/NodeDictionaryLoader\");\n\n/**\n * TokenizerBuilder create Tokenizer instance.\n * @param {Object} option JSON object which have key-value pairs settings\n * @param {string} option.dicPath Dictionary directory path (or URL using in browser)\n * @constructor\n */\nfunction TokenizerBuilder(option) {\n    if (option.dicPath == null) {\n        this.dic_path = \"dict/\";\n    } else {\n        this.dic_path = option.dicPath;\n    }\n}\n\n/**\n * Build Tokenizer instance by asynchronous manner\n * @param {TokenizerBuilder~onLoad} callback Callback function\n */\nTokenizerBuilder.prototype.build = function (callback) {\n    var loader = new DictionaryLoader(this.dic_path);\n    loader.load(function (err, dic) {\n        callback(err, new Tokenizer(dic));\n    });\n};\n\n/**\n * Callback used by build\n * @callback TokenizerBuilder~onLoad\n * @param {Object} err Error object\n * @param {Tokenizer} tokenizer Prepared Tokenizer\n */\n\nmodule.exports = TokenizerBuilder;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ConnectionCosts = require(\"../ConnectionCosts\");\n\n/**\n * Builder class for constructing ConnectionCosts object\n * @constructor\n */\nfunction ConnectionCostsBuilder() {\n    this.lines = 0;\n    this.connection_cost = null;\n}\n\nConnectionCostsBuilder.prototype.putLine = function (line) {\n    if (this.lines === 0) {\n        var dimensions = line.split(\" \");\n        var forward_dimension = dimensions[0];\n        var backward_dimension = dimensions[1];\n\n        if (forward_dimension < 0 || backward_dimension < 0) {\n            throw \"Parse error of matrix.def\";\n        }\n\n        this.connection_cost = new ConnectionCosts(forward_dimension, backward_dimension);\n        this.lines++;\n        return this;\n    }\n\n    var costs = line.split(\" \");\n\n    if (costs.length !== 3) {\n        return this;\n    }\n\n    var forward_id = parseInt(costs[0]);\n    var backward_id = parseInt(costs[1]);\n    var cost = parseInt(costs[2]);\n\n    if (forward_id < 0 || backward_id < 0 || !isFinite(forward_id) || !isFinite(backward_id) ||\n        this.connection_cost.forward_dimension <= forward_id || this.connection_cost.backward_dimension <= backward_id) {\n        throw \"Parse error of matrix.def\";\n    }\n\n    this.connection_cost.put(forward_id, backward_id, cost);\n    this.lines++;\n    return this;\n};\n\nConnectionCostsBuilder.prototype.build = function () {\n    return this.connection_cost;\n};\n\nmodule.exports = ConnectionCostsBuilder;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar CharacterDefinition = require(\"../CharacterDefinition\");\nvar InvokeDefinitionMap = require(\"../InvokeDefinitionMap\");\n\nvar CATEGORY_DEF_PATTERN = /^(\\w+)\\s+(\\d)\\s+(\\d)\\s+(\\d)/;\nvar CATEGORY_MAPPING_PATTERN = /^(0x[0-9A-F]{4})(?:\\s+([^#\\s]+))(?:\\s+([^#\\s]+))*/;\nvar RANGE_CATEGORY_MAPPING_PATTERN = /^(0x[0-9A-F]{4})\\.\\.(0x[0-9A-F]{4})(?:\\s+([^#\\s]+))(?:\\s+([^#\\s]+))*/;\n\n/**\n * CharacterDefinitionBuilder\n * @constructor\n */\nfunction CharacterDefinitionBuilder() {\n    this.char_def = new CharacterDefinition();\n    this.char_def.invoke_definition_map = new InvokeDefinitionMap();\n    this.character_category_definition = [];\n    this.category_mapping = [];\n}\n\nCharacterDefinitionBuilder.prototype.putLine = function (line) {\n    var parsed_category_def = CATEGORY_DEF_PATTERN.exec(line);\n    if (parsed_category_def != null) {\n        var class_id = this.character_category_definition.length;\n        var char_class = CharacterDefinition.parseCharCategory(class_id, parsed_category_def);\n        if (char_class == null) {\n            return;\n        }\n        this.character_category_definition.push(char_class);\n        return;\n    }\n    var parsed_category_mapping = CATEGORY_MAPPING_PATTERN.exec(line);\n    if (parsed_category_mapping != null) {\n        var mapping = CharacterDefinition.parseCategoryMapping(parsed_category_mapping);\n        this.category_mapping.push(mapping);\n    }\n    var parsed_range_category_mapping = RANGE_CATEGORY_MAPPING_PATTERN.exec(line);\n    if (parsed_range_category_mapping != null) {\n        var range_mapping = CharacterDefinition.parseRangeCategoryMapping(parsed_range_category_mapping);\n        this.category_mapping.push(range_mapping);\n    }\n};\n\nCharacterDefinitionBuilder.prototype.build = function () {\n    // TODO If DEFAULT category does not exist, throw error\n    this.char_def.invoke_definition_map.init(this.character_category_definition);\n    this.char_def.initCategoryMappings(this.category_mapping);\n    return this.char_def;\n};\n\nmodule.exports = CharacterDefinitionBuilder;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar doublearray = require(\"doublearray\");\nvar DynamicDictionaries = require(\"../DynamicDictionaries\");\nvar TokenInfoDictionary = require(\"../TokenInfoDictionary\");\nvar ConnectionCostsBuilder = require(\"./ConnectionCostsBuilder\");\nvar CharacterDefinitionBuilder = require(\"./CharacterDefinitionBuilder\");\nvar UnknownDictionary = require(\"../UnknownDictionary\");\n\n/**\n * Build dictionaries (token info, connection costs)\n *\n * Generates from matrix.def\n * cc.dat: Connection costs\n *\n * Generates from *.csv\n * dat.dat: Double array\n * tid.dat: Token info dictionary\n * tid_map.dat: targetMap\n * tid_pos.dat: posList (part of speech)\n */\nfunction DictionaryBuilder() {\n    // Array of entries, each entry in Mecab form\n    // (0: surface form, 1: left id, 2: right id, 3: word cost, 4: part of speech id, 5-: other features)\n    this.tid_entries = [];\n    this.unk_entries = [];\n    this.cc_builder = new ConnectionCostsBuilder();\n    this.cd_builder = new CharacterDefinitionBuilder();\n}\n\nDictionaryBuilder.prototype.addTokenInfoDictionary = function (line) {\n    var new_entry = line.split(\",\");\n    this.tid_entries.push(new_entry);\n    return this;\n};\n\n/**\n * Put one line of \"matrix.def\" file for building ConnectionCosts object\n * @param {string} line is a line of \"matrix.def\"\n */\nDictionaryBuilder.prototype.putCostMatrixLine = function (line) {\n    this.cc_builder.putLine(line);\n    return this;\n};\n\nDictionaryBuilder.prototype.putCharDefLine = function (line) {\n    this.cd_builder.putLine(line);\n    return this;\n};\n\n/**\n * Put one line of \"unk.def\" file for building UnknownDictionary object\n * @param {string} line is a line of \"unk.def\"\n */\nDictionaryBuilder.prototype.putUnkDefLine = function (line) {\n    this.unk_entries.push(line.split(\",\"));\n    return this;\n};\n\nDictionaryBuilder.prototype.build = function () {\n    var dictionaries = this.buildTokenInfoDictionary();\n    var unknown_dictionary = this.buildUnknownDictionary();\n\n    return new DynamicDictionaries(dictionaries.trie, dictionaries.token_info_dictionary, this.cc_builder.build(), unknown_dictionary);\n};\n\n/**\n * Build TokenInfoDictionary\n *\n * @returns {{trie: *, token_info_dictionary: *}}\n */\nDictionaryBuilder.prototype.buildTokenInfoDictionary = function () {\n\n    var token_info_dictionary = new TokenInfoDictionary();\n\n    // using as hashmap, string -> string (word_id -> surface_form) to build dictionary\n    var dictionary_entries = token_info_dictionary.buildDictionary(this.tid_entries);\n\n    var trie = this.buildDoubleArray();\n\n    for (var token_info_id in dictionary_entries) {\n        var surface_form = dictionary_entries[token_info_id];\n        var trie_id = trie.lookup(surface_form);\n\n        // Assertion\n        // if (trie_id < 0) {\n        //     console.log(\"Not Found:\" + surface_form);\n        // }\n\n        token_info_dictionary.addMapping(trie_id, token_info_id);\n    }\n\n    return {\n        trie: trie,\n        token_info_dictionary: token_info_dictionary\n    };\n};\n\nDictionaryBuilder.prototype.buildUnknownDictionary = function () {\n\n    var unk_dictionary = new UnknownDictionary();\n\n    // using as hashmap, string -> string (word_id -> surface_form) to build dictionary\n    var dictionary_entries = unk_dictionary.buildDictionary(this.unk_entries);\n\n    var char_def = this.cd_builder.build(); // Create CharacterDefinition\n\n    unk_dictionary.characterDefinition(char_def);\n\n    for (var token_info_id in dictionary_entries) {\n        var class_name = dictionary_entries[token_info_id];\n        var class_id = char_def.invoke_definition_map.lookup(class_name);\n\n        // Assertion\n        // if (trie_id < 0) {\n        //     console.log(\"Not Found:\" + surface_form);\n        // }\n\n        unk_dictionary.addMapping(class_id, token_info_id);\n    }\n\n    return unk_dictionary;\n};\n\n/**\n * Build double array trie\n *\n * @returns {DoubleArray} Double-Array trie\n */\nDictionaryBuilder.prototype.buildDoubleArray = function () {\n    var trie_id = 0;\n    var words = this.tid_entries.map(function (entry) {\n        var surface_form = entry[0];\n        return { k: surface_form, v: trie_id++ };\n    });\n\n    var builder = doublearray.builder(1024 * 1024);\n    return builder.build(words);\n};\n\nmodule.exports = DictionaryBuilder;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar TokenizerBuilder = require(\"./TokenizerBuilder\");\nvar DictionaryBuilder = require(\"./dict/builder/DictionaryBuilder\");\n\n// Public methods\nvar kuromoji = {\n    builder: function (option) {\n        return new TokenizerBuilder(option);\n    },\n    dictionaryBuilder: function () {\n        return new DictionaryBuilder();\n    }\n};\n\nmodule.exports = kuromoji;\n","// LICENSE : MIT\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tokenize = exports.getTokenizer = void 0;\nvar path_1 = __importDefault(require(\"path\"));\nvar lru_map_1 = require(\"lru_map\");\nvar Deferred_1 = __importDefault(require(\"./Deferred\"));\nvar kuromoji = require(\"kuromoji\");\nvar deferred = new Deferred_1.default();\nvar getNodeModuleDirPath = function () {\n    // Node\n    if (typeof process !== \"undefined\"\n        && typeof process.env === \"object\"\n        && process.env.KUROMOJIN_DIC_PATH) {\n        return process.env.KUROMOJIN_DIC_PATH;\n    }\n    // Browser\n    // if window.kuromojin.dicPath is defined, use it as default dict path.\n    var maybeKuromojiWindow = typeof window != \"undefined\" ? window : undefined;\n    if (typeof maybeKuromojiWindow !== \"undefined\" &&\n        typeof maybeKuromojiWindow.kuromojin === \"object\" &&\n        typeof maybeKuromojiWindow.kuromojin.dicPath === \"string\") {\n        return maybeKuromojiWindow.kuromojin.dicPath;\n    }\n    var kuromojiDir = path_1.default.dirname(require.resolve(\"kuromoji\"));\n    return path_1.default.join(kuromojiDir, \"..\", \"dict\");\n};\n// cache for tokenizer\nvar _tokenizer = null;\n// lock boolean\nvar isLoading = false;\n// cache for tokenize\nvar tokenizeCacheMap = new lru_map_1.LRUMap(10000);\nfunction getTokenizer(options) {\n    if (options === void 0) { options = { dicPath: getNodeModuleDirPath() }; }\n    if (_tokenizer) {\n        return Promise.resolve(_tokenizer);\n    }\n    if (isLoading) {\n        return deferred.promise;\n    }\n    isLoading = true;\n    // load dict\n    kuromoji.builder(options).build(function (err, tokenizer) {\n        if (err) {\n            return deferred.reject(err);\n        }\n        _tokenizer = tokenizer;\n        deferred.resolve(tokenizer);\n    });\n    return deferred.promise;\n}\nexports.getTokenizer = getTokenizer;\nfunction tokenize(text, options) {\n    return getTokenizer(options).then(function (tokenizer) {\n        if (options === null || options === void 0 ? void 0 : options.noCacheTokenize) {\n            return tokenizer.tokenizeForSentence(text);\n        }\n        else {\n            var cache = tokenizeCacheMap.get(text);\n            if (cache) {\n                return cache;\n            }\n            var tokens = tokenizer.tokenizeForSentence(text);\n            tokenizeCacheMap.set(text, tokens);\n            return tokens;\n        }\n    });\n}\nexports.tokenize = tokenize;\n//# sourceMappingURL=kuromojin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tokenize = exports.getTokenizer = void 0;\nvar kuromojin_1 = require(\"./kuromojin\");\nObject.defineProperty(exports, \"getTokenizer\", { enumerable: true, get: function () { return kuromojin_1.getTokenizer; } });\nObject.defineProperty(exports, \"tokenize\", { enumerable: true, get: function () { return kuromojin_1.tokenize; } });\n//# sourceMappingURL=index.js.map"],"names":["g","c","exports","this","e","n","a","b","d","m","h","f","l","j","k","i","Deferred_1","Deferred","_this","resolve","reject","ViterbiNode","node_name","node_cost","start_pos","length","type","left_id","right_id","surface_form","ViterbiNode_1","require$$0","ViterbiLattice","node","last_pos","prev_nodes","last_index","ViterbiLattice_1","SurrogateAwareString","str","pos","ch","index","surrogate_aware_index","surrogate_aware_start_index","surrogate_aware_end_index","upper","lower","utf16_code","SurrogateAwareString_1","require$$1","require$$2","ViterbiBuilder","dic","sentence_str","lattice","sentence","key","trie_id","word_cost","tail","vocabulary","token_info_ids","token_info_id","surrogate_aware_tail","head_char","head_char_class","next_char","next_char_class","unk_ids","unk_id","ViterbiBuilder_1","ViterbiSearcher","connection_costs","nodes","cost","shortest_prev_node","prev_node","edge_cost","_cost","shortest_path","eos","node_back","ViterbiSearcher_1","IpadicFormatter","word_id","position","features","token","IpadicFormatter_1","PUNCTUATION","Tokenizer","input","sentences","text","tokens","best_path","features_line","Tokenizer_1","p","aa","t","x","B","C","D","E","G","r","q","v","K","L","M","N","P","da","ea","Q","s","F","H","w","z","O","I","u","Z","R","S","fa","ga","ha","T","ia","ja","ka","U","V","W","la","X","Y","ma","$","global","factory","slice","arrayLike","start","newLen","newArr","idx","apply","fn","args","callArgs","initialParams","callback","isObject","value","hasSetImmediate","hasNextTick","fallback","wrap","defer","_defer","setImmediate$1","asyncify","func","result","invokeCallback","err","error","rethrow","supportsSymbol","isAsync","wrapAsync","asyncFn","applyEach$1","eachfn","fns","go","that","cb","freeGlobal","freeSelf","root","Symbol$1","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag$1","getRawTag","isOwn","tag","unmasked","objectProto$1","nativeObjectToString$1","objectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","asyncTag","funcTag","genTag","proxyTag","isFunction","MAX_SAFE_INTEGER","isLength","isArrayLike","breakLoop","noop","once","callFn","iteratorSymbol","getIterator","coll","baseTimes","iteratee","isObjectLike","argsTag","baseIsArguments","objectProto$3","hasOwnProperty$2","propertyIsEnumerable","isArguments","isArray","stubFalse","freeExports","freeModule","module","moduleExports","Buffer","nativeIsBuffer","isBuffer","MAX_SAFE_INTEGER$1","reIsUint","isIndex","argsTag$1","arrayTag","boolTag","dateTag","errorTag","funcTag$1","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","baseIsTypedArray","baseUnary","freeExports$1","freeModule$1","moduleExports$1","freeProcess","nodeUtil","types","nodeIsTypedArray","isTypedArray","objectProto$2","hasOwnProperty$1","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","objectProto$5","isPrototype","Ctor","proto","overArg","transform","arg","nativeKeys","objectProto$4","hasOwnProperty$3","baseKeys","object","keys","createArrayIterator","len","createES2015Iterator","iterator","item","createObjectIterator","obj","okeys","onlyOnce","_eachOfLimit","limit","nextElem","done","running","looping","iterateeCallback","replenish","elem","eachOfLimit","doLimit","iterable","eachOfArrayLike","completed","iteratorCallback","eachOfGeneric","eachOf","eachOfImplementation","doParallel","_asyncMap","arr","results","counter","_iteratee","_","map","applyEach","doParallelLimit","mapLimit","mapSeries","applyEachSeries","arrayEach","array","createBaseFor","fromRight","keysFunc","props","baseFor","baseForOwn","baseFindIndex","predicate","fromIndex","baseIsNaN","strictIndexOf","baseIndexOf","auto","tasks","concurrency","keys$$1","numTasks","runningTasks","hasError","listeners","readyTasks","readyToCheck","uncheckedDependencies","task","enqueueTask","dependencies","remainingDependencies","dependencyName","addListener","checkForDeadlocks","processQueue","runTask","run","taskName","taskListeners","taskComplete","taskCallback","safeResults","val","rkey","taskFn","currentTask","getDependents","dependent","arrayMap","symbolTag","isSymbol","INFINITY","symbolProto","symbolToString","baseToString","baseSlice","end","castSlice","charsEndIndex","strSymbols","chrSymbols","charsStartIndex","asciiToArray","string","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsVarRange","rsZWJ","reHasUnicode","hasUnicode","rsAstralRange$1","rsComboMarksRange$1","reComboHalfMarksRange$1","rsComboSymbolsRange$1","rsComboRange$1","rsVarRange$1","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsZWJ$1","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsSymbol","reUnicode","unicodeToArray","stringToArray","toString","reTrim","trim","chars","guard","FN_ARGS","FN_ARG_SPLIT","FN_ARG","STRIP_COMMENTS","parseParams","autoInject","newTasks","params","fnIsAsync","hasNoDeps","newTask","taskCb","newArgs","name","DLL","setInitial","dll","newNode","curr","testFn","next","queue","worker","payload","_worker","numRunning","workersList","processingScheduled","_insert","data","insertAtFront","_next","isProcessing","cargo","eachOfSeries","reduce","memo","seq","_functions","newargs","nextargs","compose","_concat","concatLimit","mapResults","concat","concatSeries","constant","values","identity","_createTester","check","getResult","testPassed","testResult","_findGetResult","detect","detectLimit","detectSeries","consoleFunc","dir","doDuring","test","_fn","_test","truth","doWhilst","doUntil","during","_withoutIndex","eachLimit","eachLimit$1","eachSeries","ensureAsync","sync","innerArgs","notId","every","everyLimit","everySeries","baseProperty","filterArray","truthValues","filterGeneric","_filter","filter","filterLimit","filterSeries","forever","errback","groupByLimit","groupBy","groupBySeries","log","mapValuesLimit","newObj","mapValues","mapValuesSeries","has","memoize","hasher","queues","memoized","_defer$1","nextTick","_parallel","parallelLimit","parallelLimit$1","queue$1","items","priorityQueue","priority","nextNode","race","reduceRight","reversed","reflect","reflectCallback","cbArg","reflectAll","reject$1","rejectLimit","rejectSeries","constant$1","retry","opts","DEFAULT_TIMES","DEFAULT_INTERVAL","options","parseTimes","acc","_task","attempt","retryAttempt","retryable","series","some","someLimit","someSeries","sortBy","criteria","comparator","left","right","timeout","milliseconds","info","timedOut","timer","timeoutCallback","nativeCeil","nativeMax","baseRange","step","timeLimit","count","times","timesSeries","accumulator","tryEach","res","unmemoize","whilst","until","waterfall","taskIndex","nextTask","TERM_CHAR","TERM_CODE","ROOT_ID","NOT_FOUND","BASE_SIGNED","CHECK_SIGNED","BASE_BYTES","CHECK_BYTES","MEMORY_EXPAND_RATIO","newBC","initial_size","initBase","_base","last_used_id","initCheck","_check","realloc","min_size","new_size","base_new_array","newArrayBuffer","base","check_new_array","first_unused_node","base_buffer","check_buffer","base_value","check_value","unused_count","size","dump_base","dump_check","DoubleArrayBuilder","record","sorted","DoubleArray","buff_keys","stringToUtf8Bytes","k1","k2","b1","b2","min_length","parent_index","children_info","child_code","child_start","child_len","child_index","current_char","next_pos","parent_id","bc","code","child_id","prev_unused_id","next_unused_id","empty_area_found","candidate_id","buffer","parent","child","grand_child","utf8BytesToString","arrayCopy","signed","bytes","src","src_offset","dstU8","srcU8","unicode_code","b3","b4","doublearray","ByteBuffer","new_array","num","b0","buf","ByteBuffer_1","TokenInfoDictionary","entries","dictionary_entries","entry","feature","pos_id","source","target","mapping","map_keys_size","map_values_size","array_buffer","token_info_id_str","TokenInfoDictionary_1","ConnectionCosts","forward_dimension","backward_dimension","forward_id","backward_id","connection_costs_buffer","ConnectionCosts_1","CharacterClass","class_id","class_name","is_always_invoke","is_grouping","max_length","CharacterClass_1","InvokeDefinitionMap","invoke_def_buffer","invoke_def","character_category_definition","character_class","char_class","InvokeDefinitionMap_1","DEFAULT_CATEGORY","CharacterDefinition","cat_map_buffer","compat_cat_map_buffer","char_def","parsed_category_def","category","invoke","grouping","is_invoke","parsed_category_mapping","default_category","compatible_category","category_mapping","code_point","bitset","class_id_bit","default_id","classes","integer","bit","CharacterDefinition_1","UnknownDictionary","character_definition","unk_buffer","unk_pos_buffer","unk_map_buffer","UnknownDictionary_1","require$$3","DynamicDictionaries","trie","token_info_dictionary","unknown_dictionary","token_info_buffer","pos_buffer","target_map_buffer","cc_buffer","DynamicDictionaries_1","path","async","DictionaryLoader","dic_path","file","load_callback","loadArrayBuffer","filename","_callback","buffers","DictionaryLoader_1","zlib","BrowserDictionaryLoader","url","xhr","arraybuffer","gz","typed_array","BrowserDictionaryLoader_1","TokenizerBuilder","option","loader","TokenizerBuilder_1","ConnectionCostsBuilder","line","dimensions","costs","ConnectionCostsBuilder_1","CATEGORY_DEF_PATTERN","CATEGORY_MAPPING_PATTERN","RANGE_CATEGORY_MAPPING_PATTERN","CharacterDefinitionBuilder","parsed_range_category_mapping","range_mapping","CharacterDefinitionBuilder_1","require$$4","require$$5","DictionaryBuilder","new_entry","dictionaries","unk_dictionary","words","builder","DictionaryBuilder_1","kuromoji","kuromoji_1","__importDefault","mod","kuromojin","path_1","lru_map_1","deferred","getNodeModuleDirPath","maybeKuromojiWindow","kuromojiDir","_tokenizer","isLoading","tokenizeCacheMap","getTokenizer","tokenizer","tokenize","cache","kuromojin_1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]}