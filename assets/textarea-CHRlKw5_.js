import{j as g}from"./jsx-runtime-D_zvdyIk.js";import{r as t}from"./iframe-6r5P-tC5.js";import{u as N,r as o,a as w,c as U,s as V,R as B,h as C,C as D,b as d,d as W}from"./observer-BRJyxK-O.js";const F=t.memo(({_ref:S,_handle:R,_render:r,_width:f})=>{const[l,m]=t.useState("");return t.useImperativeHandle(R,()=>m,[]),g.jsxs("div",{ref:S,"aria-hidden":!0,style:t.useMemo(()=>({width:f,transform:"translate(0px, 0px)",pointerEvents:"none",userSelect:"none",msUserSelect:"none",WebkitUserSelect:"none",boxSizing:"content-box",textSizeAdjust:"100%",WebkitTextSizeAdjust:"100%",MozTextSizeAdjust:"100%"}),[f]),onClick:d,onMouseDown:d,onMouseUp:d,onMouseOver:d,onMouseOut:d,onMouseMove:d,children:[t.useMemo(()=>r?r(l):l,[l,r]),D]})}),K=t.forwardRef(({children:S,autoHeight:R,style:r,onChange:f,onKeyDown:l,onSelectionChange:m,...y},_)=>{const i=t.useRef(null),v=t.useRef(null),k=t.useRef(null),[[E,j,q,z],H]=t.useState([0,0,0,0]),[T,O]=t.useState(!1),A=t.useRef(""),[[c,b],I]=t.useState([null,null]),x=N(()=>W(i,I)),h=E+q,p=j+z,M=!!(h+p);return t.useImperativeHandle(_,()=>{const e=i[o],n={get selectionStart(){return x._getSelectionStart()},get selectionEnd(){return x._getSelectionEnd()},setRangeText(u,a,s,P){e.setRangeText?e.setRangeText(u,a,s,P):(e.focus(),e.selectionStart=a,e.selectionEnd=s,document.execCommand("insertText",!1,u)),e.dispatchEvent(new Event("input",{bubbles:!0}))}};return new Proxy(e,{get(u,a){if(n[a])return n[a];const s=u[a];return typeof s=="function"?s.bind(u):s},set(u,a,s){return u[a]=s,!0}})},[]),w(()=>{const e=i[o],n=v[o];if(!(!e||!n))return U(e,n,x,H,O)},[]),w(()=>{const e=i[o];e&&k[o](e.value)},[y.value]),w(()=>{const e=i[o],n=v[o];!n||!e||V(e,n,A,r)},[r]),t.useEffect(()=>{if(!(c==null||b==null||!m))if(!T)m({focused:!1,selectionStart:c,selectionEnd:b});else{const n=B(v[o],c,c+1).getBoundingClientRect();m({focused:!0,top:n.top,left:n.left,height:n.height,selectionStart:c,selectionEnd:b})}},[T,c,b]),t.useEffect(()=>{const e=i[o];!R||!e||(e.style.height="auto",e.style.height=`${e.scrollHeight}px`)}),g.jsxs("div",{style:t.useMemo(()=>{let e=h,n=p;return r&&(C(r.width)&&(e=r.width),C(r.height)&&(n=r.height)),{display:"inline-block",position:"relative",width:e,height:n}},[h,p,r]),children:[g.jsx("div",{style:t.useMemo(()=>{const e={position:"absolute",overflow:"hidden",top:0,left:0,width:h,height:p};return r&&["background","backgroundColor"].forEach(n=>{r[n]&&(e[n]=r[n])}),e},[h,p,r]),children:g.jsx(F,{_ref:v,_handle:k,_render:S,_width:E})}),g.jsx("textarea",{...y,ref:i,style:t.useMemo(()=>({...r,background:"transparent",margin:0,position:"absolute",...!M&&{position:void 0,verticalAlign:"top"}}),[r,M]),onChange:t.useCallback(e=>{k[o]?.(e.target.value),f?.(e)},[f]),onKeyDown:t.useCallback(e=>{e.nativeEvent.isComposing||e.nativeEvent.keyCode===229||(l?.(e),x._updateSeletion())},[l])})]})});K.__docgenInfo={description:"Textarea component with some extra props. See {@link RichTextareaProps} and {@link RichTextareaHandle}.",methods:[],displayName:"RichTextarea",props:{children:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => React.ReactNode",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"Render function to create customized view from value.\n\nThis function should return ReactNodes which texts are positioned the same as textarea (see examples for detailed usage).\n\nOn the rendered nodes, currently limited event handlers will work.\n- `onClick`\n- `onMouseOver`\n- `onMouseOut`\n- `onMouseMove`\n- `onMouseDown`\n- `onMouseUp`\n@defaultValue undefined"},autoHeight:{required:!1,tsType:{name:"boolean"},description:"If true, textarea height is automatically resized and height of style prop does not work.\nSet `maxHeight` to style prop if you need limit.\nSet `rows` prop to 1 if you need single-line textarea.\n@defaultValue undefined"},onSelectionChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(pos: CaretPosition) => void",signature:{arguments:[{type:{name:"union",raw:`| {
    focused: false;
    selectionStart: number;
    selectionEnd: number;
  }
| {
    focused: true;
    selectionStart: number;
    selectionEnd: number;
    top: number;
    left: number;
    height: number;
  }`,elements:[{name:"signature",type:"object",raw:`{
  focused: false;
  selectionStart: number;
  selectionEnd: number;
}`,signature:{properties:[{key:"focused",value:{name:"literal",value:"false",required:!0}},{key:"selectionStart",value:{name:"number",required:!0}},{key:"selectionEnd",value:{name:"number",required:!0}}]}},{name:"signature",type:"object",raw:`{
  focused: true;
  selectionStart: number;
  selectionEnd: number;
  top: number;
  left: number;
  height: number;
}`,signature:{properties:[{key:"focused",value:{name:"literal",value:"true",required:!0}},{key:"selectionStart",value:{name:"number",required:!0}},{key:"selectionEnd",value:{name:"number",required:!0}},{key:"top",value:{name:"number",required:!0}},{key:"left",value:{name:"number",required:!0}},{key:"height",value:{name:"number",required:!0}}]}}]},name:"pos"}],return:{name:"void"}}},description:`Called when selection in textarea changes. It gives position of caret at the time, which is useful to position menu.
@defaultValue undefined`}},composes:["Omit"]};export{K as R};
